{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "candidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        }
      ],
      "name": "voterAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "_generateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        }
      ],
      "name": "createVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidatesList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotersList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "idNo",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "canVote",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Voter[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_voteTo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        412
      ]
    },
    "id": 413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 412,
        "linearizedBaseContracts": [
          412
        ],
        "name": "Voting",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "adminAddress",
            "nameLocation": "55:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "47:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "47:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "electionOn",
            "nameLocation": "78:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "73:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "73:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "91:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "121:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "139:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "139:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11,
                          "name": "adminAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "153:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "139:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742062652061646d696e20746f20646f20746869732e",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "167:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4576645ad51b4521cb4d352297a95e08b68535df714c3278d050f291b06d9645",
                          "typeString": "literal_string \"You must be admin to do this.\""
                        },
                        "value": "You must be admin to do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4576645ad51b4521cb4d352297a95e08b68535df714c3278d050f291b06d9645",
                          "typeString": "literal_string \"You must be admin to do this.\""
                        }
                      ],
                      "id": 8,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "131:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "131:68:0"
                },
                {
                  "id": 16,
                  "nodeType": "PlaceholderStatement",
                  "src": "209:1:0"
                }
              ]
            },
            "id": 18,
            "name": "onlyOwner",
            "nameLocation": "111:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "121:0:0"
            },
            "src": "102:115:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 24,
            "name": "voterAdded",
            "nameLocation": "230:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "248:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "241:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "261:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "254:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "240:34:0"
            },
            "src": "224:51:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "candidateAdded",
            "nameLocation": "286:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "308:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "301:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "321:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "314:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "342:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "335:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:49:0"
            },
            "src": "280:70:0"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "455:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "448:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 33,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "448:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "idNo",
                "nameLocation": "474:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "469:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "495:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "488:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 37,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "canVote",
                "nameLocation": "522:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "517:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 39,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "517:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "544:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "539:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "388:5:0",
            "nodeType": "StructDefinition",
            "scope": 412,
            "src": "381:176:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Candidate",
            "id": 54,
            "members": [
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "646:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "639:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 44,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "639:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "667:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "660:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 46,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "660:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "696:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "689:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 48,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "689:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "noOfVotes",
                "nameLocation": "717:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "712:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "712:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "741:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "736:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 52,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "569:9:0",
            "nodeType": "StructDefinition",
            "scope": 412,
            "src": "562:192:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "772:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "764:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
              "typeString": "struct Voting.Voter[]"
            },
            "typeName": {
              "baseType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "764:5:0"
                },
                "referencedDeclaration": 43,
                "src": "764:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$43_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              },
              "id": 57,
              "nodeType": "ArrayTypeName",
              "src": "764:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Voter[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "ballot",
            "nameLocation": "806:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "784:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "792:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "784:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "800:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "858:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "846:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54,
                  "src": "846:9:0"
                },
                "referencedDeclaration": 54,
                "src": "846:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 65,
              "nodeType": "ArrayTypeName",
              "src": "846:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "votersList",
            "nameLocation": "896:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 412,
            "src": "874:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "882:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "874:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 68,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "890:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "960:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "adminAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "970:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "985:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "985:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "970:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "970:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1031:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1040:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1049:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1058:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1062:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 81,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1021:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$54_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1021:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 78,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1005:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1005:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$54_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1097:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1106:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1109:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1118:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1125:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 93,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1091:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$43_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1091:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1079:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1079:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$_t_struct$_Voter_$43_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:53:0"
                }
              ]
            },
            "id": 103,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:0"
            },
            "scope": 412,
            "src": "947:192:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1191:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1201:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1214:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1201:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:17:0"
                }
              ]
            },
            "functionSelector": "62d73eb8",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1181:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1181:9:0"
              }
            ],
            "name": "startElection",
            "nameLocation": "1158:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:0"
            },
            "scope": 412,
            "src": "1149:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1275:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1285:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1298:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1285:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:18:0"
                }
              ]
            },
            "functionSelector": "59f78468",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1265:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1265:9:0"
              }
            ],
            "name": "endElection",
            "nameLocation": "1244:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:0:0"
            },
            "scope": 412,
            "src": "1235:75:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1443:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1461:31:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 133,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1462:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                                "typeString": "struct Voting.Voter storage ref[] storage ref"
                              }
                            },
                            "id": 137,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 134,
                                "name": "votersList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "1469:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 136,
                              "indexExpression": {
                                "id": 135,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "1480:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1469:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1462:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$43_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1462:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220696420697320616c72656164792072656769737465726564212e",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        },
                        "value": "Voter id is already registered!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1453:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 147,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1557:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1564:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 149,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1569:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1584:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1590:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 146,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1551:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$43_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1551:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1539:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1539:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$_t_struct$_Voter_$43_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:57:0"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 155,
                        "name": "votersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1606:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 157,
                      "indexExpression": {
                        "id": 156,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1617:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1606:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 158,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1624:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1624:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1640:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1624:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1606:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1676:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 166,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1683:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 164,
                      "name": "voterAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1665:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "1660:37:0"
                }
              ]
            },
            "functionSelector": "d373f8d4",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVoter",
            "nameLocation": "1364:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1390:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1376:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1402:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1397:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "1421:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1407:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:60:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1443:0:0"
            },
            "scope": 412,
            "src": "1355:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "1780:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 179,
                    "name": "voters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "1797:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                      "typeString": "struct Voting.Voter storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "1790:13:0"
                }
              ]
            },
            "functionSelector": "bc86f385",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1735:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1735:9:0"
              }
            ],
            "name": "getVotersList",
            "nameLocation": "1719:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:2:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "1765:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Voter_$43_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Voter[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 175,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 174,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43,
                        "src": "1765:5:0"
                      },
                      "referencedDeclaration": 43,
                      "src": "1765:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$43_storage_ptr",
                        "typeString": "struct Voting.Voter"
                      }
                    },
                    "id": 176,
                    "nodeType": "ArrayTypeName",
                    "src": "1765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Voter[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1764:16:0"
            },
            "scope": 412,
            "src": "1710:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "1893:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 191,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1910:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "1903:17:0"
                }
              ]
            },
            "functionSelector": "4aba5f34",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1844:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1844:9:0"
              }
            ],
            "name": "getCandidatesList",
            "nameLocation": "1824:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:2:0"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1874:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$54_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 187,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 186,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "1874:9:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "1874:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 188,
                    "nodeType": "ArrayTypeName",
                    "src": "1874:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:20:0"
            },
            "scope": 412,
            "src": "1815:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "2095:454:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2113:11:0",
                        "subExpression": {
                          "id": 206,
                          "name": "electionOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "2114:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e2054686520656c656374696f6e2068617320616c726561647920626567616e2e20596f752063616e6e6f7420616464206e65772063616e646964617465732e",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2126:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e7ce420f3481adb7b2285b207435956e3b68ccd6f76c670083edfc0f7c45d3b",
                          "typeString": "literal_string \"Sorry. The election has already began. You cannot add new candidates.\""
                        },
                        "value": "Sorry. The election has already began. You cannot add new candidates."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e7ce420f3481adb7b2285b207435956e3b68ccd6f76c670083edfc0f7c45d3b",
                          "typeString": "literal_string \"Sorry. The election has already began. You cannot add new candidates.\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2105:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2105:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:93:0"
                },
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "2213:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2208:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 214,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2237:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 215,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2244:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 216,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2259:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 213,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "2223:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2208:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2285:34:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 220,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "2286:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                                "typeString": "struct Voting.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 224,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 221,
                                "name": "ballot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "2297:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 223,
                              "indexExpression": {
                                "id": 222,
                                "name": "candId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 212,
                                "src": "2304:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2297:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2286:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$54_storage",
                              "typeString": "struct Voting.Candidate storage ref"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "2286:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e64696461746520616c726561647920696e2062616c6c6f74206c697374212e",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2321:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        },
                        "value": "Candidate already in ballot list!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2277:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2277:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 234,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2394:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 235,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "2401:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 236,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "2416:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2425:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2428:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 233,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "2384:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$54_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2384:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 230,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "2368:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2368:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$54_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:66:0"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 242,
                        "name": "ballot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "2444:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "id": 243,
                        "name": "candId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2451:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2444:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 245,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "2461:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2461:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2481:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2461:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2444:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 252,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2512:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 253,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2519:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 254,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2534:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 251,
                      "name": "candidateAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2497:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "EmitStatement",
                  "src": "2492:50:0"
                }
              ]
            },
            "functionSelector": "1d823d32",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 203,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 202,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "2078:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2078:9:0"
              }
            ],
            "name": "createCandidate",
            "nameLocation": "1989:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2019:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2005:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2040:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2026:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2069:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2055:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:73:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:0:0"
            },
            "scope": 412,
            "src": "1980:569:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "2681:117:0",
              "statements": [
                {
                  "assignments": [
                    270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2696:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "2691:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 269,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2691:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 276,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 260,
                                "src": "2735:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 277,
                                "name": "_constituency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 262,
                                "src": "2742:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 278,
                                "name": "_symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 264,
                                "src": "2757:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 274,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2718:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2718:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2718:47:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 273,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2708:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2708:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2703:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2703:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2691:76:0"
                },
                {
                  "expression": {
                    "id": 283,
                    "name": "hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 270,
                    "src": "2787:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 268,
                  "id": 284,
                  "nodeType": "Return",
                  "src": "2780:11:0"
                }
              ]
            },
            "functionSelector": "79ae584d",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateHash",
            "nameLocation": "2568:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2596:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "2582:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2617:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "2603:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2646:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "2632:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2581:73:0"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "2676:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:6:0"
            },
            "scope": 412,
            "src": "2559:239:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "2918:736:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 298,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2936:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 302,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 299,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "2943:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 301,
                            "indexExpression": {
                              "id": 300,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "2954:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2943:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2936:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$43_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "2936:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f74207265676973746572656420746f20766f74652e",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2973:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        },
                        "value": "You are not registered to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2928:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2928:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "2928:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 308,
                        "name": "electionOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "3025:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e2054686520656c656374696f6e2068617320656e6465642e",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3037:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        },
                        "value": "Sorry. The election has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3017:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 313,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3088:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 317,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 314,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "3095:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 316,
                            "indexExpression": {
                              "id": 315,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "3106:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3095:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3088:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$43_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "3088:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f7520616c726561647920766f7465642e",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3126:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        },
                        "value": "Sorry. You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3080:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3080:74:0"
                },
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "3169:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "3164:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3164:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 325,
                        "name": "_voteTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3192:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 326,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3201:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 327,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3216:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 324,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3178:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3164:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 331,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3242:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                              "typeString": "struct Voting.Candidate storage ref[] storage ref"
                            }
                          },
                          "id": 335,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 332,
                              "name": "ballot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3253:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 334,
                            "indexExpression": {
                              "id": 333,
                              "name": "candId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "3260:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3253:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3242:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$54_storage",
                            "typeString": "struct Voting.Candidate storage ref"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "3242:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c65637465642063616e646964617465206e6f7420666f756e642e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3277:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        },
                        "value": "Selected candidate not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3234:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 344,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66,
                                      "src": "3354:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                                        "typeString": "struct Voting.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 348,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 345,
                                        "name": "ballot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62,
                                        "src": "3365:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 347,
                                      "indexExpression": {
                                        "id": 346,
                                        "name": "candId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 323,
                                        "src": "3372:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3365:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3354:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$54_storage",
                                      "typeString": "struct Voting.Candidate storage ref"
                                    }
                                  },
                                  "id": 349,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47,
                                  "src": "3354:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 342,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3337:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3337:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3337:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 341,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3327:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3327:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 355,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58,
                                      "src": "3426:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                                        "typeString": "struct Voting.Voter storage ref[] storage ref"
                                      }
                                    },
                                    "id": 359,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 356,
                                        "name": "votersList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 70,
                                        "src": "3433:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 358,
                                      "indexExpression": {
                                        "id": 357,
                                        "name": "_voterId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 288,
                                        "src": "3444:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3433:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3426:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$43_storage",
                                      "typeString": "struct Voting.Voter storage ref"
                                    }
                                  },
                                  "id": 360,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38,
                                  "src": "3426:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 353,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3409:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3409:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3409:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 352,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3399:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3399:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3327:142:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f752061726520766f74696e6720666f7220612063616e6469646174652077686f206973206e6f7420696e20796f757220636f6e7374697475656e63792e",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3471:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        },
                        "value": "Sorry. You are voting for a candidate who is not in your constituency."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3319:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3319:225:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "3319:225:0"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3554:38:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 367,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "3554:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 371,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 368,
                            "name": "ballot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "3565:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 370,
                          "indexExpression": {
                            "id": 369,
                            "name": "candId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "3572:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3565:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3554:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "3554:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3554:38:0"
                },
                {
                  "expression": {
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 375,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3603:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 379,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 376,
                            "name": "votersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3610:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 378,
                          "indexExpression": {
                            "id": 377,
                            "name": "_voterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3621:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3610:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3603:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "3603:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3642:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3603:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3603:44:0"
                }
              ]
            },
            "functionSelector": "dd4159c0",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2817:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_voterId",
                  "nameLocation": "2827:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "2822:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_voteTo",
                  "nameLocation": "2851:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "2837:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2874:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "2860:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2903:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "2889:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2821:90:0"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2918:0:0"
            },
            "scope": 412,
            "src": "2808:846:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "3733:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3751:11:0",
                        "subExpression": {
                          "id": 393,
                          "name": "electionOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3752:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e20686173206e6f7420656e6465642e",
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3764:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        },
                        "value": "Election has not ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3743:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:47:0"
                },
                {
                  "expression": {
                    "id": 398,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "3807:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 391,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "3800:17:0"
                }
              ]
            },
            "functionSelector": "ca3eb443",
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getElectionResult",
            "nameLocation": "3673:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3690:2:0"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "3714:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$54_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 388,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 387,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "3714:9:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "3714:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 389,
                    "nodeType": "ArrayTypeName",
                    "src": "3714:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3713:20:0"
            },
            "scope": 412,
            "src": "3664:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "3898:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 408,
                    "name": "electionOn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "3915:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 407,
                  "id": 409,
                  "nodeType": "Return",
                  "src": "3908:17:0"
                }
              ]
            },
            "functionSelector": "f869809c",
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 403,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "3869:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3869:9:0"
              }
            ],
            "name": "getElectionState",
            "nameLocation": "3843:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3859:2:0"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "3893:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3892:6:0"
            },
            "scope": 412,
            "src": "3834:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 413,
        "src": "25:3909:0",
        "usedErrors": []
      }
    ],
    "src": "0:3934:0"
  },
  "bytecode": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b50600080546001600160a01b031916331781556040805160e081018252600560a08201818152646e6f6e636560d81b60c084018190529083528351808501855282815260208181018390528085019190915284518086018652838152808201929092529383015260608201849052608082018490526003805460018101825594528151805192949091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0192620000dc9284929091019062000234565b506020828101518051620000f7926001850192019062000234565b50604082015180516200011591600284019160209091019062000234565b5060608281015160038301556080928301516004928301805491151560ff199092169190911790556040805160e081018252600560a08201818152646e6f6e636560d81b60c0840181905290835260006020808501829052855180870187529384528381019290925293830191909152928101829052938401819052600180548082018255915283518051919093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192620001d792849291019062000234565b50602082810151600183015560408301518051620001fc926002850192019062000234565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905562000317565b8280546200024290620002da565b90600052602060002090601f016020900481019282620002665760008555620002b1565b82601f106200028157805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b157825182559160200191906001019062000294565b50620002bf929150620002c3565b5090565b5b80821115620002bf5760008155600101620002c4565b600181811c90821680620002ef57607f821691505b602082108114156200031157634e487b7160e01b600052602260045260246000fd5b50919050565b61182e80620003276000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063bc86f38511610066578063bc86f38514610107578063ca3eb4431461011c578063d373f8d414610124578063dd4159c014610137578063f869809c1461014a57600080fd5b80631d823d32146100a35780634aba5f34146100b857806359f78468146100d657806362d73eb8146100de57806379ae584d146100e6575b600080fd5b6100b66100b13660046112c8565b610162565b005b6100c0610405565b6040516100cd9190611537565b60405180910390f35b6100b6610664565b6100b661069d565b6100f96100f43660046112c8565b6106dc565b6040519081526020016100cd565b61010f610715565b6040516100cd91906115ed565b6100c06108ed565b6100b661013236600461134c565b610b73565b6100b661014536600461139f565b610d38565b61015261116c565b60405190151581526020016100cd565b6000546001600160a01b031633146101955760405162461bcd60e51b815260040161018c906116f8565b60405180910390fd5b600054600160a01b900460ff16156102235760405162461bcd60e51b815260206004820152604560248201527f536f7272792e2054686520656c656374696f6e2068617320616c72656164792060448201527f626567616e2e20596f752063616e6e6f7420616464206e65772063616e64696460648201526430ba32b99760d91b608482015260a40161018c565b60006102308484846106dc565b6000818152600260205260409020546003805492935091811061026357634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102d25760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b606482015260840161018c565b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019261034692849201906111a8565b50602082810151805161035f92600185019201906111a8565b506040820151805161037b9160028401916020909101906111a8565b5060608201516003828101919091556080909201516004909101805460ff1916911515919091179055546103b19060019061172f565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef906103f7908690869086906116b5565b60405180910390a150505050565b6000546060906001600160a01b031633146104325760405162461bcd60e51b815260040161018c906116f8565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561065b57838290600052602060002090600502016040518060a001604052908160008201805461048790611776565b80601f01602080910402602001604051908101604052809291908181526020018280546104b390611776565b80156105005780601f106104d557610100808354040283529160200191610500565b820191906000526020600020905b8154815290600101906020018083116104e357829003601f168201915b5050505050815260200160018201805461051990611776565b80601f016020809104026020016040519081016040528092919081815260200182805461054590611776565b80156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b505050505081526020016002820180546105ab90611776565b80601f01602080910402602001604051908101604052809291908181526020018280546105d790611776565b80156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040909101529082526001929092019101610454565b50505050905090565b6000546001600160a01b0316331461068e5760405162461bcd60e51b815260040161018c906116f8565b6000805460ff60a01b19169055565b6000546001600160a01b031633146106c75760405162461bcd60e51b815260040161018c906116f8565b6000805460ff60a01b1916600160a01b179055565b6000808484846040516020016106f493929190611459565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b031633146107425760405162461bcd60e51b815260040161018c906116f8565b6001805480602002602001604051908101604052809291908181526020016000905b8282101561065b57838290600052602060002090600402016040518060a001604052908160008201805461079790611776565b80601f01602080910402602001604051908101604052809291908181526020018280546107c390611776565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b505050505081526020016001820154815260200160028201805461083390611776565b80601f016020809104026020016040519081016040528092919081815260200182805461085f90611776565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b50505091835250506003919091015460ff80821615156020808501919091526101009092041615156040909201919091529082526001929092019101610764565b600054606090600160a01b900460ff161561094a5760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161018c565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561065b57838290600052602060002090600502016040518060a001604052908160008201805461099f90611776565b80601f01602080910402602001604051908101604052809291908181526020018280546109cb90611776565b8015610a185780601f106109ed57610100808354040283529160200191610a18565b820191906000526020600020905b8154815290600101906020018083116109fb57829003601f168201915b50505050508152602001600182018054610a3190611776565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5d90611776565b8015610aaa5780601f10610a7f57610100808354040283529160200191610aaa565b820191906000526020600020905b815481529060010190602001808311610a8d57829003601f168201915b50505050508152602001600282018054610ac390611776565b80601f0160208091040260200160405190810160405280929190818152602001828054610aef90611776565b8015610b3c5780601f10610b1157610100808354040283529160200191610b3c565b820191906000526020600020905b815481529060010190602001808311610b1f57829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604090910152908252600192909201910161096c565b600082815260046020526040902054600180549091908110610ba557634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610c115760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161018c565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610c8492849201906111a8565b50602082810151600183015560408301518051610ca792600285019201906111a8565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610ce7919061172f565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610d2b9085908490611687565b60405180910390a1505050565b600084815260046020526040902054600180549091908110610d6a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610dd55760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161018c565b600054600160a01b900460ff16610e2e5760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161018c565b600084815260046020526040902054600180549091908110610e6057634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610ec35760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161018c565b6000610ed08484846106dc565b60008181526002602052604090205460038054929350918110610f0357634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610f665760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161018c565b600085815260046020526040902054600180549091908110610f9857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610fb9919061149c565b60405160208183030381529060405280519060200120600360026000848152602001908152602001600020548154811061100357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001611024919061149c565b60405160208183030381529060405280519060200120146110bc5760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161018c565b6000818152600260205260409020546003805490919081106110ee57634e487b7160e01b600052603260045260246000fd5b60009182526020822060036005909202010180549161110c836117b1565b909155505060008581526004602052604081205460018054909190811061114357634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b600080546001600160a01b031633146111975760405162461bcd60e51b815260040161018c906116f8565b50600054600160a01b900460ff1690565b8280546111b490611776565b90600052602060002090601f0160209004810192826111d6576000855561121c565b82601f106111ef57805160ff191683800117855561121c565b8280016001018555821561121c579182015b8281111561121c578251825591602001919060010190611201565b5061122892915061122c565b5090565b5b80821115611228576000815560010161122d565b600082601f830112611251578081fd5b813567ffffffffffffffff8082111561126c5761126c6117e2565b604051601f8301601f19908116603f01168101908282118183101715611294576112946117e2565b816040528381528660208588010111156112ac578485fd5b8360208701602083013792830160200193909352509392505050565b6000806000606084860312156112dc578283fd5b833567ffffffffffffffff808211156112f3578485fd5b6112ff87838801611241565b94506020860135915080821115611314578384fd5b61132087838801611241565b93506040860135915080821115611335578283fd5b5061134286828701611241565b9150509250925092565b600080600060608486031215611360578283fd5b833567ffffffffffffffff80821115611377578485fd5b61138387838801611241565b9450602086013593506040860135915080821115611335578283fd5b600080600080608085870312156113b4578081fd5b84359350602085013567ffffffffffffffff808211156113d2578283fd5b6113de88838901611241565b945060408701359150808211156113f3578283fd5b6113ff88838901611241565b93506060870135915080821115611414578283fd5b5061142187828801611241565b91505092959194509250565b60008151808452611445816020860160208601611746565b601f01601f19169290920160200192915050565b6000845161146b818460208901611746565b84519083019061147f818360208901611746565b8451910190611492818360208801611746565b0195945050505050565b600080835482600182811c9150808316806114b857607f831692505b60208084108214156114d857634e487b7160e01b87526022600452602487fd5b8180156114ec57600181146114fd57611529565b60ff19861689528489019650611529565b60008a815260209020885b868110156115215781548b820152908501908301611508565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156115df57603f19898403018552815160a081518186526115838287018261142d565b915050888201518582038a87015261159b828261142d565b91505087820151858203898701526115b3828261142d565b60608481015190880152608093840151151593909601929092525050938601939086019060010161155d565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156115df57603f19898403018552815160a081518186526116398287018261142d565b91505088820151898601528782015185820389870152611659828261142d565b6060848101511515908801526080938401511515939096019290925250509386019390860190600101611613565b60408152600061169a604083018561142d565b82810360208401526116ac818561142d565b95945050505050565b6060815260006116c8606083018661142d565b82810360208401526116da818661142d565b905082810360408401526116ee818561142d565b9695505050505050565b6020808252601d908201527f596f75206d7573742062652061646d696e20746f20646f20746869732e000000604082015260600190565b600082821015611741576117416117cc565b500390565b60005b83811015611761578181015183820152602001611749565b83811115611770576000848401525b50505050565b600181811c9082168061178a57607f821691505b602082108114156117ab57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117c5576117c56117cc565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f4ec2338a0dfd8f6dcf0726bd3e89c1560eacbd4ab34fa599bb7f96cb3f703ce64736f6c63430008040033",
  "bytecodeSha1": "fa40ac45b07ea996a187cf83ff94226363dcbc01",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Voting",
  "coverageMap": {
    "branches": {
      "0": {
        "Voting.createCandidate": {
          "23": [
            2113,
            2124,
            true
          ],
          "24": [
            2285,
            2319,
            true
          ]
        },
        "Voting.createVoter": {
          "26": [
            1461,
            1492,
            true
          ]
        },
        "Voting.getElectionResult": {
          "25": [
            3751,
            3762,
            true
          ]
        },
        "Voting.vote": {
          "27": [
            2936,
            2971,
            true
          ],
          "28": [
            3025,
            3035,
            true
          ],
          "29": [
            3088,
            3124,
            true
          ],
          "30": [
            3242,
            3275,
            true
          ],
          "31": [
            3327,
            3469,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Voting.createCandidate": {
          "0": [
            2105,
            2198
          ],
          "1": [
            2277,
            2358
          ],
          "2": [
            2368,
            2434
          ],
          "3": [
            2444,
            2482
          ],
          "4": [
            2492,
            2542
          ]
        },
        "Voting.createVoter": {
          "11": [
            1453,
            1529
          ],
          "12": [
            1539,
            1596
          ],
          "13": [
            1606,
            1641
          ],
          "14": [
            1660,
            1697
          ]
        },
        "Voting.endElection": {
          "6": [
            1285,
            1303
          ]
        },
        "Voting.getCandidatesList": {
          "5": [
            1903,
            1920
          ]
        },
        "Voting.getElectionResult": {
          "9": [
            3743,
            3790
          ],
          "10": [
            3800,
            3817
          ]
        },
        "Voting.getElectionState": {
          "22": [
            3908,
            3925
          ]
        },
        "Voting.getVotersList": {
          "8": [
            1790,
            1803
          ]
        },
        "Voting.startElection": {
          "7": [
            1201,
            1218
          ]
        },
        "Voting.vote": {
          "15": [
            2928,
            3007
          ],
          "16": [
            3017,
            3070
          ],
          "17": [
            3080,
            3154
          ],
          "18": [
            3234,
            3309
          ],
          "19": [
            3319,
            3544
          ],
          "20": [
            3554,
            3592
          ],
          "21": [
            3603,
            3647
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063bc86f38511610066578063bc86f38514610107578063ca3eb4431461011c578063d373f8d414610124578063dd4159c014610137578063f869809c1461014a57600080fd5b80631d823d32146100a35780634aba5f34146100b857806359f78468146100d657806362d73eb8146100de57806379ae584d146100e6575b600080fd5b6100b66100b13660046112c8565b610162565b005b6100c0610405565b6040516100cd9190611537565b60405180910390f35b6100b6610664565b6100b661069d565b6100f96100f43660046112c8565b6106dc565b6040519081526020016100cd565b61010f610715565b6040516100cd91906115ed565b6100c06108ed565b6100b661013236600461134c565b610b73565b6100b661014536600461139f565b610d38565b61015261116c565b60405190151581526020016100cd565b6000546001600160a01b031633146101955760405162461bcd60e51b815260040161018c906116f8565b60405180910390fd5b600054600160a01b900460ff16156102235760405162461bcd60e51b815260206004820152604560248201527f536f7272792e2054686520656c656374696f6e2068617320616c72656164792060448201527f626567616e2e20596f752063616e6e6f7420616464206e65772063616e64696460648201526430ba32b99760d91b608482015260a40161018c565b60006102308484846106dc565b6000818152600260205260409020546003805492935091811061026357634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102d25760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b606482015260840161018c565b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019261034692849201906111a8565b50602082810151805161035f92600185019201906111a8565b506040820151805161037b9160028401916020909101906111a8565b5060608201516003828101919091556080909201516004909101805460ff1916911515919091179055546103b19060019061172f565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef906103f7908690869086906116b5565b60405180910390a150505050565b6000546060906001600160a01b031633146104325760405162461bcd60e51b815260040161018c906116f8565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561065b57838290600052602060002090600502016040518060a001604052908160008201805461048790611776565b80601f01602080910402602001604051908101604052809291908181526020018280546104b390611776565b80156105005780601f106104d557610100808354040283529160200191610500565b820191906000526020600020905b8154815290600101906020018083116104e357829003601f168201915b5050505050815260200160018201805461051990611776565b80601f016020809104026020016040519081016040528092919081815260200182805461054590611776565b80156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b505050505081526020016002820180546105ab90611776565b80601f01602080910402602001604051908101604052809291908181526020018280546105d790611776565b80156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040909101529082526001929092019101610454565b50505050905090565b6000546001600160a01b0316331461068e5760405162461bcd60e51b815260040161018c906116f8565b6000805460ff60a01b19169055565b6000546001600160a01b031633146106c75760405162461bcd60e51b815260040161018c906116f8565b6000805460ff60a01b1916600160a01b179055565b6000808484846040516020016106f493929190611459565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b031633146107425760405162461bcd60e51b815260040161018c906116f8565b6001805480602002602001604051908101604052809291908181526020016000905b8282101561065b57838290600052602060002090600402016040518060a001604052908160008201805461079790611776565b80601f01602080910402602001604051908101604052809291908181526020018280546107c390611776565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b505050505081526020016001820154815260200160028201805461083390611776565b80601f016020809104026020016040519081016040528092919081815260200182805461085f90611776565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b50505091835250506003919091015460ff80821615156020808501919091526101009092041615156040909201919091529082526001929092019101610764565b600054606090600160a01b900460ff161561094a5760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161018c565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561065b57838290600052602060002090600502016040518060a001604052908160008201805461099f90611776565b80601f01602080910402602001604051908101604052809291908181526020018280546109cb90611776565b8015610a185780601f106109ed57610100808354040283529160200191610a18565b820191906000526020600020905b8154815290600101906020018083116109fb57829003601f168201915b50505050508152602001600182018054610a3190611776565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5d90611776565b8015610aaa5780601f10610a7f57610100808354040283529160200191610aaa565b820191906000526020600020905b815481529060010190602001808311610a8d57829003601f168201915b50505050508152602001600282018054610ac390611776565b80601f0160208091040260200160405190810160405280929190818152602001828054610aef90611776565b8015610b3c5780601f10610b1157610100808354040283529160200191610b3c565b820191906000526020600020905b815481529060010190602001808311610b1f57829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604090910152908252600192909201910161096c565b600082815260046020526040902054600180549091908110610ba557634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610c115760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161018c565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610c8492849201906111a8565b50602082810151600183015560408301518051610ca792600285019201906111a8565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610ce7919061172f565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610d2b9085908490611687565b60405180910390a1505050565b600084815260046020526040902054600180549091908110610d6a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610dd55760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161018c565b600054600160a01b900460ff16610e2e5760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161018c565b600084815260046020526040902054600180549091908110610e6057634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610ec35760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161018c565b6000610ed08484846106dc565b60008181526002602052604090205460038054929350918110610f0357634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610f665760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161018c565b600085815260046020526040902054600180549091908110610f9857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610fb9919061149c565b60405160208183030381529060405280519060200120600360026000848152602001908152602001600020548154811061100357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001611024919061149c565b60405160208183030381529060405280519060200120146110bc5760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161018c565b6000818152600260205260409020546003805490919081106110ee57634e487b7160e01b600052603260045260246000fd5b60009182526020822060036005909202010180549161110c836117b1565b909155505060008581526004602052604081205460018054909190811061114357634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b600080546001600160a01b031633146111975760405162461bcd60e51b815260040161018c906116f8565b50600054600160a01b900460ff1690565b8280546111b490611776565b90600052602060002090601f0160209004810192826111d6576000855561121c565b82601f106111ef57805160ff191683800117855561121c565b8280016001018555821561121c579182015b8281111561121c578251825591602001919060010190611201565b5061122892915061122c565b5090565b5b80821115611228576000815560010161122d565b600082601f830112611251578081fd5b813567ffffffffffffffff8082111561126c5761126c6117e2565b604051601f8301601f19908116603f01168101908282118183101715611294576112946117e2565b816040528381528660208588010111156112ac578485fd5b8360208701602083013792830160200193909352509392505050565b6000806000606084860312156112dc578283fd5b833567ffffffffffffffff808211156112f3578485fd5b6112ff87838801611241565b94506020860135915080821115611314578384fd5b61132087838801611241565b93506040860135915080821115611335578283fd5b5061134286828701611241565b9150509250925092565b600080600060608486031215611360578283fd5b833567ffffffffffffffff80821115611377578485fd5b61138387838801611241565b9450602086013593506040860135915080821115611335578283fd5b600080600080608085870312156113b4578081fd5b84359350602085013567ffffffffffffffff808211156113d2578283fd5b6113de88838901611241565b945060408701359150808211156113f3578283fd5b6113ff88838901611241565b93506060870135915080821115611414578283fd5b5061142187828801611241565b91505092959194509250565b60008151808452611445816020860160208601611746565b601f01601f19169290920160200192915050565b6000845161146b818460208901611746565b84519083019061147f818360208901611746565b8451910190611492818360208801611746565b0195945050505050565b600080835482600182811c9150808316806114b857607f831692505b60208084108214156114d857634e487b7160e01b87526022600452602487fd5b8180156114ec57600181146114fd57611529565b60ff19861689528489019650611529565b60008a815260209020885b868110156115215781548b820152908501908301611508565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156115df57603f19898403018552815160a081518186526115838287018261142d565b915050888201518582038a87015261159b828261142d565b91505087820151858203898701526115b3828261142d565b60608481015190880152608093840151151593909601929092525050938601939086019060010161155d565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156115df57603f19898403018552815160a081518186526116398287018261142d565b91505088820151898601528782015185820389870152611659828261142d565b6060848101511515908801526080938401511515939096019290925250509386019390860190600101611613565b60408152600061169a604083018561142d565b82810360208401526116ac818561142d565b95945050505050565b6060815260006116c8606083018661142d565b82810360208401526116da818661142d565b905082810360408401526116ee818561142d565b9695505050505050565b6020808252601d908201527f596f75206d7573742062652061646d696e20746f20646f20746869732e000000604082015260600190565b600082821015611741576117416117cc565b500390565b60005b83811015611761578181015183820152602001611749565b83811115611770576000848401525b50505050565b600181811c9082168061178a57607f821691505b602082108114156117ab57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117c5576117c56117cc565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f4ec2338a0dfd8f6dcf0726bd3e89c1560eacbd4ab34fa599bb7f96cb3f703ce64736f6c63430008040033",
  "deployedSourceMap": "25:3909:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:569;;;;;;:::i;:::-;;:::i;:::-;;1815:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1235:75;;;:::i;1149:76::-;;;:::i;2559:239::-;;;;;;:::i;:::-;;:::i;:::-;;;13268:25:1;;;13256:2;13241:18;2559:239:0;13223:76:1;1710:100:0;;;:::i;:::-;;;;;;;:::i;3664:160::-;;;:::i;1355:349::-;;;;;;:::i;:::-;;:::i;2808:846::-;;;;;;:::i;:::-;;:::i;3834:98::-;;;:::i;:::-;;;8294:14:1;;8287:22;8269:41;;8257:2;8242:18;3834:98:0;8224:92:1;1980:569:0;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;;;;;;;;;2114:10:::1;::::0;-1:-1:-1;;;2114:10:0;::::1;;;2113:11;2105:93;;;::::0;-1:-1:-1;;;2105:93:0;;10892:2:1;2105:93:0::1;::::0;::::1;10874:21:1::0;10931:2;10911:18;;;10904:30;10970:34;10950:18;;;10943:62;11041:34;11021:18;;;11014:62;-1:-1:-1;;;11092:19:1;;;11085:36;11138:19;;2105:93:0::1;10864:299:1::0;2105:93:0::1;2208:11;2223:44;2237:5;2244:13;2259:7;2223:13;:44::i;:::-;2297:14;::::0;;;:6:::1;:14;::::0;;;;;2286:10:::1;:26:::0;;2208:59;;-1:-1:-1;2286:10:0;:26;::::1;;;-1:-1:-1::0;;;2286:26:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:33:::1;:26;::::0;;::::1;;:33;::::0;::::1;;2285:34;2277:81;;;::::0;-1:-1:-1;;;2277:81:0;;11370:2:1;2277:81:0::1;::::0;::::1;11352:21:1::0;11409:2;11389:18;;;11382:30;11448:34;11428:18;;;11421:62;-1:-1:-1;;;11499:18:1;;;11492:32;11541:19;;2277:81:0::1;11342:224:1::0;2277:81:0::1;2384:49;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;2384:49:0;;;;;;2428:4:::1;2384:49:::0;;;;;;2368:10:::1;:66:::0;;;;::::1;::::0;;;;;;;;;2384:49;;2368:66:::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2368:66:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2368:66:0::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2368:66:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2368:66:0::1;::::0;::::1;;::::0;;;::::1;::::0;;2461:17;:21:::1;::::0;-1:-1:-1;;2461:21:0::1;:::i;:::-;2444:14;::::0;;;:6:::1;:14;::::0;;;;;;:38;;;;2497:45;::::1;::::0;::::1;::::0;2512:5;;2519:13;;2534:7;;2497:45:::1;:::i;:::-;;;;;;;;209:1;1980:569:::0;;;:::o;1815:112::-;153:12;;1874:18;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1910:10:::1;1903:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1903:17:0;;;-1:-1:-1;;1903:17:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;;;;;;;;;;;::::1;::::0;::::1;;;;;;;;;;1815:112:::0;:::o;1235:75::-;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1298:5:::1;1285:18:::0;;-1:-1:-1;;;;1285:18:0::1;::::0;;1235:75::o;1149:76::-;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1201:10:::1;:17:::0;;-1:-1:-1;;;;1201:17:0::1;-1:-1:-1::0;;;1201:17:0::1;::::0;;1149:76::o;2559:239::-;2676:4;2691:9;2735:5;2742:13;2757:7;2718:47;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2718:47:0;;;;;;2708:58;;2718:47;2708:58;;;;;2559:239;-1:-1:-1;;;;;2559:239:0:o;1710:100::-;153:12;;1765:14;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1797:6:::1;1790:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1790:13:0;;;-1:-1:-1;;1790:13:0::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;;;;::::0;;;;;;;;;;;;;;;::::1;::::0;::::1;;;3664:160:::0;3752:10;;3714:18;;-1:-1:-1;;;3752:10:0;;;;3751:11;3743:47;;;;-1:-1:-1;;;3743:47:0;;11773:2:1;3743:47:0;;;11755:21:1;11812:2;11792:18;;;11785:30;11851:25;11831:18;;;11824:53;11894:18;;3743:47:0;11745:173:1;3743:47:0;3807:10;3800:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3800:17:0;;;-1:-1:-1;;3800:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:349;1469:15;;;;:10;:15;;;;;;1462:6;:23;;:6;;1469:15;1462:23;;;;-1:-1:-1;;;1462:23:0;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;1461:31;1453:76;;;;-1:-1:-1;;;1453:76:0;;12125:2:1;1453:76:0;;;12107:21:1;;;12144:18;;;12137:30;12203:34;12183:18;;;12176:62;12255:18;;1453:76:0;12097:182:1;1453:76:0;1551:44;;;;;;;;;;;;;;;;;;;;;;;;1539:6;1551:44;;;;;;;;;;;;1539:57;;;;;;;-1:-1:-1;1539:57:0;;;;;;;;1551:44;;1539:57;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1539:57:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1539:57:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1539:57:0;;;;;;;-1:-1:-1;;1539:57:0;;;;;;;;;;;1624:13;;:17;;1539:57;1624:17;:::i;:::-;1606:15;;;;:10;:15;;;;;;;:35;;;;1665:32;;;;;1676:5;;1683:13;;1665:32;:::i;:::-;;;;;;;;1355:349;;;:::o;2808:846::-;2943:20;;;;:10;:20;;;;;;2936:6;:28;;:6;;2943:20;2936:28;;;;-1:-1:-1;;;2936:28:0;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;2928:79;;;;-1:-1:-1;;;2928:79:0;;10178:2:1;2928:79:0;;;10160:21:1;10217:2;10197:18;;;10190:30;10256:33;10236:18;;;10229:61;10307:18;;2928:79:0;10150:181:1;2928:79:0;3025:10;;-1:-1:-1;;;3025:10:0;;;;3017:53;;;;-1:-1:-1;;;3017:53:0;;12486:2:1;3017:53:0;;;12468:21:1;12525:2;12505:18;;;12498:30;12564:32;12544:18;;;12537:60;12614:18;;3017:53:0;12458:180:1;3017:53:0;3095:20;;;;:10;:20;;;;;;3088:6;:28;;:6;;3095:20;3088:28;;;;-1:-1:-1;;;3088:28:0;;;;;;;;;;;;;;;;;:36;:28;;;;;:36;;;;3080:74;;;;-1:-1:-1;;;3080:74:0;;10538:2:1;3080:74:0;;;10520:21:1;10577:2;10557:18;;;10550:30;10616:27;10596:18;;;10589:55;10661:18;;3080:74:0;10510:175:1;3080:74:0;3164:11;3178:46;3192:7;3201:13;3216:7;3178:13;:46::i;:::-;3253:14;;;;:6;:14;;;;;;3242:10;:26;;3164:60;;-1:-1:-1;3242:10:0;:26;;;;-1:-1:-1;;;3242:26:0;;;;;;;;;;;;;;;;;:33;:26;;;;;:33;;;;3234:75;;;;-1:-1:-1;;;3234:75:0;;9462:2:1;3234:75:0;;;9444:21:1;9501:2;9481:18;;;9474:30;9540:31;9520:18;;;9513:59;9589:18;;3234:75:0;9434:179:1;3234:75:0;3433:20;;;;:10;:20;;;;;;3426:6;:28;;:6;;3433:20;3426:28;;;;-1:-1:-1;;;3426:28:0;;;;;;;;;;;;;;;;;;;:41;;3409:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;3399:70;;;;;;3354:10;3365:6;:14;3372:6;3365:14;;;;;;;;;;;;3354:26;;;;;;-1:-1:-1;;;3354:26:0;;;;;;;;;;;;;;;;;;;:39;;3337:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;3327:68;;;;;;:142;3319:225;;;;-1:-1:-1;;;3319:225:0;;12845:2:1;3319:225:0;;;12827:21:1;12884:2;12864:18;;;12857:30;12923:34;12903:18;;;12896:62;12994:34;12974:18;;;12967:62;-1:-1:-1;;;13045:19:1;;;13038:37;13092:19;;3319:225:0;12817:300:1;3319:225:0;3565:14;;;;:6;:14;;;;;;3554:10;:26;;:10;;3565:14;3554:26;;;;-1:-1:-1;;;3554:26:0;;;;;;;;;;;;;;;;:36;:26;;;;;:36;:38;;;;;;:::i;:::-;;;;-1:-1:-1;;3642:5:0;3610:20;;;:10;:20;;;;;;3603:6;:28;;:6;;3610:20;3603:28;;;;-1:-1:-1;;;3603:28:0;;;;;;;;;;;;;;;;;;;;;;:36;;:44;;-1:-1:-1;;3603:44:0;;;;;;;;;;-1:-1:-1;;;;;2808:846:0:o;3834:98::-;3893:4;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;-1:-1:-1;3915:10:0::1;::::0;-1:-1:-1;;;3915:10:0;::::1;;;::::0;3834:98::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:739:1;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;132:5;125;118:20;77:2;172:6;159:20;198:18;235:2;231;228:10;225:2;;;241:18;;:::i;:::-;316:2;310:9;284:2;370:13;;-1:-1:-1;;366:22:1;;;390:2;362:31;358:40;346:53;;;414:18;;;434:22;;;411:46;408:2;;;460:18;;:::i;:::-;500:10;496:2;489:22;535:2;527:6;520:18;581:3;574:4;569:2;561:6;557:15;553:26;550:35;547:2;;;602:5;595;588:20;547:2;670;663:4;655:6;651:17;644:4;636:6;632:17;619:54;693:15;;;710:4;689:26;682:41;;;;-1:-1:-1;697:6:1;67:686;-1:-1:-1;;;67:686:1:o;758:783::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;955:6;947;940:22;902:2;1000:9;987:23;1029:18;1070:2;1062:6;1059:14;1056:2;;;1091:6;1083;1076:22;1056:2;1119:50;1161:7;1152:6;1141:9;1137:22;1119:50;:::i;:::-;1109:60;;1222:2;1211:9;1207:18;1194:32;1178:48;;1251:2;1241:8;1238:16;1235:2;;;1272:6;1264;1257:22;1235:2;1300:52;1344:7;1333:8;1322:9;1318:24;1300:52;:::i;:::-;1290:62;;1405:2;1394:9;1390:18;1377:32;1361:48;;1434:2;1424:8;1421:16;1418:2;;;1455:6;1447;1440:22;1418:2;;1483:52;1527:7;1516:8;1505:9;1501:24;1483:52;:::i;:::-;1473:62;;;892:649;;;;;:::o;1546:641::-;1643:6;1651;1659;1712:2;1700:9;1691:7;1687:23;1683:32;1680:2;;;1733:6;1725;1718:22;1680:2;1778:9;1765:23;1807:18;1848:2;1840:6;1837:14;1834:2;;;1869:6;1861;1854:22;1834:2;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1994:2;1983:9;1979:18;1966:32;1956:42;;2051:2;2040:9;2036:18;2023:32;2007:48;;2080:2;2070:8;2067:16;2064:2;;;2101:6;2093;2086:22;2192:852;2308:6;2316;2324;2332;2385:3;2373:9;2364:7;2360:23;2356:33;2353:2;;;2407:6;2399;2392:22;2353:2;2448:9;2435:23;2425:33;;2509:2;2498:9;2494:18;2481:32;2532:18;2573:2;2565:6;2562:14;2559:2;;;2594:6;2586;2579:22;2559:2;2622:50;2664:7;2655:6;2644:9;2640:22;2622:50;:::i;:::-;2612:60;;2725:2;2714:9;2710:18;2697:32;2681:48;;2754:2;2744:8;2741:16;2738:2;;;2775:6;2767;2760:22;2738:2;2803:52;2847:7;2836:8;2825:9;2821:24;2803:52;:::i;:::-;2793:62;;2908:2;2897:9;2893:18;2880:32;2864:48;;2937:2;2927:8;2924:16;2921:2;;;2958:6;2950;2943:22;2921:2;;2986:52;3030:7;3019:8;3008:9;3004:24;2986:52;:::i;:::-;2976:62;;;2343:701;;;;;;;:::o;3049:258::-;3091:3;3129:5;3123:12;3156:6;3151:3;3144:19;3172:63;3228:6;3221:4;3216:3;3212:14;3205:4;3198:5;3194:16;3172:63;:::i;:::-;3289:2;3268:15;-1:-1:-1;;3264:29:1;3255:39;;;;3296:4;3251:50;;3099:208;-1:-1:-1;;3099:208:1:o;3312:664::-;3539:3;3577:6;3571:13;3593:53;3639:6;3634:3;3627:4;3619:6;3615:17;3593:53;:::i;:::-;3709:13;;3668:16;;;;3731:57;3709:13;3668:16;3765:4;3753:17;;3731:57;:::i;:::-;3855:13;;3810:20;;;3877:57;3855:13;3810:20;3911:4;3899:17;;3877:57;:::i;:::-;3950:20;;3547:429;-1:-1:-1;;;;;3547:429:1:o;3981:1103::-;4109:3;4138;4173:6;4167:13;4203:3;4225:1;4253:9;4249:2;4245:18;4235:28;;4313:2;4302:9;4298:18;4335;4325:2;;4379:4;4371:6;4367:17;4357:27;;4325:2;4405;4453;4445:6;4442:14;4422:18;4419:38;4416:2;;;-1:-1:-1;;;4480:33:1;;4536:4;4533:1;4526:15;4566:4;4487:3;4554:17;4416:2;4597:18;4624:104;;;;4742:1;4737:322;;;;4590:469;;4624:104;-1:-1:-1;;4657:24:1;;4645:37;;4702:16;;;;-1:-1:-1;4624:104:1;;4737:322;13351:4;13370:17;;;13420:4;13404:21;;4832:3;4848:165;4862:6;4859:1;4856:13;4848:165;;;4940:14;;4927:11;;;4920:35;4983:16;;;;4877:10;;4848:165;;;4852:3;;5042:6;5037:3;5033:16;5026:23;;4590:469;-1:-1:-1;5075:3:1;;4117:967;-1:-1:-1;;;;;;;;4117:967:1:o;5089:1572::-;5281:4;5310:2;5350;5339:9;5335:18;5380:2;5369:9;5362:21;5403:6;5438;5432:13;5469:6;5461;5454:22;5495:2;5485:12;;5528:2;5517:9;5513:18;5506:25;;5590:2;5580:6;5577:1;5573:14;5562:9;5558:30;5554:39;5628:2;5620:6;5616:15;5649:4;5662:970;5676:6;5673:1;5670:13;5662:970;;;5769:2;5765:7;5753:9;5745:6;5741:22;5737:36;5732:3;5725:49;5803:6;5797:13;5833:4;5876:2;5870:9;5907:2;5899:6;5892:18;5937:48;5981:2;5973:6;5969:15;5955:12;5937:48;:::i;:::-;5923:62;;;6034:2;6030;6026:11;6020:18;6087:6;6079;6075:19;6070:2;6062:6;6058:15;6051:44;6122:41;6156:6;6140:14;6122:41;:::i;:::-;6108:55;;;6212:2;6208;6204:11;6198:18;6265:6;6257;6253:19;6248:2;6240:6;6236:15;6229:44;6300:41;6334:6;6318:14;6300:41;:::i;:::-;6364:4;6411:11;;;6405:18;6388:15;;;6381:43;6447:4;6508:11;;;6502:18;6495:26;6488:34;6471:15;;;;6464:59;;;;-1:-1:-1;;6610:12:1;;;;6575:15;;;;5698:1;5691:9;5662:970;;;-1:-1:-1;6649:6:1;;5290:1371;-1:-1:-1;;;;;;;;5290:1371:1:o;6666:1458::-;6850:4;6879:2;6919;6908:9;6904:18;6949:2;6938:9;6931:21;6972:6;7007;7001:13;7038:6;7030;7023:22;7064:2;7054:12;;7097:2;7086:9;7082:18;7075:25;;7159:2;7149:6;7146:1;7142:14;7131:9;7127:30;7123:39;7197:2;7189:6;7185:15;7218:4;7231:864;7245:6;7242:1;7239:13;7231:864;;;7338:2;7334:7;7322:9;7314:6;7310:22;7306:36;7301:3;7294:49;7372:6;7366:13;7402:4;7445:2;7439:9;7476:2;7468:6;7461:18;7506:48;7550:2;7542:6;7538:15;7524:12;7506:48;:::i;:::-;7492:62;;;7605:2;7601;7597:11;7591:18;7586:2;7578:6;7574:15;7567:43;7659:2;7655;7651:11;7645:18;7712:6;7704;7700:19;7695:2;7687:6;7683:15;7676:44;7747:41;7781:6;7765:14;7747:41;:::i;:::-;7811:4;7872:11;;;7866:18;7859:26;7852:34;7835:15;;;7828:59;7910:4;7971:11;;;7965:18;7958:26;7951:34;7934:15;;;;7927:59;;;;-1:-1:-1;;8073:12:1;;;;8038:15;;;;7267:1;7260:9;7231:864;;8321:383;8518:2;8507:9;8500:21;8481:4;8544:45;8585:2;8574:9;8570:18;8562:6;8544:45;:::i;:::-;8637:9;8629:6;8625:22;8620:2;8609:9;8605:18;8598:50;8665:33;8691:6;8683;8665:33;:::i;:::-;8657:41;8490:214;-1:-1:-1;;;;;8490:214:1:o;8709:546::-;8954:2;8943:9;8936:21;8917:4;8980:45;9021:2;9010:9;9006:18;8998:6;8980:45;:::i;:::-;9073:9;9065:6;9061:22;9056:2;9045:9;9041:18;9034:50;9107:33;9133:6;9125;9107:33;:::i;:::-;9093:47;;9188:9;9180:6;9176:22;9171:2;9160:9;9156:18;9149:50;9216:33;9242:6;9234;9216:33;:::i;:::-;9208:41;8926:329;-1:-1:-1;;;;;;8926:329:1:o;9618:353::-;9820:2;9802:21;;;9859:2;9839:18;;;9832:30;9898:31;9893:2;9878:18;;9871:59;9962:2;9947:18;;9792:179::o;13436:125::-;13476:4;13504:1;13501;13498:8;13495:2;;;13509:18;;:::i;:::-;-1:-1:-1;13546:9:1;;13485:76::o;13566:258::-;13638:1;13648:113;13662:6;13659:1;13656:13;13648:113;;;13738:11;;;13732:18;13719:11;;;13712:39;13684:2;13677:10;13648:113;;;13779:6;13776:1;13773:13;13770:2;;;13814:1;13805:6;13800:3;13796:16;13789:27;13770:2;;13619:205;;;:::o;13829:380::-;13908:1;13904:12;;;;13951;;;13972:2;;14026:4;14018:6;14014:17;14004:27;;13972:2;14079;14071:6;14068:14;14048:18;14045:38;14042:2;;;14125:10;14120:3;14116:20;14113:1;14106:31;14160:4;14157:1;14150:15;14188:4;14185:1;14178:15;14042:2;;13884:325;;;:::o;14214:135::-;14253:3;-1:-1:-1;;14274:17:1;;14271:2;;;14294:18;;:::i;:::-;-1:-1:-1;14341:1:1;14330:13;;14261:88::o;14354:127::-;14415:10;14410:3;14406:20;14403:1;14396:31;14446:4;14443:1;14436:15;14470:4;14467:1;14460:15;14486:127;14547:10;14542:3;14538:20;14535:1;14528:31;14578:4;14575:1;14568:15;14602:4;14599:1;14592:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    3934
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC86F385 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC86F385 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xCA3EB443 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xD373F8D4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xDD4159C0 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF869809C EQ PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D823D32 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4ABA5F34 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x59F78468 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x62D73EB8 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x79AE584D EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x664 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x69D JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x10F PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x8ED JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x134C JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x139F JUMP JUMPDEST PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E2054686520656C656374696F6E2068617320616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x626567616E2E20596F752063616E6E6F7420616464206E65772063616E646964 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x30BA32B997 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0x263 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1097 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x5 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP3 PUSH2 0x346 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x11A8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x35F SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x11A8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x37B SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x11A8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD PUSH2 0x3B1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF SWAP1 PUSH2 0x3F7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x65B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x487 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B3 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x500 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x500 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x519 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x545 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x592 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x567 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x592 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x575 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x5AB SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D7 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x624 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x624 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x607 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x454 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x65B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x797 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C3 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x810 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x810 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x833 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x881 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x764 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x65B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x99F SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9CB SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xA31 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5D SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAAA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAAA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xAC3 SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAEF SWAP1 PUSH2 0x1776 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xBA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220696420697320616C72656164792072656769737465726564212E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x4 SWAP1 SWAP3 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP3 PUSH2 0xC84 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x11A8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xCA7 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x11A8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH2 0xCE7 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A SWAP1 PUSH2 0xD2B SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xD6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xE60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED0 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0xF03 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xF98 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1003 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x149C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x3AB2B731BC97 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x10EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x110C DUP4 PUSH2 0x17B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1143 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x16F8 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x11B4 SWAP1 PUSH2 0x1776 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x11D6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x121C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x11EF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x121C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x121C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x121C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1201 JUMP JUMPDEST POP PUSH2 0x1228 SWAP3 SWAP2 POP PUSH2 0x122C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x122D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1251 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x126C JUMPI PUSH2 0x126C PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1294 JUMPI PUSH2 0x1294 PUSH2 0x17E2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x12AC JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12DC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12F3 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x12FF DUP8 DUP4 DUP9 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1314 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1320 DUP8 DUP4 DUP9 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1335 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1342 DUP7 DUP3 DUP8 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1360 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1377 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1383 DUP8 DUP4 DUP9 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1335 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13B4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13D2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13DE DUP9 DUP4 DUP10 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13F3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13FF DUP9 DUP4 DUP10 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1414 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1421 DUP8 DUP3 DUP9 ADD PUSH2 0x1241 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1445 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x146B DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x1746 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x147F DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x1746 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1492 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1746 JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x14B8 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x14D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x14EC JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x14FD JUMPI PUSH2 0x1529 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1521 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1508 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DF JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x1583 DUP3 DUP8 ADD DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP11 DUP8 ADD MSTORE PUSH2 0x159B DUP3 DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x15B3 DUP3 DUP3 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x155D JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DF JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x1639 DUP3 DUP8 ADD DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x1659 DUP3 DUP3 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x169A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x142D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16AC DUP2 DUP6 PUSH2 0x142D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16C8 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x142D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16DA DUP2 DUP7 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16EE DUP2 DUP6 PUSH2 0x142D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742062652061646D696E20746F20646F20746869732E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1741 JUMPI PUSH2 0x1741 PUSH2 0x17CC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1761 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1749 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x17CC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEC 0x23 CODESIZE LOG0 0xDF 0xD8 0xF6 0xDC CREATE PUSH19 0x6BD3E89C1560EACBD4AB34FA599BB7F96CB3F7 SUB 0xCE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA3EB443"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD373F8D4"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD4159C0"
    },
    "82": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137"
    },
    "86": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF869809C"
    },
    "93": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "97": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1D823D32"
    },
    "109": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4ABA5F34"
    },
    "120": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "124": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59F78468"
    },
    "131": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "135": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62D73EB8"
    },
    "142": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "146": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79AE584D"
    },
    "153": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6"
    },
    "157": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        3934
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "167": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1"
    },
    "170": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "171": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "173": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C8"
    },
    "176": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMP",
      "path": "0"
    },
    "177": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "178": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "181": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "STOP",
      "path": "0"
    },
    "184": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "188": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "191": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "196": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "199": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "200": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "201": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1537"
    },
    "204": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "211": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SUB",
      "path": "0"
    },
    "212": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "213": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "RETURN",
      "path": "0"
    },
    "214": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "218": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x664"
    },
    "221": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "222": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "226": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69D"
    },
    "229": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "230": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "231": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "234": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "237": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "238": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "240": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C8"
    },
    "243": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "244": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DC"
    },
    "248": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "249": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "252": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "253": {
      "op": "SWAP1"
    },
    "254": {
      "op": "DUP2"
    },
    "255": {
      "op": "MSTORE"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "258": {
      "op": "ADD"
    },
    "259": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "262": {
      "op": "JUMP"
    },
    "263": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "264": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "267": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x715"
    },
    "270": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "271": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "274": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "275": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "278": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "279": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "280": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15ED"
    },
    "283": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "284": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3664,
        3824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3664,
        3824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "288": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3664,
        3824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8ED"
    },
    "291": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3664,
        3824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "296": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "299": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "300": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "302": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134C"
    },
    "305": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB73"
    },
    "310": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "311": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "312": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "315": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "318": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "319": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "321": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139F"
    },
    "324": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2808,
        3654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD38"
    },
    "329": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2808,
        3654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "334": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116C"
    },
    "337": {
      "fn": "Voting.getElectionState",
      "jump": "i",
      "offset": [
        3834,
        3932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "338": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "341": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "342": {
      "op": "SWAP1"
    },
    "343": {
      "op": "ISZERO"
    },
    "344": {
      "op": "ISZERO"
    },
    "345": {
      "op": "DUP2"
    },
    "346": {
      "op": "MSTORE"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "349": {
      "op": "ADD"
    },
    "350": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "353": {
      "op": "JUMP"
    },
    "354": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "355": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "357": {
      "fn": "Voting.createCandidate",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "SUB"
    },
    "366": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "367": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "368": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "369": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "372": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "373": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "384": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "385": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "387": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "388": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "391": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "392": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "395": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "396": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "399": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "400": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "401": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "402": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SUB",
      "path": "0"
    },
    "403": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "404": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "405": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": "Voting.createCandidate",
      "offset": [
        2114,
        2124
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "408": {
      "fn": "Voting.createCandidate",
      "offset": [
        2114,
        2124
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "fn": "Voting.createCandidate",
      "offset": [
        2114,
        2124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "415": {
      "fn": "Voting.createCandidate",
      "offset": [
        2114,
        2124
      ],
      "op": "DIV",
      "path": "0"
    },
    "416": {
      "fn": "Voting.createCandidate",
      "offset": [
        2114,
        2124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "418": {
      "fn": "Voting.createCandidate",
      "offset": [
        2114,
        2124
      ],
      "op": "AND",
      "path": "0"
    },
    "419": {
      "branch": 23,
      "fn": "Voting.createCandidate",
      "offset": [
        2113,
        2124
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "420": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "423": {
      "branch": 23,
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "424": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "426": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "433": {
      "op": "SHL"
    },
    "434": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "435": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "438": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "440": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "DUP3",
      "path": "0"
    },
    "441": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "ADD",
      "path": "0"
    },
    "442": {
      "op": "MSTORE"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "447": {
      "op": "DUP3"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "PUSH32",
      "value": "0x536F7272792E2054686520656C656374696F6E2068617320616C726561647920"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "485": {
      "op": "DUP3"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH32",
      "value": "0x626567616E2E20596F752063616E6E6F7420616464206E65772063616E646964"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "ADD"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "op": "PUSH5",
      "value": "0x30BA32B997"
    },
    "532": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "537": {
      "op": "DUP3"
    },
    "538": {
      "op": "ADD"
    },
    "539": {
      "op": "MSTORE"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "542": {
      "op": "ADD"
    },
    "543": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "546": {
      "op": "JUMP"
    },
    "547": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "fn": "Voting.createCandidate",
      "offset": [
        2208,
        2219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "550": {
      "fn": "Voting.createCandidate",
      "offset": [
        2223,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230"
    },
    "553": {
      "fn": "Voting.createCandidate",
      "offset": [
        2237,
        2242
      ],
      "op": "DUP5",
      "path": "0"
    },
    "554": {
      "fn": "Voting.createCandidate",
      "offset": [
        2244,
        2257
      ],
      "op": "DUP5",
      "path": "0"
    },
    "555": {
      "fn": "Voting.createCandidate",
      "offset": [
        2259,
        2266
      ],
      "op": "DUP5",
      "path": "0"
    },
    "556": {
      "fn": "Voting.createCandidate",
      "offset": [
        2223,
        2236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DC"
    },
    "559": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2223,
        2267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "560": {
      "fn": "Voting.createCandidate",
      "offset": [
        2223,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "561": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "563": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "564": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "565": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "566": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "568": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "570": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "571": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "573": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "575": {
      "fn": "Voting.createCandidate",
      "offset": [
        2297,
        2311
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "576": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "578": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "DUP1",
      "path": "0"
    },
    "579": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "580": {
      "fn": "Voting.createCandidate",
      "offset": [
        2208,
        2267
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "581": {
      "fn": "Voting.createCandidate",
      "offset": [
        2208,
        2267
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "584": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "DUP2",
      "path": "0"
    },
    "585": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "LT",
      "path": "0"
    },
    "586": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x263"
    },
    "589": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "590": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "600": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "601": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "603": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "605": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "606": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "608": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "610": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "REVERT",
      "path": "0"
    },
    "611": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "612": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "614": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "615": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "DUP3",
      "path": "0"
    },
    "616": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "617": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "619": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "620": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "621": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "622": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "624": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "626": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "627": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "628": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "MUL",
      "path": "0"
    },
    "629": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2312
      ],
      "op": "ADD",
      "path": "0"
    },
    "630": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "631": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "632": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "634": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2319
      ],
      "op": "AND",
      "path": "0"
    },
    "635": {
      "branch": 24,
      "fn": "Voting.createCandidate",
      "offset": [
        2285,
        2319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "636": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2"
    },
    "639": {
      "branch": 24,
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "640": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "642": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "DUP2",
      "path": "0"
    },
    "651": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "654": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "656": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "DUP3",
      "path": "0"
    },
    "657": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "ADD",
      "path": "0"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "663": {
      "op": "DUP3"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "op": "MSTORE"
    },
    "666": {
      "op": "PUSH32",
      "value": "0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "701": {
      "op": "DUP3"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "709": {
      "op": "SHL"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "712": {
      "op": "DUP3"
    },
    "713": {
      "op": "ADD"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "717": {
      "op": "ADD"
    },
    "718": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "721": {
      "op": "JUMP"
    },
    "722": {
      "fn": "Voting.createCandidate",
      "offset": [
        2277,
        2358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "723": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "725": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "726": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "727": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "729": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "730": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "ADD",
      "path": "0"
    },
    "731": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "732": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "733": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP6",
      "path": "0"
    },
    "734": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "735": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "736": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "738": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "739": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "740": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "ADD",
      "path": "0"
    },
    "741": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP7",
      "path": "0"
    },
    "742": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "744": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "745": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "746": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "ADD",
      "path": "0"
    },
    "747": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP5",
      "path": "0"
    },
    "748": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "752": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "754": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "755": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "ADD",
      "path": "0"
    },
    "756": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "757": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "758": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "759": {
      "fn": "Voting.createCandidate",
      "offset": [
        2428,
        2432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "761": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "763": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "764": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "ADD",
      "path": "0"
    },
    "765": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "766": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "767": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "768": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "770": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "771": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "772": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "773": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "774": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "775": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "776": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "777": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "778": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "779": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "780": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "781": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "782": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "783": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "784": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "785": {
      "fn": "Voting.createCandidate",
      "offset": [
        2384,
        2433
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "786": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "788": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "789": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "790": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MUL",
      "path": "0"
    },
    "791": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "824": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "825": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "826": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "829": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "830": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP5",
      "path": "0"
    },
    "831": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "832": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "833": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "834": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A8"
    },
    "837": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2368,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "838": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "839": {
      "op": "POP"
    },
    "840": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "842": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "843": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "844": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "845": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "846": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "847": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "848": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35F"
    },
    "851": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "852": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "854": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP6",
      "path": "0"
    },
    "855": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "856": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "857": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "858": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "859": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A8"
    },
    "862": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2368,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "863": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "864": {
      "op": "POP"
    },
    "865": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "867": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "868": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "869": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "870": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "871": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "872": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37B"
    },
    "875": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "876": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "878": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP5",
      "path": "0"
    },
    "879": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "880": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "881": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "883": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "884": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "885": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "886": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "887": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A8"
    },
    "890": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2368,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "891": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "895": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "896": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "897": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "898": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "900": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "901": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "902": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "903": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "904": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "905": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "906": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "907": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "909": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "910": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "911": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "912": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "913": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "915": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "916": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "917": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ADD",
      "path": "0"
    },
    "918": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "919": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "920": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "922": {
      "op": "NOT"
    },
    "923": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "AND",
      "path": "0"
    },
    "924": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "925": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "926": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "927": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "928": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "929": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "930": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "OR",
      "path": "0"
    },
    "931": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "932": {
      "fn": "Voting.createCandidate",
      "offset": [
        2368,
        2434
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "933": {
      "fn": "Voting.createCandidate",
      "offset": [
        2461,
        2478
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 3
    },
    "934": {
      "fn": "Voting.createCandidate",
      "offset": [
        2461,
        2482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "937": {
      "fn": "Voting.createCandidate",
      "offset": [
        2461,
        2482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "SWAP1"
    },
    "941": {
      "fn": "Voting.createCandidate",
      "offset": [
        2461,
        2482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172F"
    },
    "944": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2461,
        2482
      ],
      "op": "JUMP",
      "path": "0"
    },
    "945": {
      "fn": "Voting.createCandidate",
      "offset": [
        2461,
        2482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "948": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP3",
      "path": "0"
    },
    "949": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "951": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "953": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "955": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "956": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "958": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "959": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "960": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "961": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2458
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "962": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "963": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "964": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "965": {
      "fn": "Voting.createCandidate",
      "offset": [
        2444,
        2482
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "966": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 4
    },
    "967": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF"
    },
    "1000": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1001": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F7"
    },
    "1004": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1005": {
      "fn": "Voting.createCandidate",
      "offset": [
        2512,
        2517
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1006": {
      "fn": "Voting.createCandidate",
      "offset": [
        2512,
        2517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "Voting.createCandidate",
      "offset": [
        2519,
        2532
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1008": {
      "fn": "Voting.createCandidate",
      "offset": [
        2519,
        2532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1009": {
      "fn": "Voting.createCandidate",
      "offset": [
        2534,
        2541
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1010": {
      "fn": "Voting.createCandidate",
      "offset": [
        2534,
        2541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B5"
    },
    "1014": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2497,
        2542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1015": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1016": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1018": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1019": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1020": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1021": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "SUB",
      "path": "0"
    },
    "1022": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1023": {
      "fn": "Voting.createCandidate",
      "offset": [
        2497,
        2542
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1024": {
      "offset": [
        209,
        210
      ],
      "op": "POP",
      "path": "0"
    },
    "1025": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "POP",
      "path": "0"
    },
    "1026": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "POP",
      "path": "0"
    },
    "1027": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2549
      ],
      "op": "POP",
      "path": "0"
    },
    "1028": {
      "fn": "Voting.createCandidate",
      "jump": "o",
      "offset": [
        1980,
        2549
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1029": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1030": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1032": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1033": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1874,
        1892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1035": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1874,
        1892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1045": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1046": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1047": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "1050": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1051": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1053": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1060": {
      "op": "SHL"
    },
    "1061": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1062": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1063": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1065": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1066": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1069": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1070": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "1073": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1074": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1075": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1910,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x3"
    },
    "1077": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1078": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1079": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1080": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1082": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1083": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1085": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1086": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1088": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1089": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1090": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1091": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1092": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1094": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1095": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1096": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1097": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1098": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1100": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1101": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1102": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1104": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1105": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1107": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1109": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1110": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1111": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1112": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1113": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65B"
    },
    "1116": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1117": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1118": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1119": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1120": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1122": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1123": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1125": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1127": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1128": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1129": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1131": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1132": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1133": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1135": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1136": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1137": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1139": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1140": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1142": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1143": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1144": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1145": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1147": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1148": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1149": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1150": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1151": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x487"
    },
    "1154": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1155": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1158": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1159": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1160": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1161": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1163": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1164": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1166": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1167": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1168": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1169": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1170": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1172": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1173": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1175": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1176": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1177": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1178": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1179": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1181": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1182": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1183": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1184": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1185": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1187": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1188": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1189": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1191": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1192": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1193": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1194": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1195": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B3"
    },
    "1198": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1199": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1202": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1203": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1204": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1205": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1206": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "1209": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1210": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1211": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1213": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1214": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D5"
    },
    "1217": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1218": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1221": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1222": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1223": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1224": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1225": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1226": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1227": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1228": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1229": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1231": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1232": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1233": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "1236": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1237": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1238": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1239": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1240": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1241": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1244": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1245": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1247": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1249": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1250": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1252": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1253": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1254": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1255": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1256": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1257": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1259": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1260": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1261": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1263": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1264": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1265": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1266": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "GT",
      "path": "0"
    },
    "1267": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E3"
    },
    "1270": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1271": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1272": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1274": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1276": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1277": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1278": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1279": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1280": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1281": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1282": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1283": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1284": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1285": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1286": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1287": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1288": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1290": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1291": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1293": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1294": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1295": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1296": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1297": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "1300": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1304": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1305": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1307": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1309": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1310": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1312": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1313": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1314": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1315": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1316": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1318": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1319": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1321": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1322": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1323": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1324": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1325": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1327": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1328": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1329": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1330": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1331": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1332": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1333": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1335": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1337": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1338": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1339": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1340": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1341": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x545"
    },
    "1344": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1348": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1349": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1350": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1351": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1352": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x592"
    },
    "1355": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1356": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1357": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1359": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1360": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x567"
    },
    "1363": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1364": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1367": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1368": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1369": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1370": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1371": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1372": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1373": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1374": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1375": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1377": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1378": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1379": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x592"
    },
    "1382": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1383": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1384": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1385": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1386": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1387": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1388": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1390": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1391": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1393": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1395": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1396": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1397": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1398": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1399": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1400": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1401": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1402": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1403": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1405": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1406": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1407": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1409": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1410": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1411": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1412": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "GT",
      "path": "0"
    },
    "1413": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x575"
    },
    "1416": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1417": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1418": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1419": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1420": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1422": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1423": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1424": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1425": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1426": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1427": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1428": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1429": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1430": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1431": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1432": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1433": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1434": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1436": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1437": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1439": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1440": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1441": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1442": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1443": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AB"
    },
    "1446": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1447": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1450": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1451": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1452": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1453": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1455": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1456": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1458": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1459": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1460": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1461": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1462": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1464": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1465": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1467": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1468": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1469": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1470": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1471": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1473": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1474": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1475": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1476": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1477": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1478": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1479": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1480": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1481": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1483": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1484": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1485": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1486": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1487": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D7"
    },
    "1490": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1491": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1494": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1495": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1496": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1497": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1498": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x624"
    },
    "1501": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1502": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1503": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1505": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1506": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F9"
    },
    "1509": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1510": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1513": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1514": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1515": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1516": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1517": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1518": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1519": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1520": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1521": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1523": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1524": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x624"
    },
    "1528": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1529": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1530": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1531": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1532": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1533": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1534": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1536": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1537": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1539": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1541": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1542": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1543": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1544": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1545": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1546": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1547": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1548": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1549": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1551": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1552": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1553": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1555": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1556": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1557": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1558": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "GT",
      "path": "0"
    },
    "1559": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x607"
    },
    "1562": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1563": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1564": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1565": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1566": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1568": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1569": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1570": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1571": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1572": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1573": {
      "op": "POP"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1577": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1578": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "op": "POP"
    },
    "1581": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1583": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1584": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1585": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1586": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1588": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1589": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1590": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1591": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1592": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1594": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1595": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1597": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1598": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1599": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1600": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1601": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1603": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1604": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1605": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1606": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1608": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1609": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1610": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1611": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1612": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1613": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1614": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1615": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1617": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1618": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1619": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1620": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1621": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1622": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1623": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x454"
    },
    "1626": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1627": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1628": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1629": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1630": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1631": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1632": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1633": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1634": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1635": {
      "fn": "Voting.getCandidatesList",
      "jump": "o",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1636": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1637": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1639": {
      "fn": "Voting.endElection",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1649": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1650": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1651": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68E"
    },
    "1654": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1655": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1657": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1666": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1667": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1669": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1670": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1673": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1674": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "1677": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1678": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1679": {
      "fn": "Voting.endElection",
      "offset": [
        1298,
        1303
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1681": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1682": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "NOT"
    },
    "1689": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "AND",
      "path": "0"
    },
    "1690": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1691": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1692": {
      "fn": "Voting.endElection",
      "jump": "o",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1693": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1694": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1696": {
      "fn": "Voting.startElection",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1706": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1707": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1708": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C7"
    },
    "1711": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1712": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1714": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1723": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1724": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1726": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1727": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1730": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1731": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "1734": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1735": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1736": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "1738": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1739": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1744": {
      "op": "SHL"
    },
    "1745": {
      "op": "NOT"
    },
    "1746": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "AND",
      "path": "0"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1751": {
      "op": "SHL"
    },
    "1752": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "OR",
      "path": "0"
    },
    "1753": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1754": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1755": {
      "fn": "Voting.startElection",
      "jump": "o",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1756": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1757": {
      "fn": "Voting._generateHash",
      "offset": [
        2676,
        2680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1759": {
      "fn": "Voting._generateHash",
      "offset": [
        2691,
        2700
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1760": {
      "fn": "Voting._generateHash",
      "offset": [
        2735,
        2740
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1761": {
      "fn": "Voting._generateHash",
      "offset": [
        2742,
        2755
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1762": {
      "fn": "Voting._generateHash",
      "offset": [
        2757,
        2764
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1763": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1765": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1766": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1768": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1769": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F4"
    },
    "1772": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1773": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1774": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1775": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1776": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1459"
    },
    "1779": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2718,
        2765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1780": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1781": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1783": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1784": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1785": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1786": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1787": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SUB",
      "path": "0"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1790": {
      "op": "NOT"
    },
    "1791": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "ADD",
      "path": "0"
    },
    "1792": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1793": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1794": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1795": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1796": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1797": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1798": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1799": {
      "fn": "Voting._generateHash",
      "offset": [
        2718,
        2765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1801": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1803": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "ADD",
      "path": "0"
    },
    "1804": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1805": {
      "fn": "Voting._generateHash",
      "offset": [
        2708,
        2766
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1806": {
      "fn": "Voting._generateHash",
      "offset": [
        2559,
        2798
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "fn": "Voting._generateHash",
      "jump": "o",
      "offset": [
        2559,
        2798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1813": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1814": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1816": {
      "fn": "Voting.getVotersList",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1817": {
      "fn": "Voting.getVotersList",
      "offset": [
        1765,
        1779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1819": {
      "fn": "Voting.getVotersList",
      "offset": [
        1765,
        1779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1829": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1830": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1831": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x742"
    },
    "1834": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1835": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1837": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1844": {
      "op": "SHL"
    },
    "1845": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1846": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1847": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1849": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1850": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1853": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1854": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "1857": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1858": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1859": {
      "fn": "Voting.getVotersList",
      "offset": [
        1797,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "1861": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1862": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1863": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1864": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1866": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1867": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1869": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1870": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1872": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1873": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1874": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1875": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1876": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1878": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1879": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1880": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1881": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1882": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1883": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1884": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1885": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1886": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1888": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1889": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1891": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1892": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1893": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1894": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1895": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "LT",
      "path": "0"
    },
    "1896": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1897": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65B"
    },
    "1900": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1901": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1902": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1903": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1906": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1907": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1909": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1911": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1912": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1913": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1915": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1916": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1917": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1919": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1920": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1921": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1923": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1924": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1926": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1927": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1928": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1929": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1931": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1932": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1933": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1934": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1935": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x797"
    },
    "1938": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1939": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1942": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1943": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1944": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1945": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1947": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1948": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1950": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1951": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1952": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "1953": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1954": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1956": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1957": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1959": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1960": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1961": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1962": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1963": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1965": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1966": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1967": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1968": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1969": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1970": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1971": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1972": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1973": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1975": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1976": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1977": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1978": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1979": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C3"
    },
    "1982": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1983": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "1986": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1987": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1988": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1989": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1990": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "1993": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1994": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1995": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1997": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "LT",
      "path": "0"
    },
    "1998": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E5"
    },
    "2001": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2002": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2005": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2006": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2007": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2008": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "2009": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "2010": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2011": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2012": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2013": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2015": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2016": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2017": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "2020": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2021": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2022": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2023": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2024": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2025": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2026": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2028": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2029": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2031": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2033": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2034": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2035": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2036": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2037": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2038": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2039": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2040": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2041": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2043": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2044": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2045": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2047": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2048": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2049": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2050": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "GT",
      "path": "0"
    },
    "2051": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "2054": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2055": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2056": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2057": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SUB",
      "path": "0"
    },
    "2058": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2060": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2061": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2062": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2063": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2064": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2065": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "2066": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "2067": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "2068": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "2069": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "2070": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2071": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2072": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2074": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2075": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2077": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2078": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2079": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2080": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2081": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2082": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2084": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2085": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2087": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2088": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2089": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2090": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2091": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x833"
    },
    "2094": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2095": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2098": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2099": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2100": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2101": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2103": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2104": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2106": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2107": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2108": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "2109": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "2110": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2112": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2113": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2115": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2116": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2117": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2118": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2119": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2121": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2122": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2123": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2124": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2125": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2127": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2128": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2129": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2131": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2132": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2133": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2134": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2135": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85F"
    },
    "2138": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2139": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2142": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2143": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2144": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2145": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2146": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2149": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2150": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2151": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2153": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "LT",
      "path": "0"
    },
    "2154": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x881"
    },
    "2157": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2158": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2161": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2162": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2163": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2164": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "2165": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "2166": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2167": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2168": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2169": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2171": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2172": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2173": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2176": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2177": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2178": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2179": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2180": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2181": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2182": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2184": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2185": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2187": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2189": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2190": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2191": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2192": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2193": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2194": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2195": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2196": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2197": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2199": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2200": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2201": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2203": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2204": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2205": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2206": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "GT",
      "path": "0"
    },
    "2207": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88F"
    },
    "2210": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2211": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2212": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SUB",
      "path": "0"
    },
    "2214": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2216": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2217": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2218": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2219": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2220": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2221": {
      "op": "POP"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2225": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2226": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2231": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2232": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2233": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2234": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2235": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2236": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2238": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2239": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2240": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2241": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2242": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2243": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2245": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2246": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2247": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2248": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2249": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2250": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2251": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2252": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2255": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2256": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2257": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "2258": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2259": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2260": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2261": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2263": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2264": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2265": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2266": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2267": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2268": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2269": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2270": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2271": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2272": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2273": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2275": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2276": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2277": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2278": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2279": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2280": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2281": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x764"
    },
    "2284": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3664,
        3824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2286": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3752,
        3762
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "2288": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3752,
        3762
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2289": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3714,
        3732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2291": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3714,
        3732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3752,
        3762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2298": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3752,
        3762
      ],
      "op": "DIV",
      "path": "0"
    },
    "2299": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3752,
        3762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2301": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3752,
        3762
      ],
      "op": "AND",
      "path": "0"
    },
    "2302": {
      "branch": 25,
      "fn": "Voting.getElectionResult",
      "offset": [
        3751,
        3762
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2303": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94A"
    },
    "2306": {
      "branch": 25,
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2307": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2309": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2310": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2316": {
      "op": "SHL"
    },
    "2317": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2318": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2321": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2323": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2324": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "ADD",
      "path": "0"
    },
    "2325": {
      "op": "MSTORE"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2330": {
      "op": "DUP3"
    },
    "2331": {
      "op": "ADD"
    },
    "2332": {
      "op": "MSTORE"
    },
    "2333": {
      "op": "PUSH32",
      "value": "0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2368": {
      "op": "DUP3"
    },
    "2369": {
      "op": "ADD"
    },
    "2370": {
      "op": "MSTORE"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "2377": {
      "op": "JUMP"
    },
    "2378": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3743,
        3790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2379": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3807,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x3"
    },
    "2381": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2382": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2383": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2384": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2386": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2387": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2389": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2390": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2392": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2393": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2394": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2395": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2396": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2398": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2399": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2400": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2401": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2402": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2403": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2404": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2405": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2406": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2408": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2409": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2411": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2412": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2413": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2414": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2415": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "LT",
      "path": "0"
    },
    "2416": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2417": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65B"
    },
    "2420": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2421": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2422": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2423": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2424": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2426": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2427": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2429": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2431": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2432": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2433": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2435": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2436": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2437": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2439": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2440": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2441": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2443": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2444": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2446": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2447": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2448": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2449": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2451": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2452": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2453": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2454": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2455": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99F"
    },
    "2458": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2459": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2462": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2463": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2464": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2465": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2467": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2468": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2470": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2471": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2472": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DIV",
      "path": "0"
    },
    "2473": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2474": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2476": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2477": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2479": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2480": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2481": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2482": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2483": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2485": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2486": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2487": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2488": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2489": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2490": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2491": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2492": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2493": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2495": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2496": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2497": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2498": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2499": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CB"
    },
    "2502": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2503": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2506": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2507": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2508": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2509": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2510": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA18"
    },
    "2513": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2514": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2515": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2517": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "LT",
      "path": "0"
    },
    "2518": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9ED"
    },
    "2521": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2522": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2525": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2526": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2527": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2528": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DIV",
      "path": "0"
    },
    "2529": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2530": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2531": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2532": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2533": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2535": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2536": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2537": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA18"
    },
    "2540": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2541": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2542": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2543": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2544": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2545": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2546": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2548": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2549": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2551": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2553": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2554": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2555": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2556": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2557": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2558": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2559": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2560": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2561": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2563": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2564": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2565": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2567": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2568": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2569": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2570": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "GT",
      "path": "0"
    },
    "2571": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FB"
    },
    "2574": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2575": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2576": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2577": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SUB",
      "path": "0"
    },
    "2578": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2580": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "AND",
      "path": "0"
    },
    "2581": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2582": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2583": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2584": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2585": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2586": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2587": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2588": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2589": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2590": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2591": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2592": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2594": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2595": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2597": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2598": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2599": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2600": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2601": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA31"
    },
    "2604": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2605": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2608": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2609": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2610": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2611": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2613": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2614": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2616": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2617": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2618": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DIV",
      "path": "0"
    },
    "2619": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2620": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2622": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2623": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2625": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2626": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2627": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2628": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2629": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2631": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2632": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2633": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2634": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2635": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2636": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2637": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2638": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2639": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2641": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2642": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2643": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2644": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2645": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5D"
    },
    "2648": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2649": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2652": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2653": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2654": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2655": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2656": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAA"
    },
    "2659": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2660": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2661": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2663": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "LT",
      "path": "0"
    },
    "2664": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7F"
    },
    "2667": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2668": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2671": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2672": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2673": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2674": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DIV",
      "path": "0"
    },
    "2675": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2676": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2677": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2678": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2679": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2681": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2682": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2683": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAA"
    },
    "2686": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2687": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2688": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2689": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2690": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2691": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2692": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2694": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2695": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2697": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2699": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2700": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2701": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2702": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2703": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2704": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2705": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2706": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2709": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2710": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2711": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2713": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2714": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2715": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2716": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "GT",
      "path": "0"
    },
    "2717": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8D"
    },
    "2720": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2721": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2722": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2723": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SUB",
      "path": "0"
    },
    "2724": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2726": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "AND",
      "path": "0"
    },
    "2727": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2728": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2729": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2730": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2731": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2732": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2733": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2734": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2735": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "2736": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2737": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2738": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2740": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2741": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2743": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2744": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2745": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2746": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2747": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC3"
    },
    "2750": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2751": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2754": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2755": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2756": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2757": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2759": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2760": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2762": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2763": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2764": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DIV",
      "path": "0"
    },
    "2765": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2766": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2768": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2769": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2771": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2772": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2773": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2774": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2775": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2777": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2778": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2779": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2780": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2781": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2782": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2783": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2784": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2785": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2787": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2788": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2789": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2790": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2791": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEF"
    },
    "2794": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2795": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1776"
    },
    "2798": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2799": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2800": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2801": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2802": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3C"
    },
    "2805": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2806": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2807": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2809": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "LT",
      "path": "0"
    },
    "2810": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "2813": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2814": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2817": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2818": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2819": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2820": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DIV",
      "path": "0"
    },
    "2821": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MUL",
      "path": "0"
    },
    "2822": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2823": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2824": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2825": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2827": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2828": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2829": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3C"
    },
    "2832": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2833": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2834": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2835": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2836": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2837": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2838": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2840": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2841": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2843": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2845": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2846": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2847": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2848": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2849": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2850": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2851": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2852": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2853": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2855": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2856": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2857": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2859": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2860": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2861": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2862": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "GT",
      "path": "0"
    },
    "2863": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1F"
    },
    "2866": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2867": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2868": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2869": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SUB",
      "path": "0"
    },
    "2870": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2872": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "AND",
      "path": "0"
    },
    "2873": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2874": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2875": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2876": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "op": "POP"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2881": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2882": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2883": {
      "op": "POP"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2887": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2888": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2889": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2890": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2892": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2893": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2894": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2895": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2896": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2897": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2898": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2899": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2901": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2902": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2903": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2904": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2905": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2907": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "AND",
      "path": "0"
    },
    "2908": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2909": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2910": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2912": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2913": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2914": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2915": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2916": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2917": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2918": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2919": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2921": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2922": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2923": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2924": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2925": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2926": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "ADD",
      "path": "0"
    },
    "2927": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96C"
    },
    "2930": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3800,
        3817
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2931": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2932": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "2934": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2935": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2936": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2937": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2939": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2941": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2942": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2944": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2945": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2946": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2947": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2949": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2950": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2951": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2952": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1468
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2953": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2954": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2955": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "LT",
      "path": "0"
    },
    "2956": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "2959": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2960": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2970": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2971": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2973": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2975": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2976": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2978": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2980": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2981": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2982": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2983": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2985": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2986": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2988": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2990": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2991": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2992": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2994": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MUL",
      "path": "0"
    },
    "2995": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "ADD",
      "path": "0"
    },
    "2996": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2998": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "ADD",
      "path": "0"
    },
    "2999": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3001": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3002": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3003": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3004": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3007": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "EXP",
      "path": "0"
    },
    "3008": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3009": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "DIV",
      "path": "0"
    },
    "3010": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3012": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "AND",
      "path": "0"
    },
    "3013": {
      "branch": 26,
      "fn": "Voting.createVoter",
      "offset": [
        1461,
        1492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3014": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC11"
    },
    "3017": {
      "branch": 26,
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3018": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3020": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3027": {
      "op": "SHL"
    },
    "3028": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3029": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3032": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3034": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3035": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "ADD",
      "path": "0"
    },
    "3036": {
      "op": "DUP2"
    },
    "3037": {
      "op": "SWAP1"
    },
    "3038": {
      "op": "MSTORE"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3041": {
      "op": "DUP3"
    },
    "3042": {
      "op": "ADD"
    },
    "3043": {
      "op": "MSTORE"
    },
    "3044": {
      "op": "PUSH32",
      "value": "0x566F74657220696420697320616C72656164792072656769737465726564212E"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3079": {
      "op": "DUP3"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3084": {
      "op": "ADD"
    },
    "3085": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3088": {
      "op": "JUMP"
    },
    "3089": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3090": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x40"
    },
    "3092": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3093": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3094": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "3096": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3097": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "3098": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3099": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3100": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3101": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3102": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3103": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3105": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3106": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3107": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "3108": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3109": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3110": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3111": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3112": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3113": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "3114": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3115": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3116": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3117": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3119": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3121": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3122": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "3123": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3124": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3125": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3126": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3128": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3129": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "3130": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3131": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3132": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3133": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3134": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3135": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3136": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3137": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3138": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3139": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3142": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3143": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3144": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3145": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3146": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3147": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3148": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3149": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3150": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3151": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3152": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3154": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3155": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3156": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MUL",
      "path": "0"
    },
    "3157": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "3190": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3191": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3192": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC84"
    },
    "3195": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3196": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3197": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3198": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3199": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3200": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A8"
    },
    "3203": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3204": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3208": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3209": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3210": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3211": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3212": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3214": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3215": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3216": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3217": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3219": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3220": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3221": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3222": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3223": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3224": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA7"
    },
    "3227": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3228": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3230": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3231": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3232": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3233": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3234": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3235": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A8"
    },
    "3238": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3239": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3243": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3244": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3245": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3246": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3248": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3249": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3250": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3251": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3252": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3253": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3255": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3256": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3257": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3258": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3259": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3260": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3261": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3264": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MUL",
      "path": "0"
    },
    "3265": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3268": {
      "op": "NOT"
    },
    "3269": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3270": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3271": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3272": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3273": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3274": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3275": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "AND",
      "path": "0"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3279": {
      "op": "NOT"
    },
    "3280": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3281": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3282": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "AND",
      "path": "0"
    },
    "3283": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3284": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3285": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3286": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "OR",
      "path": "0"
    },
    "3287": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "OR",
      "path": "0"
    },
    "3288": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3289": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3290": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3292": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1637
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 13
    },
    "3293": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1637
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3294": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE7"
    },
    "3297": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3298": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3299": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172F"
    },
    "3302": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1624,
        1641
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3303": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3304": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3306": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3307": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3308": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3309": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3311": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3313": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3314": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3316": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3317": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3318": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3319": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3320": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3321": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3322": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3323": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3324": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 14
    },
    "3325": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A"
    },
    "3358": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3359": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2B"
    },
    "3362": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3363": {
      "fn": "Voting.createVoter",
      "offset": [
        1676,
        1681
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3364": {
      "fn": "Voting.createVoter",
      "offset": [
        1676,
        1681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3365": {
      "fn": "Voting.createVoter",
      "offset": [
        1683,
        1696
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3366": {
      "fn": "Voting.createVoter",
      "offset": [
        1683,
        1696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3367": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1687"
    },
    "3370": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1665,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3371": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3372": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3374": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3375": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3376": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3377": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SUB",
      "path": "0"
    },
    "3378": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3379": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3380": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "POP",
      "path": "0"
    },
    "3381": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "POP",
      "path": "0"
    },
    "3382": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "POP",
      "path": "0"
    },
    "3383": {
      "fn": "Voting.createVoter",
      "jump": "o",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3384": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        3654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3385": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "3387": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3388": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3389": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3390": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3392": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3394": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3395": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3397": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3398": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3399": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3400": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3402": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3403": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3404": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3405": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3406": {
      "fn": "Voting.vote",
      "offset": [
        2943,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3407": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3408": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "LT",
      "path": "0"
    },
    "3409": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6A"
    },
    "3412": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3413": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3423": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3424": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3426": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3428": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3429": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3431": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3433": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3434": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3435": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3436": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3438": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3439": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3441": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3443": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3444": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3445": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3447": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "MUL",
      "path": "0"
    },
    "3448": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2964
      ],
      "op": "ADD",
      "path": "0"
    },
    "3449": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3451": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "ADD",
      "path": "0"
    },
    "3452": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3454": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3455": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3456": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3457": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3460": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "EXP",
      "path": "0"
    },
    "3461": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3462": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "DIV",
      "path": "0"
    },
    "3463": {
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3465": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        2936,
        2971
      ],
      "op": "AND",
      "path": "0"
    },
    "3466": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD5"
    },
    "3469": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3470": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3472": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3473": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3479": {
      "op": "SHL"
    },
    "3480": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3481": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3484": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3486": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3487": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "ADD",
      "path": "0"
    },
    "3488": {
      "op": "MSTORE"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3493": {
      "op": "DUP3"
    },
    "3494": {
      "op": "ADD"
    },
    "3495": {
      "op": "MSTORE"
    },
    "3496": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3531": {
      "op": "DUP3"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "MSTORE"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3536": {
      "op": "ADD"
    },
    "3537": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3540": {
      "op": "JUMP"
    },
    "3541": {
      "fn": "Voting.vote",
      "offset": [
        2928,
        3007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3542": {
      "fn": "Voting.vote",
      "offset": [
        3025,
        3035
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "3544": {
      "fn": "Voting.vote",
      "offset": [
        3025,
        3035
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3549": {
      "op": "SHL"
    },
    "3550": {
      "fn": "Voting.vote",
      "offset": [
        3025,
        3035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3551": {
      "fn": "Voting.vote",
      "offset": [
        3025,
        3035
      ],
      "op": "DIV",
      "path": "0"
    },
    "3552": {
      "fn": "Voting.vote",
      "offset": [
        3025,
        3035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3554": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3025,
        3035
      ],
      "op": "AND",
      "path": "0"
    },
    "3555": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2E"
    },
    "3558": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3559": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3561": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3568": {
      "op": "SHL"
    },
    "3569": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3570": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3573": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3575": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3576": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "ADD",
      "path": "0"
    },
    "3577": {
      "op": "MSTORE"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3582": {
      "op": "DUP3"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "MSTORE"
    },
    "3585": {
      "op": "PUSH32",
      "value": "0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3620": {
      "op": "DUP3"
    },
    "3621": {
      "op": "ADD"
    },
    "3622": {
      "op": "MSTORE"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3629": {
      "op": "JUMP"
    },
    "3630": {
      "fn": "Voting.vote",
      "offset": [
        3017,
        3070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3631": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "3633": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3634": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3635": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3636": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3638": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3640": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3641": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3643": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3644": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3645": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3646": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3648": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3649": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3650": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3651": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3094
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3652": {
      "fn": "Voting.vote",
      "offset": [
        3095,
        3115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3653": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3654": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "LT",
      "path": "0"
    },
    "3655": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE60"
    },
    "3658": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3659": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3669": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3670": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3672": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3674": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3675": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3677": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3679": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3680": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3681": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3683": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3684": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3685": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3686": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3688": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3689": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3690": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3691": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3693": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3695": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3696": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3697": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "MUL",
      "path": "0"
    },
    "3698": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3116
      ],
      "op": "ADD",
      "path": "0"
    },
    "3699": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3124
      ],
      "op": "ADD",
      "path": "0"
    },
    "3700": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3124
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3701": {
      "fn": "Voting.vote",
      "offset": [
        3088,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3703": {
      "branch": 29,
      "fn": "Voting.vote",
      "offset": [
        3088,
        3124
      ],
      "op": "AND",
      "path": "0"
    },
    "3704": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC3"
    },
    "3707": {
      "branch": 29,
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3708": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3710": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3717": {
      "op": "SHL"
    },
    "3718": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3719": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3722": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3724": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3725": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "ADD",
      "path": "0"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3731": {
      "op": "DUP3"
    },
    "3732": {
      "op": "ADD"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3769": {
      "op": "DUP3"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "op": "MSTORE"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3778": {
      "op": "JUMP"
    },
    "3779": {
      "fn": "Voting.vote",
      "offset": [
        3080,
        3154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3780": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3782": {
      "fn": "Voting.vote",
      "offset": [
        3178,
        3224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED0"
    },
    "3785": {
      "fn": "Voting.vote",
      "offset": [
        3192,
        3199
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3786": {
      "fn": "Voting.vote",
      "offset": [
        3201,
        3214
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3787": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3223
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3788": {
      "fn": "Voting.vote",
      "offset": [
        3178,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DC"
    },
    "3791": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3178,
        3224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3792": {
      "fn": "Voting.vote",
      "offset": [
        3178,
        3224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3793": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "3795": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3796": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3797": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3798": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3800": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3802": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3803": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3805": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3806": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3807": {
      "fn": "Voting.vote",
      "offset": [
        3253,
        3267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3808": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3810": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3811": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3812": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3224
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3813": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3224
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3814": {
      "op": "POP"
    },
    "3815": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3252
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3816": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3817": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "LT",
      "path": "0"
    },
    "3818": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF03"
    },
    "3821": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3822": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3829": {
      "op": "SHL"
    },
    "3830": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3832": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3833": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3835": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3837": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3838": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3840": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3842": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3843": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3844": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3846": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3847": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3848": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3849": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3851": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3852": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3853": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3854": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3856": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3858": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3859": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3860": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "MUL",
      "path": "0"
    },
    "3861": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3268
      ],
      "op": "ADD",
      "path": "0"
    },
    "3862": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3275
      ],
      "op": "ADD",
      "path": "0"
    },
    "3863": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3275
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3864": {
      "fn": "Voting.vote",
      "offset": [
        3242,
        3275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3866": {
      "branch": 30,
      "fn": "Voting.vote",
      "offset": [
        3242,
        3275
      ],
      "op": "AND",
      "path": "0"
    },
    "3867": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF66"
    },
    "3870": {
      "branch": 30,
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3871": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3873": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3882": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3885": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3887": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3888": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "ADD",
      "path": "0"
    },
    "3889": {
      "op": "MSTORE"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH32",
      "value": "0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3932": {
      "op": "DUP3"
    },
    "3933": {
      "op": "ADD"
    },
    "3934": {
      "op": "MSTORE"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3937": {
      "op": "ADD"
    },
    "3938": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3941": {
      "op": "JUMP"
    },
    "3942": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3943": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "3945": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3946": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3947": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3948": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3950": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3952": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3953": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3955": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3956": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3957": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3958": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3960": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3961": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3962": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3432
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3963": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3432
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3964": {
      "fn": "Voting.vote",
      "offset": [
        3433,
        3453
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3965": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3966": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "LT",
      "path": "0"
    },
    "3967": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF98"
    },
    "3970": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3971": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3978": {
      "op": "SHL"
    },
    "3979": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3981": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3982": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3984": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3986": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3987": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3989": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3991": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3992": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3993": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3994": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3996": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3997": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3999": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4001": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4002": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4003": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4005": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "MUL",
      "path": "0"
    },
    "4006": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3454
      ],
      "op": "ADD",
      "path": "0"
    },
    "4007": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4009": {
      "fn": "Voting.vote",
      "offset": [
        3426,
        3467
      ],
      "op": "ADD",
      "path": "0"
    },
    "4010": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4012": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4013": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4015": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "ADD",
      "path": "0"
    },
    "4016": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB9"
    },
    "4019": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4020": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4021": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149C"
    },
    "4024": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3409,
        3468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4025": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4026": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4028": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4029": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4031": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4032": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4033": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "SUB",
      "path": "0"
    },
    "4034": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "SUB",
      "path": "0"
    },
    "4035": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4036": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4037": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4038": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4040": {
      "fn": "Voting.vote",
      "offset": [
        3409,
        3468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4041": {
      "fn": "Voting.vote",
      "offset": [
        3399,
        3469
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4042": {
      "fn": "Voting.vote",
      "offset": [
        3399,
        3469
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4043": {
      "fn": "Voting.vote",
      "offset": [
        3399,
        3469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4044": {
      "fn": "Voting.vote",
      "offset": [
        3399,
        3469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4046": {
      "fn": "Voting.vote",
      "offset": [
        3399,
        3469
      ],
      "op": "ADD",
      "path": "0"
    },
    "4047": {
      "fn": "Voting.vote",
      "offset": [
        3399,
        3469
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4048": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4050": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4052": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4054": {
      "fn": "Voting.vote",
      "offset": [
        3372,
        3378
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4055": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4056": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4057": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4059": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "ADD",
      "path": "0"
    },
    "4060": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4061": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4062": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4063": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4065": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "ADD",
      "path": "0"
    },
    "4066": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4068": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4069": {
      "fn": "Voting.vote",
      "offset": [
        3365,
        3379
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4070": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4071": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4072": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4073": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "LT",
      "path": "0"
    },
    "4074": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1003"
    },
    "4077": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4078": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4085": {
      "op": "SHL"
    },
    "4086": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4088": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4089": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4091": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4093": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4094": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4096": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4098": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4099": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4100": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4101": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4103": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4104": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4106": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4108": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4109": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4110": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4112": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "MUL",
      "path": "0"
    },
    "4113": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3380
      ],
      "op": "ADD",
      "path": "0"
    },
    "4114": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4116": {
      "fn": "Voting.vote",
      "offset": [
        3354,
        3393
      ],
      "op": "ADD",
      "path": "0"
    },
    "4117": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4119": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4120": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4122": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "ADD",
      "path": "0"
    },
    "4123": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1024"
    },
    "4126": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4127": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4128": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149C"
    },
    "4131": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3337,
        3394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4132": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4133": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4135": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4136": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4138": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4139": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4140": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "SUB",
      "path": "0"
    },
    "4141": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "SUB",
      "path": "0"
    },
    "4142": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4143": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4144": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4145": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4147": {
      "fn": "Voting.vote",
      "offset": [
        3337,
        3394
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4148": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3395
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4149": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3395
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4150": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4151": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4153": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3395
      ],
      "op": "ADD",
      "path": "0"
    },
    "4154": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3395
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4155": {
      "branch": 31,
      "fn": "Voting.vote",
      "offset": [
        3327,
        3469
      ],
      "op": "EQ",
      "path": "0"
    },
    "4156": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BC"
    },
    "4159": {
      "branch": 31,
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4160": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4162": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4169": {
      "op": "SHL"
    },
    "4170": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4171": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4174": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4176": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4177": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "ADD",
      "path": "0"
    },
    "4178": {
      "op": "MSTORE"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4183": {
      "op": "DUP3"
    },
    "4184": {
      "op": "ADD"
    },
    "4185": {
      "op": "MSTORE"
    },
    "4186": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4221": {
      "op": "DUP3"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH32",
      "value": "0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4259": {
      "op": "DUP3"
    },
    "4260": {
      "op": "ADD"
    },
    "4261": {
      "op": "MSTORE"
    },
    "4262": {
      "op": "PUSH6",
      "value": "0x3AB2B731BC97"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4279": {
      "op": "ADD"
    },
    "4280": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "4283": {
      "op": "JUMP"
    },
    "4284": {
      "fn": "Voting.vote",
      "offset": [
        3319,
        3544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4285": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "4287": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4288": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4289": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4290": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4292": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4294": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4295": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4297": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4298": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4299": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4300": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4302": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4303": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4304": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4305": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3564
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4306": {
      "fn": "Voting.vote",
      "offset": [
        3565,
        3579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4307": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4308": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "LT",
      "path": "0"
    },
    "4309": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EE"
    },
    "4312": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4313": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4320": {
      "op": "SHL"
    },
    "4321": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4323": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4324": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4326": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4328": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4329": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4331": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4333": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4334": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4335": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4337": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4338": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4339": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4340": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4342": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4343": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4344": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4346": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4348": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4349": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4350": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "MUL",
      "path": "0"
    },
    "4351": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3580
      ],
      "op": "ADD",
      "path": "0"
    },
    "4352": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3590
      ],
      "op": "ADD",
      "path": "0"
    },
    "4353": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4354": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4355": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4356": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110C"
    },
    "4359": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4360": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B1"
    },
    "4363": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3554,
        3592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4364": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4365": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4366": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4367": {
      "fn": "Voting.vote",
      "offset": [
        3554,
        3592
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4368": {
      "op": "POP"
    },
    "4369": {
      "op": "POP"
    },
    "4370": {
      "fn": "Voting.vote",
      "offset": [
        3642,
        3647
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "4372": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4373": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4374": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4375": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4377": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4379": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4380": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4382": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4383": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4384": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4385": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4387": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4388": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4389": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4390": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4391": {
      "fn": "Voting.vote",
      "offset": [
        3610,
        3630
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4392": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4393": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "LT",
      "path": "0"
    },
    "4394": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1143"
    },
    "4397": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4398": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4408": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4409": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4411": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4413": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4414": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4416": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4418": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4419": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4420": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4422": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4423": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4424": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4425": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4427": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4428": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4429": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4430": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4432": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4433": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4434": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "MUL",
      "path": "0"
    },
    "4435": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3631
      ],
      "op": "ADD",
      "path": "0"
    },
    "4436": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4438": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3639
      ],
      "op": "ADD",
      "path": "0"
    },
    "4439": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4440": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4443": {
      "op": "NOT"
    },
    "4444": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "AND",
      "path": "0"
    },
    "4445": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4446": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4447": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4448": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4449": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4450": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4451": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "OR",
      "path": "0"
    },
    "4452": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4453": {
      "fn": "Voting.vote",
      "offset": [
        3603,
        3647
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "POP"
    },
    "4456": {
      "op": "POP"
    },
    "4457": {
      "op": "POP"
    },
    "4458": {
      "op": "POP"
    },
    "4459": {
      "fn": "Voting.vote",
      "jump": "o",
      "offset": [
        2808,
        3654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4460": {
      "fn": "Voting.getElectionState",
      "offset": [
        3834,
        3932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4461": {
      "fn": "Voting.getElectionState",
      "offset": [
        3893,
        3897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4463": {
      "offset": [
        153,
        165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4464": {
      "fn": "Voting.getElectionState",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4471": {
      "op": "SHL"
    },
    "4472": {
      "op": "SUB"
    },
    "4473": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "4474": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4475": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "4476": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1197"
    },
    "4479": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4480": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4482": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4489": {
      "op": "SHL"
    },
    "4490": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4491": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4492": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4494": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "4495": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "4498": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4499": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "4502": {
      "fn": "Voting.getElectionState",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4503": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "4507": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4514": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "DIV",
      "path": "0"
    },
    "4515": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4517": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "AND",
      "path": "0"
    },
    "4518": {
      "fn": "Voting.getElectionState",
      "offset": [
        3915,
        3925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4519": {
      "fn": "Voting.getElectionState",
      "jump": "o",
      "offset": [
        3834,
        3932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4520": {
      "op": "JUMPDEST"
    },
    "4521": {
      "op": "DUP3"
    },
    "4522": {
      "op": "DUP1"
    },
    "4523": {
      "op": "SLOAD"
    },
    "4524": {
      "op": "PUSH2",
      "value": "0x11B4"
    },
    "4527": {
      "op": "SWAP1"
    },
    "4528": {
      "op": "PUSH2",
      "value": "0x1776"
    },
    "4531": {
      "jump": "i",
      "op": "JUMP"
    },
    "4532": {
      "op": "JUMPDEST"
    },
    "4533": {
      "op": "SWAP1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "MSTORE"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4541": {
      "op": "KECCAK256"
    },
    "4542": {
      "op": "SWAP1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4548": {
      "op": "SWAP1"
    },
    "4549": {
      "op": "DIV"
    },
    "4550": {
      "op": "DUP2"
    },
    "4551": {
      "op": "ADD"
    },
    "4552": {
      "op": "SWAP3"
    },
    "4553": {
      "op": "DUP3"
    },
    "4554": {
      "op": "PUSH2",
      "value": "0x11D6"
    },
    "4557": {
      "op": "JUMPI"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4560": {
      "op": "DUP6"
    },
    "4561": {
      "op": "SSTORE"
    },
    "4562": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4565": {
      "op": "JUMP"
    },
    "4566": {
      "op": "JUMPDEST"
    },
    "4567": {
      "op": "DUP3"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4570": {
      "op": "LT"
    },
    "4571": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "4574": {
      "op": "JUMPI"
    },
    "4575": {
      "op": "DUP1"
    },
    "4576": {
      "op": "MLOAD"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4579": {
      "op": "NOT"
    },
    "4580": {
      "op": "AND"
    },
    "4581": {
      "op": "DUP4"
    },
    "4582": {
      "op": "DUP1"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "OR"
    },
    "4585": {
      "op": "DUP6"
    },
    "4586": {
      "op": "SSTORE"
    },
    "4587": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4590": {
      "op": "JUMP"
    },
    "4591": {
      "op": "JUMPDEST"
    },
    "4592": {
      "op": "DUP3"
    },
    "4593": {
      "op": "DUP1"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4597": {
      "op": "ADD"
    },
    "4598": {
      "op": "DUP6"
    },
    "4599": {
      "op": "SSTORE"
    },
    "4600": {
      "op": "DUP3"
    },
    "4601": {
      "op": "ISZERO"
    },
    "4602": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4605": {
      "op": "JUMPI"
    },
    "4606": {
      "op": "SWAP2"
    },
    "4607": {
      "op": "DUP3"
    },
    "4608": {
      "op": "ADD"
    },
    "4609": {
      "op": "JUMPDEST"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "DUP2"
    },
    "4612": {
      "op": "GT"
    },
    "4613": {
      "op": "ISZERO"
    },
    "4614": {
      "op": "PUSH2",
      "value": "0x121C"
    },
    "4617": {
      "op": "JUMPI"
    },
    "4618": {
      "op": "DUP3"
    },
    "4619": {
      "op": "MLOAD"
    },
    "4620": {
      "op": "DUP3"
    },
    "4621": {
      "op": "SSTORE"
    },
    "4622": {
      "op": "SWAP2"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4625": {
      "op": "ADD"
    },
    "4626": {
      "op": "SWAP2"
    },
    "4627": {
      "op": "SWAP1"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4630": {
      "op": "ADD"
    },
    "4631": {
      "op": "SWAP1"
    },
    "4632": {
      "op": "PUSH2",
      "value": "0x1201"
    },
    "4635": {
      "op": "JUMP"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x1228"
    },
    "4641": {
      "op": "SWAP3"
    },
    "4642": {
      "op": "SWAP2"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "4647": {
      "jump": "i",
      "op": "JUMP"
    },
    "4648": {
      "op": "JUMPDEST"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "SWAP1"
    },
    "4651": {
      "jump": "o",
      "op": "JUMP"
    },
    "4652": {
      "op": "JUMPDEST"
    },
    "4653": {
      "op": "JUMPDEST"
    },
    "4654": {
      "op": "DUP1"
    },
    "4655": {
      "op": "DUP3"
    },
    "4656": {
      "op": "GT"
    },
    "4657": {
      "op": "ISZERO"
    },
    "4658": {
      "op": "PUSH2",
      "value": "0x1228"
    },
    "4661": {
      "op": "JUMPI"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "DUP2"
    },
    "4665": {
      "op": "SSTORE"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4668": {
      "op": "ADD"
    },
    "4669": {
      "op": "PUSH2",
      "value": "0x122D"
    },
    "4672": {
      "op": "JUMP"
    },
    "4673": {
      "op": "JUMPDEST"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4676": {
      "op": "DUP3"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4679": {
      "op": "DUP4"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "op": "SLT"
    },
    "4682": {
      "op": "PUSH2",
      "value": "0x1251"
    },
    "4685": {
      "op": "JUMPI"
    },
    "4686": {
      "op": "DUP1"
    },
    "4687": {
      "op": "DUP2"
    },
    "4688": {
      "op": "REVERT"
    },
    "4689": {
      "op": "JUMPDEST"
    },
    "4690": {
      "op": "DUP2"
    },
    "4691": {
      "op": "CALLDATALOAD"
    },
    "4692": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4701": {
      "op": "DUP1"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "GT"
    },
    "4704": {
      "op": "ISZERO"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x126C"
    },
    "4708": {
      "op": "JUMPI"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0x126C"
    },
    "4712": {
      "op": "PUSH2",
      "value": "0x17E2"
    },
    "4715": {
      "jump": "i",
      "op": "JUMP"
    },
    "4716": {
      "op": "JUMPDEST"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4719": {
      "op": "MLOAD"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4722": {
      "op": "DUP4"
    },
    "4723": {
      "op": "ADD"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4726": {
      "op": "NOT"
    },
    "4727": {
      "op": "SWAP1"
    },
    "4728": {
      "op": "DUP2"
    },
    "4729": {
      "op": "AND"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4732": {
      "op": "ADD"
    },
    "4733": {
      "op": "AND"
    },
    "4734": {
      "op": "DUP2"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "SWAP1"
    },
    "4737": {
      "op": "DUP3"
    },
    "4738": {
      "op": "DUP3"
    },
    "4739": {
      "op": "GT"
    },
    "4740": {
      "op": "DUP2"
    },
    "4741": {
      "op": "DUP4"
    },
    "4742": {
      "op": "LT"
    },
    "4743": {
      "op": "OR"
    },
    "4744": {
      "op": "ISZERO"
    },
    "4745": {
      "op": "PUSH2",
      "value": "0x1294"
    },
    "4748": {
      "op": "JUMPI"
    },
    "4749": {
      "op": "PUSH2",
      "value": "0x1294"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x17E2"
    },
    "4755": {
      "jump": "i",
      "op": "JUMP"
    },
    "4756": {
      "op": "JUMPDEST"
    },
    "4757": {
      "op": "DUP2"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4760": {
      "op": "MSTORE"
    },
    "4761": {
      "op": "DUP4"
    },
    "4762": {
      "op": "DUP2"
    },
    "4763": {
      "op": "MSTORE"
    },
    "4764": {
      "op": "DUP7"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4767": {
      "op": "DUP6"
    },
    "4768": {
      "op": "DUP9"
    },
    "4769": {
      "op": "ADD"
    },
    "4770": {
      "op": "ADD"
    },
    "4771": {
      "op": "GT"
    },
    "4772": {
      "op": "ISZERO"
    },
    "4773": {
      "op": "PUSH2",
      "value": "0x12AC"
    },
    "4776": {
      "op": "JUMPI"
    },
    "4777": {
      "op": "DUP5"
    },
    "4778": {
      "op": "DUP6"
    },
    "4779": {
      "op": "REVERT"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "op": "DUP4"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4784": {
      "op": "DUP8"
    },
    "4785": {
      "op": "ADD"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4788": {
      "op": "DUP4"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "CALLDATACOPY"
    },
    "4791": {
      "op": "SWAP3"
    },
    "4792": {
      "op": "DUP4"
    },
    "4793": {
      "op": "ADD"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4796": {
      "op": "ADD"
    },
    "4797": {
      "op": "SWAP4"
    },
    "4798": {
      "op": "SWAP1"
    },
    "4799": {
      "op": "SWAP4"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "SWAP4"
    },
    "4803": {
      "op": "SWAP3"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "POP"
    },
    "4807": {
      "jump": "o",
      "op": "JUMP"
    },
    "4808": {
      "op": "JUMPDEST"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4811": {
      "op": "DUP1"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4816": {
      "op": "DUP5"
    },
    "4817": {
      "op": "DUP7"
    },
    "4818": {
      "op": "SUB"
    },
    "4819": {
      "op": "SLT"
    },
    "4820": {
      "op": "ISZERO"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0x12DC"
    },
    "4824": {
      "op": "JUMPI"
    },
    "4825": {
      "op": "DUP3"
    },
    "4826": {
      "op": "DUP4"
    },
    "4827": {
      "op": "REVERT"
    },
    "4828": {
      "op": "JUMPDEST"
    },
    "4829": {
      "op": "DUP4"
    },
    "4830": {
      "op": "CALLDATALOAD"
    },
    "4831": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4840": {
      "op": "DUP1"
    },
    "4841": {
      "op": "DUP3"
    },
    "4842": {
      "op": "GT"
    },
    "4843": {
      "op": "ISZERO"
    },
    "4844": {
      "op": "PUSH2",
      "value": "0x12F3"
    },
    "4847": {
      "op": "JUMPI"
    },
    "4848": {
      "op": "DUP5"
    },
    "4849": {
      "op": "DUP6"
    },
    "4850": {
      "op": "REVERT"
    },
    "4851": {
      "op": "JUMPDEST"
    },
    "4852": {
      "op": "PUSH2",
      "value": "0x12FF"
    },
    "4855": {
      "op": "DUP8"
    },
    "4856": {
      "op": "DUP4"
    },
    "4857": {
      "op": "DUP9"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4862": {
      "jump": "i",
      "op": "JUMP"
    },
    "4863": {
      "op": "JUMPDEST"
    },
    "4864": {
      "op": "SWAP5"
    },
    "4865": {
      "op": "POP"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4868": {
      "op": "DUP7"
    },
    "4869": {
      "op": "ADD"
    },
    "4870": {
      "op": "CALLDATALOAD"
    },
    "4871": {
      "op": "SWAP2"
    },
    "4872": {
      "op": "POP"
    },
    "4873": {
      "op": "DUP1"
    },
    "4874": {
      "op": "DUP3"
    },
    "4875": {
      "op": "GT"
    },
    "4876": {
      "op": "ISZERO"
    },
    "4877": {
      "op": "PUSH2",
      "value": "0x1314"
    },
    "4880": {
      "op": "JUMPI"
    },
    "4881": {
      "op": "DUP4"
    },
    "4882": {
      "op": "DUP5"
    },
    "4883": {
      "op": "REVERT"
    },
    "4884": {
      "op": "JUMPDEST"
    },
    "4885": {
      "op": "PUSH2",
      "value": "0x1320"
    },
    "4888": {
      "op": "DUP8"
    },
    "4889": {
      "op": "DUP4"
    },
    "4890": {
      "op": "DUP9"
    },
    "4891": {
      "op": "ADD"
    },
    "4892": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4895": {
      "jump": "i",
      "op": "JUMP"
    },
    "4896": {
      "op": "JUMPDEST"
    },
    "4897": {
      "op": "SWAP4"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4901": {
      "op": "DUP7"
    },
    "4902": {
      "op": "ADD"
    },
    "4903": {
      "op": "CALLDATALOAD"
    },
    "4904": {
      "op": "SWAP2"
    },
    "4905": {
      "op": "POP"
    },
    "4906": {
      "op": "DUP1"
    },
    "4907": {
      "op": "DUP3"
    },
    "4908": {
      "op": "GT"
    },
    "4909": {
      "op": "ISZERO"
    },
    "4910": {
      "op": "PUSH2",
      "value": "0x1335"
    },
    "4913": {
      "op": "JUMPI"
    },
    "4914": {
      "op": "DUP3"
    },
    "4915": {
      "op": "DUP4"
    },
    "4916": {
      "op": "REVERT"
    },
    "4917": {
      "op": "JUMPDEST"
    },
    "4918": {
      "op": "POP"
    },
    "4919": {
      "op": "PUSH2",
      "value": "0x1342"
    },
    "4922": {
      "op": "DUP7"
    },
    "4923": {
      "op": "DUP3"
    },
    "4924": {
      "op": "DUP8"
    },
    "4925": {
      "op": "ADD"
    },
    "4926": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4929": {
      "jump": "i",
      "op": "JUMP"
    },
    "4930": {
      "op": "JUMPDEST"
    },
    "4931": {
      "op": "SWAP2"
    },
    "4932": {
      "op": "POP"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "op": "SWAP3"
    },
    "4935": {
      "op": "POP"
    },
    "4936": {
      "op": "SWAP3"
    },
    "4937": {
      "op": "POP"
    },
    "4938": {
      "op": "SWAP3"
    },
    "4939": {
      "jump": "o",
      "op": "JUMP"
    },
    "4940": {
      "op": "JUMPDEST"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4943": {
      "op": "DUP1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4948": {
      "op": "DUP5"
    },
    "4949": {
      "op": "DUP7"
    },
    "4950": {
      "op": "SUB"
    },
    "4951": {
      "op": "SLT"
    },
    "4952": {
      "op": "ISZERO"
    },
    "4953": {
      "op": "PUSH2",
      "value": "0x1360"
    },
    "4956": {
      "op": "JUMPI"
    },
    "4957": {
      "op": "DUP3"
    },
    "4958": {
      "op": "DUP4"
    },
    "4959": {
      "op": "REVERT"
    },
    "4960": {
      "op": "JUMPDEST"
    },
    "4961": {
      "op": "DUP4"
    },
    "4962": {
      "op": "CALLDATALOAD"
    },
    "4963": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4972": {
      "op": "DUP1"
    },
    "4973": {
      "op": "DUP3"
    },
    "4974": {
      "op": "GT"
    },
    "4975": {
      "op": "ISZERO"
    },
    "4976": {
      "op": "PUSH2",
      "value": "0x1377"
    },
    "4979": {
      "op": "JUMPI"
    },
    "4980": {
      "op": "DUP5"
    },
    "4981": {
      "op": "DUP6"
    },
    "4982": {
      "op": "REVERT"
    },
    "4983": {
      "op": "JUMPDEST"
    },
    "4984": {
      "op": "PUSH2",
      "value": "0x1383"
    },
    "4987": {
      "op": "DUP8"
    },
    "4988": {
      "op": "DUP4"
    },
    "4989": {
      "op": "DUP9"
    },
    "4990": {
      "op": "ADD"
    },
    "4991": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "4994": {
      "jump": "i",
      "op": "JUMP"
    },
    "4995": {
      "op": "JUMPDEST"
    },
    "4996": {
      "op": "SWAP5"
    },
    "4997": {
      "op": "POP"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5000": {
      "op": "DUP7"
    },
    "5001": {
      "op": "ADD"
    },
    "5002": {
      "op": "CALLDATALOAD"
    },
    "5003": {
      "op": "SWAP4"
    },
    "5004": {
      "op": "POP"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5007": {
      "op": "DUP7"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "CALLDATALOAD"
    },
    "5010": {
      "op": "SWAP2"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "DUP1"
    },
    "5013": {
      "op": "DUP3"
    },
    "5014": {
      "op": "GT"
    },
    "5015": {
      "op": "ISZERO"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x1335"
    },
    "5019": {
      "op": "JUMPI"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "DUP4"
    },
    "5022": {
      "op": "REVERT"
    },
    "5023": {
      "op": "JUMPDEST"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5026": {
      "op": "DUP1"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5029": {
      "op": "DUP1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5032": {
      "op": "DUP6"
    },
    "5033": {
      "op": "DUP8"
    },
    "5034": {
      "op": "SUB"
    },
    "5035": {
      "op": "SLT"
    },
    "5036": {
      "op": "ISZERO"
    },
    "5037": {
      "op": "PUSH2",
      "value": "0x13B4"
    },
    "5040": {
      "op": "JUMPI"
    },
    "5041": {
      "op": "DUP1"
    },
    "5042": {
      "op": "DUP2"
    },
    "5043": {
      "op": "REVERT"
    },
    "5044": {
      "op": "JUMPDEST"
    },
    "5045": {
      "op": "DUP5"
    },
    "5046": {
      "op": "CALLDATALOAD"
    },
    "5047": {
      "op": "SWAP4"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5051": {
      "op": "DUP6"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "CALLDATALOAD"
    },
    "5054": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5063": {
      "op": "DUP1"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "GT"
    },
    "5066": {
      "op": "ISZERO"
    },
    "5067": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5070": {
      "op": "JUMPI"
    },
    "5071": {
      "op": "DUP3"
    },
    "5072": {
      "op": "DUP4"
    },
    "5073": {
      "op": "REVERT"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "PUSH2",
      "value": "0x13DE"
    },
    "5078": {
      "op": "DUP9"
    },
    "5079": {
      "op": "DUP4"
    },
    "5080": {
      "op": "DUP10"
    },
    "5081": {
      "op": "ADD"
    },
    "5082": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "5085": {
      "jump": "i",
      "op": "JUMP"
    },
    "5086": {
      "op": "JUMPDEST"
    },
    "5087": {
      "op": "SWAP5"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5091": {
      "op": "DUP8"
    },
    "5092": {
      "op": "ADD"
    },
    "5093": {
      "op": "CALLDATALOAD"
    },
    "5094": {
      "op": "SWAP2"
    },
    "5095": {
      "op": "POP"
    },
    "5096": {
      "op": "DUP1"
    },
    "5097": {
      "op": "DUP3"
    },
    "5098": {
      "op": "GT"
    },
    "5099": {
      "op": "ISZERO"
    },
    "5100": {
      "op": "PUSH2",
      "value": "0x13F3"
    },
    "5103": {
      "op": "JUMPI"
    },
    "5104": {
      "op": "DUP3"
    },
    "5105": {
      "op": "DUP4"
    },
    "5106": {
      "op": "REVERT"
    },
    "5107": {
      "op": "JUMPDEST"
    },
    "5108": {
      "op": "PUSH2",
      "value": "0x13FF"
    },
    "5111": {
      "op": "DUP9"
    },
    "5112": {
      "op": "DUP4"
    },
    "5113": {
      "op": "DUP10"
    },
    "5114": {
      "op": "ADD"
    },
    "5115": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "5118": {
      "jump": "i",
      "op": "JUMP"
    },
    "5119": {
      "op": "JUMPDEST"
    },
    "5120": {
      "op": "SWAP4"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5124": {
      "op": "DUP8"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "CALLDATALOAD"
    },
    "5127": {
      "op": "SWAP2"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "DUP1"
    },
    "5130": {
      "op": "DUP3"
    },
    "5131": {
      "op": "GT"
    },
    "5132": {
      "op": "ISZERO"
    },
    "5133": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5136": {
      "op": "JUMPI"
    },
    "5137": {
      "op": "DUP3"
    },
    "5138": {
      "op": "DUP4"
    },
    "5139": {
      "op": "REVERT"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "op": "POP"
    },
    "5142": {
      "op": "PUSH2",
      "value": "0x1421"
    },
    "5145": {
      "op": "DUP8"
    },
    "5146": {
      "op": "DUP3"
    },
    "5147": {
      "op": "DUP9"
    },
    "5148": {
      "op": "ADD"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1241"
    },
    "5152": {
      "jump": "i",
      "op": "JUMP"
    },
    "5153": {
      "op": "JUMPDEST"
    },
    "5154": {
      "op": "SWAP2"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "op": "SWAP3"
    },
    "5158": {
      "op": "SWAP6"
    },
    "5159": {
      "op": "SWAP2"
    },
    "5160": {
      "op": "SWAP5"
    },
    "5161": {
      "op": "POP"
    },
    "5162": {
      "op": "SWAP3"
    },
    "5163": {
      "op": "POP"
    },
    "5164": {
      "jump": "o",
      "op": "JUMP"
    },
    "5165": {
      "op": "JUMPDEST"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5168": {
      "op": "DUP2"
    },
    "5169": {
      "op": "MLOAD"
    },
    "5170": {
      "op": "DUP1"
    },
    "5171": {
      "op": "DUP5"
    },
    "5172": {
      "op": "MSTORE"
    },
    "5173": {
      "op": "PUSH2",
      "value": "0x1445"
    },
    "5176": {
      "op": "DUP2"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5179": {
      "op": "DUP7"
    },
    "5180": {
      "op": "ADD"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5183": {
      "op": "DUP7"
    },
    "5184": {
      "op": "ADD"
    },
    "5185": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5188": {
      "jump": "i",
      "op": "JUMP"
    },
    "5189": {
      "op": "JUMPDEST"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5195": {
      "op": "NOT"
    },
    "5196": {
      "op": "AND"
    },
    "5197": {
      "op": "SWAP3"
    },
    "5198": {
      "op": "SWAP1"
    },
    "5199": {
      "op": "SWAP3"
    },
    "5200": {
      "op": "ADD"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5203": {
      "op": "ADD"
    },
    "5204": {
      "op": "SWAP3"
    },
    "5205": {
      "op": "SWAP2"
    },
    "5206": {
      "op": "POP"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "jump": "o",
      "op": "JUMP"
    },
    "5209": {
      "op": "JUMPDEST"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5212": {
      "op": "DUP5"
    },
    "5213": {
      "op": "MLOAD"
    },
    "5214": {
      "op": "PUSH2",
      "value": "0x146B"
    },
    "5217": {
      "op": "DUP2"
    },
    "5218": {
      "op": "DUP5"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5221": {
      "op": "DUP10"
    },
    "5222": {
      "op": "ADD"
    },
    "5223": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5226": {
      "jump": "i",
      "op": "JUMP"
    },
    "5227": {
      "op": "JUMPDEST"
    },
    "5228": {
      "op": "DUP5"
    },
    "5229": {
      "op": "MLOAD"
    },
    "5230": {
      "op": "SWAP1"
    },
    "5231": {
      "op": "DUP4"
    },
    "5232": {
      "op": "ADD"
    },
    "5233": {
      "op": "SWAP1"
    },
    "5234": {
      "op": "PUSH2",
      "value": "0x147F"
    },
    "5237": {
      "op": "DUP2"
    },
    "5238": {
      "op": "DUP4"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5241": {
      "op": "DUP10"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5246": {
      "jump": "i",
      "op": "JUMP"
    },
    "5247": {
      "op": "JUMPDEST"
    },
    "5248": {
      "op": "DUP5"
    },
    "5249": {
      "op": "MLOAD"
    },
    "5250": {
      "op": "SWAP2"
    },
    "5251": {
      "op": "ADD"
    },
    "5252": {
      "op": "SWAP1"
    },
    "5253": {
      "op": "PUSH2",
      "value": "0x1492"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "DUP4"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5260": {
      "op": "DUP9"
    },
    "5261": {
      "op": "ADD"
    },
    "5262": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5265": {
      "jump": "i",
      "op": "JUMP"
    },
    "5266": {
      "op": "JUMPDEST"
    },
    "5267": {
      "op": "ADD"
    },
    "5268": {
      "op": "SWAP6"
    },
    "5269": {
      "op": "SWAP5"
    },
    "5270": {
      "op": "POP"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "op": "POP"
    },
    "5274": {
      "op": "POP"
    },
    "5275": {
      "jump": "o",
      "op": "JUMP"
    },
    "5276": {
      "op": "JUMPDEST"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5279": {
      "op": "DUP1"
    },
    "5280": {
      "op": "DUP4"
    },
    "5281": {
      "op": "SLOAD"
    },
    "5282": {
      "op": "DUP3"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5285": {
      "op": "DUP3"
    },
    "5286": {
      "op": "DUP2"
    },
    "5287": {
      "op": "SHR"
    },
    "5288": {
      "op": "SWAP2"
    },
    "5289": {
      "op": "POP"
    },
    "5290": {
      "op": "DUP1"
    },
    "5291": {
      "op": "DUP4"
    },
    "5292": {
      "op": "AND"
    },
    "5293": {
      "op": "DUP1"
    },
    "5294": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "5297": {
      "op": "JUMPI"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5300": {
      "op": "DUP4"
    },
    "5301": {
      "op": "AND"
    },
    "5302": {
      "op": "SWAP3"
    },
    "5303": {
      "op": "POP"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5307": {
      "op": "DUP1"
    },
    "5308": {
      "op": "DUP5"
    },
    "5309": {
      "op": "LT"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "EQ"
    },
    "5312": {
      "op": "ISZERO"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5316": {
      "op": "JUMPI"
    },
    "5317": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5324": {
      "op": "SHL"
    },
    "5325": {
      "op": "DUP8"
    },
    "5326": {
      "op": "MSTORE"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5331": {
      "op": "MSTORE"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5334": {
      "op": "DUP8"
    },
    "5335": {
      "op": "REVERT"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "DUP2"
    },
    "5338": {
      "op": "DUP1"
    },
    "5339": {
      "op": "ISZERO"
    },
    "5340": {
      "op": "PUSH2",
      "value": "0x14EC"
    },
    "5343": {
      "op": "JUMPI"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "EQ"
    },
    "5348": {
      "op": "PUSH2",
      "value": "0x14FD"
    },
    "5351": {
      "op": "JUMPI"
    },
    "5352": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5355": {
      "op": "JUMP"
    },
    "5356": {
      "op": "JUMPDEST"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5359": {
      "op": "NOT"
    },
    "5360": {
      "op": "DUP7"
    },
    "5361": {
      "op": "AND"
    },
    "5362": {
      "op": "DUP10"
    },
    "5363": {
      "op": "MSTORE"
    },
    "5364": {
      "op": "DUP5"
    },
    "5365": {
      "op": "DUP10"
    },
    "5366": {
      "op": "ADD"
    },
    "5367": {
      "op": "SWAP7"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5372": {
      "op": "JUMP"
    },
    "5373": {
      "op": "JUMPDEST"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5376": {
      "op": "DUP11"
    },
    "5377": {
      "op": "DUP2"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5381": {
      "op": "SWAP1"
    },
    "5382": {
      "op": "KECCAK256"
    },
    "5383": {
      "op": "DUP9"
    },
    "5384": {
      "op": "JUMPDEST"
    },
    "5385": {
      "op": "DUP7"
    },
    "5386": {
      "op": "DUP2"
    },
    "5387": {
      "op": "LT"
    },
    "5388": {
      "op": "ISZERO"
    },
    "5389": {
      "op": "PUSH2",
      "value": "0x1521"
    },
    "5392": {
      "op": "JUMPI"
    },
    "5393": {
      "op": "DUP2"
    },
    "5394": {
      "op": "SLOAD"
    },
    "5395": {
      "op": "DUP12"
    },
    "5396": {
      "op": "DUP3"
    },
    "5397": {
      "op": "ADD"
    },
    "5398": {
      "op": "MSTORE"
    },
    "5399": {
      "op": "SWAP1"
    },
    "5400": {
      "op": "DUP6"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "op": "SWAP1"
    },
    "5403": {
      "op": "DUP4"
    },
    "5404": {
      "op": "ADD"
    },
    "5405": {
      "op": "PUSH2",
      "value": "0x1508"
    },
    "5408": {
      "op": "JUMP"
    },
    "5409": {
      "op": "JUMPDEST"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "op": "POP"
    },
    "5412": {
      "op": "DUP5"
    },
    "5413": {
      "op": "DUP10"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "SWAP7"
    },
    "5416": {
      "op": "POP"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "SWAP5"
    },
    "5420": {
      "op": "SWAP9"
    },
    "5421": {
      "op": "SWAP8"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "op": "POP"
    },
    "5426": {
      "op": "POP"
    },
    "5427": {
      "op": "POP"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "jump": "o",
      "op": "JUMP"
    },
    "5431": {
      "op": "JUMPDEST"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5436": {
      "op": "DUP1"
    },
    "5437": {
      "op": "DUP4"
    },
    "5438": {
      "op": "ADD"
    },
    "5439": {
      "op": "DUP2"
    },
    "5440": {
      "op": "DUP5"
    },
    "5441": {
      "op": "MSTORE"
    },
    "5442": {
      "op": "DUP1"
    },
    "5443": {
      "op": "DUP6"
    },
    "5444": {
      "op": "MLOAD"
    },
    "5445": {
      "op": "DUP1"
    },
    "5446": {
      "op": "DUP4"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5450": {
      "op": "SWAP3"
    },
    "5451": {
      "op": "POP"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "DUP7"
    },
    "5454": {
      "op": "ADD"
    },
    "5455": {
      "op": "SWAP2"
    },
    "5456": {
      "op": "POP"
    },
    "5457": {
      "op": "DUP3"
    },
    "5458": {
      "op": "DUP2"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5461": {
      "op": "SHL"
    },
    "5462": {
      "op": "DUP8"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "op": "ADD"
    },
    "5465": {
      "op": "DUP5"
    },
    "5466": {
      "op": "DUP9"
    },
    "5467": {
      "op": "ADD"
    },
    "5468": {
      "op": "DUP7"
    },
    "5469": {
      "op": "JUMPDEST"
    },
    "5470": {
      "op": "DUP4"
    },
    "5471": {
      "op": "DUP2"
    },
    "5472": {
      "op": "LT"
    },
    "5473": {
      "op": "ISZERO"
    },
    "5474": {
      "op": "PUSH2",
      "value": "0x15DF"
    },
    "5477": {
      "op": "JUMPI"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5480": {
      "op": "NOT"
    },
    "5481": {
      "op": "DUP10"
    },
    "5482": {
      "op": "DUP5"
    },
    "5483": {
      "op": "SUB"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "op": "DUP6"
    },
    "5486": {
      "op": "MSTORE"
    },
    "5487": {
      "op": "DUP2"
    },
    "5488": {
      "op": "MLOAD"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5491": {
      "op": "DUP2"
    },
    "5492": {
      "op": "MLOAD"
    },
    "5493": {
      "op": "DUP2"
    },
    "5494": {
      "op": "DUP7"
    },
    "5495": {
      "op": "MSTORE"
    },
    "5496": {
      "op": "PUSH2",
      "value": "0x1583"
    },
    "5499": {
      "op": "DUP3"
    },
    "5500": {
      "op": "DUP8"
    },
    "5501": {
      "op": "ADD"
    },
    "5502": {
      "op": "DUP3"
    },
    "5503": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5506": {
      "jump": "i",
      "op": "JUMP"
    },
    "5507": {
      "op": "JUMPDEST"
    },
    "5508": {
      "op": "SWAP2"
    },
    "5509": {
      "op": "POP"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "op": "DUP9"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "ADD"
    },
    "5514": {
      "op": "MLOAD"
    },
    "5515": {
      "op": "DUP6"
    },
    "5516": {
      "op": "DUP3"
    },
    "5517": {
      "op": "SUB"
    },
    "5518": {
      "op": "DUP11"
    },
    "5519": {
      "op": "DUP8"
    },
    "5520": {
      "op": "ADD"
    },
    "5521": {
      "op": "MSTORE"
    },
    "5522": {
      "op": "PUSH2",
      "value": "0x159B"
    },
    "5525": {
      "op": "DUP3"
    },
    "5526": {
      "op": "DUP3"
    },
    "5527": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5530": {
      "jump": "i",
      "op": "JUMP"
    },
    "5531": {
      "op": "JUMPDEST"
    },
    "5532": {
      "op": "SWAP2"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "op": "DUP8"
    },
    "5536": {
      "op": "DUP3"
    },
    "5537": {
      "op": "ADD"
    },
    "5538": {
      "op": "MLOAD"
    },
    "5539": {
      "op": "DUP6"
    },
    "5540": {
      "op": "DUP3"
    },
    "5541": {
      "op": "SUB"
    },
    "5542": {
      "op": "DUP10"
    },
    "5543": {
      "op": "DUP8"
    },
    "5544": {
      "op": "ADD"
    },
    "5545": {
      "op": "MSTORE"
    },
    "5546": {
      "op": "PUSH2",
      "value": "0x15B3"
    },
    "5549": {
      "op": "DUP3"
    },
    "5550": {
      "op": "DUP3"
    },
    "5551": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5554": {
      "jump": "i",
      "op": "JUMP"
    },
    "5555": {
      "op": "JUMPDEST"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5558": {
      "op": "DUP5"
    },
    "5559": {
      "op": "DUP2"
    },
    "5560": {
      "op": "ADD"
    },
    "5561": {
      "op": "MLOAD"
    },
    "5562": {
      "op": "SWAP1"
    },
    "5563": {
      "op": "DUP9"
    },
    "5564": {
      "op": "ADD"
    },
    "5565": {
      "op": "MSTORE"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5568": {
      "op": "SWAP4"
    },
    "5569": {
      "op": "DUP5"
    },
    "5570": {
      "op": "ADD"
    },
    "5571": {
      "op": "MLOAD"
    },
    "5572": {
      "op": "ISZERO"
    },
    "5573": {
      "op": "ISZERO"
    },
    "5574": {
      "op": "SWAP4"
    },
    "5575": {
      "op": "SWAP1"
    },
    "5576": {
      "op": "SWAP7"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "op": "SWAP3"
    },
    "5579": {
      "op": "SWAP1"
    },
    "5580": {
      "op": "SWAP3"
    },
    "5581": {
      "op": "MSTORE"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "op": "POP"
    },
    "5584": {
      "op": "SWAP4"
    },
    "5585": {
      "op": "DUP7"
    },
    "5586": {
      "op": "ADD"
    },
    "5587": {
      "op": "SWAP4"
    },
    "5588": {
      "op": "SWAP1"
    },
    "5589": {
      "op": "DUP7"
    },
    "5590": {
      "op": "ADD"
    },
    "5591": {
      "op": "SWAP1"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5594": {
      "op": "ADD"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x155D"
    },
    "5598": {
      "op": "JUMP"
    },
    "5599": {
      "op": "JUMPDEST"
    },
    "5600": {
      "op": "POP"
    },
    "5601": {
      "op": "SWAP1"
    },
    "5602": {
      "op": "SWAP9"
    },
    "5603": {
      "op": "SWAP8"
    },
    "5604": {
      "op": "POP"
    },
    "5605": {
      "op": "POP"
    },
    "5606": {
      "op": "POP"
    },
    "5607": {
      "op": "POP"
    },
    "5608": {
      "op": "POP"
    },
    "5609": {
      "op": "POP"
    },
    "5610": {
      "op": "POP"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "jump": "o",
      "op": "JUMP"
    },
    "5613": {
      "op": "JUMPDEST"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5618": {
      "op": "DUP1"
    },
    "5619": {
      "op": "DUP4"
    },
    "5620": {
      "op": "ADD"
    },
    "5621": {
      "op": "DUP2"
    },
    "5622": {
      "op": "DUP5"
    },
    "5623": {
      "op": "MSTORE"
    },
    "5624": {
      "op": "DUP1"
    },
    "5625": {
      "op": "DUP6"
    },
    "5626": {
      "op": "MLOAD"
    },
    "5627": {
      "op": "DUP1"
    },
    "5628": {
      "op": "DUP4"
    },
    "5629": {
      "op": "MSTORE"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5632": {
      "op": "SWAP3"
    },
    "5633": {
      "op": "POP"
    },
    "5634": {
      "op": "DUP3"
    },
    "5635": {
      "op": "DUP7"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "SWAP2"
    },
    "5638": {
      "op": "POP"
    },
    "5639": {
      "op": "DUP3"
    },
    "5640": {
      "op": "DUP2"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5643": {
      "op": "SHL"
    },
    "5644": {
      "op": "DUP8"
    },
    "5645": {
      "op": "ADD"
    },
    "5646": {
      "op": "ADD"
    },
    "5647": {
      "op": "DUP5"
    },
    "5648": {
      "op": "DUP9"
    },
    "5649": {
      "op": "ADD"
    },
    "5650": {
      "op": "DUP7"
    },
    "5651": {
      "op": "JUMPDEST"
    },
    "5652": {
      "op": "DUP4"
    },
    "5653": {
      "op": "DUP2"
    },
    "5654": {
      "op": "LT"
    },
    "5655": {
      "op": "ISZERO"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x15DF"
    },
    "5659": {
      "op": "JUMPI"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5662": {
      "op": "NOT"
    },
    "5663": {
      "op": "DUP10"
    },
    "5664": {
      "op": "DUP5"
    },
    "5665": {
      "op": "SUB"
    },
    "5666": {
      "op": "ADD"
    },
    "5667": {
      "op": "DUP6"
    },
    "5668": {
      "op": "MSTORE"
    },
    "5669": {
      "op": "DUP2"
    },
    "5670": {
      "op": "MLOAD"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5673": {
      "op": "DUP2"
    },
    "5674": {
      "op": "MLOAD"
    },
    "5675": {
      "op": "DUP2"
    },
    "5676": {
      "op": "DUP7"
    },
    "5677": {
      "op": "MSTORE"
    },
    "5678": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "5681": {
      "op": "DUP3"
    },
    "5682": {
      "op": "DUP8"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "DUP3"
    },
    "5685": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5688": {
      "jump": "i",
      "op": "JUMP"
    },
    "5689": {
      "op": "JUMPDEST"
    },
    "5690": {
      "op": "SWAP2"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "op": "POP"
    },
    "5693": {
      "op": "DUP9"
    },
    "5694": {
      "op": "DUP3"
    },
    "5695": {
      "op": "ADD"
    },
    "5696": {
      "op": "MLOAD"
    },
    "5697": {
      "op": "DUP10"
    },
    "5698": {
      "op": "DUP7"
    },
    "5699": {
      "op": "ADD"
    },
    "5700": {
      "op": "MSTORE"
    },
    "5701": {
      "op": "DUP8"
    },
    "5702": {
      "op": "DUP3"
    },
    "5703": {
      "op": "ADD"
    },
    "5704": {
      "op": "MLOAD"
    },
    "5705": {
      "op": "DUP6"
    },
    "5706": {
      "op": "DUP3"
    },
    "5707": {
      "op": "SUB"
    },
    "5708": {
      "op": "DUP10"
    },
    "5709": {
      "op": "DUP8"
    },
    "5710": {
      "op": "ADD"
    },
    "5711": {
      "op": "MSTORE"
    },
    "5712": {
      "op": "PUSH2",
      "value": "0x1659"
    },
    "5715": {
      "op": "DUP3"
    },
    "5716": {
      "op": "DUP3"
    },
    "5717": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5720": {
      "jump": "i",
      "op": "JUMP"
    },
    "5721": {
      "op": "JUMPDEST"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5724": {
      "op": "DUP5"
    },
    "5725": {
      "op": "DUP2"
    },
    "5726": {
      "op": "ADD"
    },
    "5727": {
      "op": "MLOAD"
    },
    "5728": {
      "op": "ISZERO"
    },
    "5729": {
      "op": "ISZERO"
    },
    "5730": {
      "op": "SWAP1"
    },
    "5731": {
      "op": "DUP9"
    },
    "5732": {
      "op": "ADD"
    },
    "5733": {
      "op": "MSTORE"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5736": {
      "op": "SWAP4"
    },
    "5737": {
      "op": "DUP5"
    },
    "5738": {
      "op": "ADD"
    },
    "5739": {
      "op": "MLOAD"
    },
    "5740": {
      "op": "ISZERO"
    },
    "5741": {
      "op": "ISZERO"
    },
    "5742": {
      "op": "SWAP4"
    },
    "5743": {
      "op": "SWAP1"
    },
    "5744": {
      "op": "SWAP7"
    },
    "5745": {
      "op": "ADD"
    },
    "5746": {
      "op": "SWAP3"
    },
    "5747": {
      "op": "SWAP1"
    },
    "5748": {
      "op": "SWAP3"
    },
    "5749": {
      "op": "MSTORE"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "POP"
    },
    "5752": {
      "op": "SWAP4"
    },
    "5753": {
      "op": "DUP7"
    },
    "5754": {
      "op": "ADD"
    },
    "5755": {
      "op": "SWAP4"
    },
    "5756": {
      "op": "SWAP1"
    },
    "5757": {
      "op": "DUP7"
    },
    "5758": {
      "op": "ADD"
    },
    "5759": {
      "op": "SWAP1"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5762": {
      "op": "ADD"
    },
    "5763": {
      "op": "PUSH2",
      "value": "0x1613"
    },
    "5766": {
      "op": "JUMP"
    },
    "5767": {
      "op": "JUMPDEST"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5770": {
      "op": "DUP2"
    },
    "5771": {
      "op": "MSTORE"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x169A"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5779": {
      "op": "DUP4"
    },
    "5780": {
      "op": "ADD"
    },
    "5781": {
      "op": "DUP6"
    },
    "5782": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5785": {
      "jump": "i",
      "op": "JUMP"
    },
    "5786": {
      "op": "JUMPDEST"
    },
    "5787": {
      "op": "DUP3"
    },
    "5788": {
      "op": "DUP2"
    },
    "5789": {
      "op": "SUB"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5792": {
      "op": "DUP5"
    },
    "5793": {
      "op": "ADD"
    },
    "5794": {
      "op": "MSTORE"
    },
    "5795": {
      "op": "PUSH2",
      "value": "0x16AC"
    },
    "5798": {
      "op": "DUP2"
    },
    "5799": {
      "op": "DUP6"
    },
    "5800": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5803": {
      "jump": "i",
      "op": "JUMP"
    },
    "5804": {
      "op": "JUMPDEST"
    },
    "5805": {
      "op": "SWAP6"
    },
    "5806": {
      "op": "SWAP5"
    },
    "5807": {
      "op": "POP"
    },
    "5808": {
      "op": "POP"
    },
    "5809": {
      "op": "POP"
    },
    "5810": {
      "op": "POP"
    },
    "5811": {
      "op": "POP"
    },
    "5812": {
      "jump": "o",
      "op": "JUMP"
    },
    "5813": {
      "op": "JUMPDEST"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5816": {
      "op": "DUP2"
    },
    "5817": {
      "op": "MSTORE"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5820": {
      "op": "PUSH2",
      "value": "0x16C8"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5825": {
      "op": "DUP4"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "DUP7"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5831": {
      "jump": "i",
      "op": "JUMP"
    },
    "5832": {
      "op": "JUMPDEST"
    },
    "5833": {
      "op": "DUP3"
    },
    "5834": {
      "op": "DUP2"
    },
    "5835": {
      "op": "SUB"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5838": {
      "op": "DUP5"
    },
    "5839": {
      "op": "ADD"
    },
    "5840": {
      "op": "MSTORE"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x16DA"
    },
    "5844": {
      "op": "DUP2"
    },
    "5845": {
      "op": "DUP7"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5849": {
      "jump": "i",
      "op": "JUMP"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "SWAP1"
    },
    "5852": {
      "op": "POP"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "DUP2"
    },
    "5855": {
      "op": "SUB"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5858": {
      "op": "DUP5"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH2",
      "value": "0x16EE"
    },
    "5864": {
      "op": "DUP2"
    },
    "5865": {
      "op": "DUP6"
    },
    "5866": {
      "op": "PUSH2",
      "value": "0x142D"
    },
    "5869": {
      "jump": "i",
      "op": "JUMP"
    },
    "5870": {
      "op": "JUMPDEST"
    },
    "5871": {
      "op": "SWAP7"
    },
    "5872": {
      "op": "SWAP6"
    },
    "5873": {
      "op": "POP"
    },
    "5874": {
      "op": "POP"
    },
    "5875": {
      "op": "POP"
    },
    "5876": {
      "op": "POP"
    },
    "5877": {
      "op": "POP"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "jump": "o",
      "op": "JUMP"
    },
    "5880": {
      "op": "JUMPDEST"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5883": {
      "op": "DUP1"
    },
    "5884": {
      "op": "DUP3"
    },
    "5885": {
      "op": "MSTORE"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5888": {
      "op": "SWAP1"
    },
    "5889": {
      "op": "DUP3"
    },
    "5890": {
      "op": "ADD"
    },
    "5891": {
      "op": "MSTORE"
    },
    "5892": {
      "op": "PUSH32",
      "value": "0x596F75206D7573742062652061646D696E20746F20646F20746869732E000000"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "ADD"
    },
    "5929": {
      "op": "MSTORE"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5932": {
      "op": "ADD"
    },
    "5933": {
      "op": "SWAP1"
    },
    "5934": {
      "jump": "o",
      "op": "JUMP"
    },
    "5935": {
      "op": "JUMPDEST"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5938": {
      "op": "DUP3"
    },
    "5939": {
      "op": "DUP3"
    },
    "5940": {
      "op": "LT"
    },
    "5941": {
      "op": "ISZERO"
    },
    "5942": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5945": {
      "op": "JUMPI"
    },
    "5946": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5949": {
      "op": "PUSH2",
      "value": "0x17CC"
    },
    "5952": {
      "jump": "i",
      "op": "JUMP"
    },
    "5953": {
      "op": "JUMPDEST"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "op": "SUB"
    },
    "5956": {
      "op": "SWAP1"
    },
    "5957": {
      "jump": "o",
      "op": "JUMP"
    },
    "5958": {
      "op": "JUMPDEST"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5961": {
      "op": "JUMPDEST"
    },
    "5962": {
      "op": "DUP4"
    },
    "5963": {
      "op": "DUP2"
    },
    "5964": {
      "op": "LT"
    },
    "5965": {
      "op": "ISZERO"
    },
    "5966": {
      "op": "PUSH2",
      "value": "0x1761"
    },
    "5969": {
      "op": "JUMPI"
    },
    "5970": {
      "op": "DUP2"
    },
    "5971": {
      "op": "DUP2"
    },
    "5972": {
      "op": "ADD"
    },
    "5973": {
      "op": "MLOAD"
    },
    "5974": {
      "op": "DUP4"
    },
    "5975": {
      "op": "DUP3"
    },
    "5976": {
      "op": "ADD"
    },
    "5977": {
      "op": "MSTORE"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5980": {
      "op": "ADD"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x1749"
    },
    "5984": {
      "op": "JUMP"
    },
    "5985": {
      "op": "JUMPDEST"
    },
    "5986": {
      "op": "DUP4"
    },
    "5987": {
      "op": "DUP2"
    },
    "5988": {
      "op": "GT"
    },
    "5989": {
      "op": "ISZERO"
    },
    "5990": {
      "op": "PUSH2",
      "value": "0x1770"
    },
    "5993": {
      "op": "JUMPI"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5996": {
      "op": "DUP5"
    },
    "5997": {
      "op": "DUP5"
    },
    "5998": {
      "op": "ADD"
    },
    "5999": {
      "op": "MSTORE"
    },
    "6000": {
      "op": "JUMPDEST"
    },
    "6001": {
      "op": "POP"
    },
    "6002": {
      "op": "POP"
    },
    "6003": {
      "op": "POP"
    },
    "6004": {
      "op": "POP"
    },
    "6005": {
      "jump": "o",
      "op": "JUMP"
    },
    "6006": {
      "op": "JUMPDEST"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6009": {
      "op": "DUP2"
    },
    "6010": {
      "op": "DUP2"
    },
    "6011": {
      "op": "SHR"
    },
    "6012": {
      "op": "SWAP1"
    },
    "6013": {
      "op": "DUP3"
    },
    "6014": {
      "op": "AND"
    },
    "6015": {
      "op": "DUP1"
    },
    "6016": {
      "op": "PUSH2",
      "value": "0x178A"
    },
    "6019": {
      "op": "JUMPI"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6022": {
      "op": "DUP3"
    },
    "6023": {
      "op": "AND"
    },
    "6024": {
      "op": "SWAP2"
    },
    "6025": {
      "op": "POP"
    },
    "6026": {
      "op": "JUMPDEST"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6029": {
      "op": "DUP3"
    },
    "6030": {
      "op": "LT"
    },
    "6031": {
      "op": "DUP2"
    },
    "6032": {
      "op": "EQ"
    },
    "6033": {
      "op": "ISZERO"
    },
    "6034": {
      "op": "PUSH2",
      "value": "0x17AB"
    },
    "6037": {
      "op": "JUMPI"
    },
    "6038": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6045": {
      "op": "SHL"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6048": {
      "op": "MSTORE"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6058": {
      "op": "REVERT"
    },
    "6059": {
      "op": "JUMPDEST"
    },
    "6060": {
      "op": "POP"
    },
    "6061": {
      "op": "SWAP2"
    },
    "6062": {
      "op": "SWAP1"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "jump": "o",
      "op": "JUMP"
    },
    "6065": {
      "op": "JUMPDEST"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6070": {
      "op": "NOT"
    },
    "6071": {
      "op": "DUP3"
    },
    "6072": {
      "op": "EQ"
    },
    "6073": {
      "op": "ISZERO"
    },
    "6074": {
      "op": "PUSH2",
      "value": "0x17C5"
    },
    "6077": {
      "op": "JUMPI"
    },
    "6078": {
      "op": "PUSH2",
      "value": "0x17C5"
    },
    "6081": {
      "op": "PUSH2",
      "value": "0x17CC"
    },
    "6084": {
      "jump": "i",
      "op": "JUMP"
    },
    "6085": {
      "op": "JUMPDEST"
    },
    "6086": {
      "op": "POP"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6089": {
      "op": "ADD"
    },
    "6090": {
      "op": "SWAP1"
    },
    "6091": {
      "jump": "o",
      "op": "JUMP"
    },
    "6092": {
      "op": "JUMPDEST"
    },
    "6093": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6100": {
      "op": "SHL"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6108": {
      "op": "MSTORE"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6113": {
      "op": "REVERT"
    },
    "6114": {
      "op": "JUMPDEST"
    },
    "6115": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6122": {
      "op": "SHL"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6125": {
      "op": "MSTORE"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6130": {
      "op": "MSTORE"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6135": {
      "op": "REVERT"
    }
  },
  "sha1": "03b869ad9203228df17efaca80518ef8abe262e9",
  "source": "pragma solidity ^0.8.1;\n\ncontract Voting {\n    address adminAddress;\n    bool electionOn = false;\n    modifier onlyOwner {\n        require(msg.sender == adminAddress, \"You must be admin to do this.\");\n        _;\n    }\n \n    event voterAdded(string name, string constituency);\n    event candidateAdded(string name, string constituency, string symbol);\n    // event voteEvent();\n    struct Voter {\n        // name, id, constituency, canVote \n        string name;\n        uint idNo;\n        string constituency;\n        bool canVote;\n        bool exists;\n    }\n    struct Candidate {\n        // name, constituency, noofvotes, address\n        string name;\n        string constituency;\n        string symbol;\n        uint noOfVotes;\n        bool exists;\n    }\n    \n    Voter[] voters;\n    mapping(uint => uint) ballot; //hash to candidate mapping\n    Candidate[] candidates;\n    mapping(uint => uint) votersList; // voters id to voter mapping\n    \n    constructor(){\n        adminAddress = msg.sender;\n        candidates.push(Candidate(\"nonce\", \"nonce\", \"nonce\", 0,  false));\n        voters.push(Voter(\"nonce\", 0, \"nonce\", false, false));\n    }\n    \n    function startElection() public onlyOwner {\n        electionOn = true;\n    }\n    \n    function endElection() public onlyOwner {\n        electionOn = false;\n    }\n    // add right to vote facility later\n    function createVoter(string memory _name, uint _id, string memory _constituency) public {\n        require(!voters[votersList[_id]].exists, \"Voter id is already registered!.\");\n        voters.push(Voter(_name, _id, _constituency, true, true));\n        votersList[_id] = voters.length - 1;\n        \n        emit voterAdded(_name, _constituency);\n    } \n    function getVotersList() onlyOwner public view returns(Voter[] memory){\n        return voters;\n    }\n    function getCandidatesList() onlyOwner public view returns(Candidate[] memory){\n        return candidates;\n    }\n    // handle duplicate candidate problem later\n    function createCandidate(string memory _name, string memory _constituency, string memory _symbol) onlyOwner public {\n        require(!electionOn, \"Sorry. The election has already began. You cannot add new candidates.\");\n        uint candId =  _generateHash(_name, _constituency, _symbol);\n        require(!candidates[ballot[candId]].exists, \"Candidate already in ballot list!.\");\n        candidates.push(Candidate(_name, _constituency, _symbol, 0, true));\n        ballot[candId] = candidates.length - 1;\n        emit candidateAdded(_name, _constituency, _symbol);\n    }\n    \n    function _generateHash(string memory _name, string memory _constituency, string memory _symbol) public pure returns (uint){\n        uint hash = uint(keccak256(abi.encodePacked(_name, _constituency, _symbol)));   \n        return hash;\n    }\n    \n    function vote(uint _voterId, string memory _voteTo, string memory _constituency, string memory _symbol) public{\n        require(voters[votersList[_voterId]].exists, \"You are not registered to vote.\");\n        require(electionOn, \"Sorry. The election has ended.\");\n        require(voters[votersList[_voterId]].canVote, \"Sorry. You already voted.\");\n        uint candId = _generateHash(_voteTo, _constituency, _symbol);\n        require(candidates[ballot[candId]].exists, \"Selected candidate not found.\");\n        require(keccak256(abi.encodePacked(candidates[ballot[candId]].constituency)) == keccak256(abi.encodePacked(voters[votersList[_voterId]].constituency)), \"Sorry. You are voting for a candidate who is not in your constituency.\");\n        candidates[ballot[candId]].noOfVotes++; \n        voters[votersList[_voterId]].canVote = false;\n    }\n    \n    function getElectionResult() public view returns (Candidate[] memory){\n        require(!electionOn, \"Election has not ended.\");\n        return candidates;\n    }\n    \n    function getElectionState() public onlyOwner view returns (bool){\n        return electionOn;\n    }\n}",
  "sourceMap": "25:3909:0:-:0;;;91:5;73:23;;-1:-1:-1;;;;73:23:0;;;947:192;;;;;;;;;-1:-1:-1;970:12:0;:25;;-1:-1:-1;;;;;;970:25:0;985:10;970:25;;;1021:47;;;;;;;;;;;;;;;-1:-1:-1;;;1021:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1021:47:0;;;-1:-1:-1;;;1021:47:0;;;1005:10;:64;;970:25;1005:64;;;;;;;;;;1021:47;;1005:64;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:64:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:64:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:64:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1005:64:0;;;;;;;;;1091:40;;;;;;;;;;;;;;;-1:-1:-1;;;1091:40:0;;;;;;;;;1005:64;-1:-1:-1;1091:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1091:40:0;;;-1:-1:-1;;;1091:40:0;;;1005:64;1079:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1079:53:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1079:53:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1079:53:0;;;;;;;-1:-1:-1;;1079:53:0;;;;;;;;;;25:3909;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25:3909:0;;;-1:-1:-1;25:3909:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;25:3909:0;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}