{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "candidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        }
      ],
      "name": "voterAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "_generateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ballot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        }
      ],
      "name": "createVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionOn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidatesList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotersList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "idNo",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "canVote",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Voter[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_voteTo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        395
      ]
    },
    "id": 396,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 395,
        "linearizedBaseContracts": [
          395
        ],
        "name": "Voting",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc6f9468",
            "id": 3,
            "mutability": "mutable",
            "name": "adminAddress",
            "nameLocation": "62:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 395,
            "src": "47:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "47:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "137edd98",
            "id": 6,
            "mutability": "mutable",
            "name": "electionOn",
            "nameLocation": "92:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 395,
            "src": "80:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "80:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "105:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "135:63:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "153:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "153:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11,
                          "name": "adminAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "167:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "153:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "145:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "145:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "145:35:0"
                },
                {
                  "id": 15,
                  "nodeType": "PlaceholderStatement",
                  "src": "190:1:0"
                }
              ]
            },
            "id": 17,
            "name": "onlyOwner",
            "nameLocation": "125:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:0:0"
            },
            "src": "116:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 23,
            "name": "voterAdded",
            "nameLocation": "211:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "229:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "222:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "242:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "235:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:34:0"
            },
            "src": "205:51:0"
          },
          {
            "anonymous": false,
            "id": 31,
            "name": "candidateAdded",
            "nameLocation": "267:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "289:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "282:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "302:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "295:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "323:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "316:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "281:49:0"
            },
            "src": "261:70:0"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "436:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "429:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "idNo",
                "nameLocation": "455:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "450:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "476:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "469:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "canVote",
                "nameLocation": "503:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "498:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 38,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "525:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "520:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 40,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "369:5:0",
            "nodeType": "StructDefinition",
            "scope": 395,
            "src": "362:176:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Candidate",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "627:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "620:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "620:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "648:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "641:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "641:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "677:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "670:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "670:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "noOfVotes",
                "nameLocation": "698:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "693:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "722:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "717:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 51,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "550:9:0",
            "nodeType": "StructDefinition",
            "scope": 395,
            "src": "543:192:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "753:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 395,
            "src": "745:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
              "typeString": "struct Voting.Voter[]"
            },
            "typeName": {
              "baseType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "745:5:0"
                },
                "referencedDeclaration": 42,
                "src": "745:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$42_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              },
              "id": 56,
              "nodeType": "ArrayTypeName",
              "src": "745:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Voter[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e7942734",
            "id": 61,
            "mutability": "mutable",
            "name": "ballot",
            "nameLocation": "794:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 395,
            "src": "765:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "773:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "765:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 59,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "781:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "846:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 395,
            "src": "834:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 63,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 62,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "834:9:0"
                },
                "referencedDeclaration": 53,
                "src": "834:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$53_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 64,
              "nodeType": "ArrayTypeName",
              "src": "834:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "votersList",
            "nameLocation": "884:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 395,
            "src": "862:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "870:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "862:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 67,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "878:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "948:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "adminAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "958:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "973:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "973:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "958:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "958:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1019:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1028:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1037:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1046:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1050:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 80,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1009:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$53_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1009:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 77,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "993:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "993:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$53_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "993:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1085:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1094:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1097:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1106:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1113:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 92,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1079:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$42_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1079:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$42_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$42_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 89,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1067:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1067:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr_$_t_struct$_Voter_$42_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:53:0"
                }
              ]
            },
            "id": 102,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:0"
            },
            "scope": 395,
            "src": "935:192:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1179:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1189:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1202:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1189:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:17:0"
                }
              ]
            },
            "functionSelector": "62d73eb8",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 104,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1169:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1169:9:0"
              }
            ],
            "name": "startElection",
            "nameLocation": "1146:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:0"
            },
            "scope": 395,
            "src": "1137:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1263:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1273:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1286:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1273:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1273:18:0"
                }
              ]
            },
            "functionSelector": "59f78468",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 114,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1253:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1253:9:0"
              }
            ],
            "name": "endElection",
            "nameLocation": "1232:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:2:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:0"
            },
            "scope": 395,
            "src": "1223:75:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1431:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1449:31:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 132,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "1450:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                                "typeString": "struct Voting.Voter storage ref[] storage ref"
                              }
                            },
                            "id": 136,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 133,
                                "name": "votersList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1457:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 135,
                              "indexExpression": {
                                "id": 134,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 126,
                                "src": "1468:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1457:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1450:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$42_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "1450:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220696420697320616c72656164792072656769737465726564212e",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1482:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        },
                        "value": "Voter id is already registered!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1441:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 146,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1545:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 147,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1552:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 148,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1557:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1572:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1578:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 145,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "1539:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$42_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$42_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$42_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1527:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1527:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr_$_t_struct$_Voter_$42_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:57:0"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 154,
                        "name": "votersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1594:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 155,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1605:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1594:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 157,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1612:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1612:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1628:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1612:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1594:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 164,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1664:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 165,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1671:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 163,
                      "name": "voterAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1653:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "1648:37:0"
                }
              ]
            },
            "functionSelector": "d373f8d4",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVoter",
            "nameLocation": "1352:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1378:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1364:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1390:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1385:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "1409:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1395:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:60:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:0"
            },
            "scope": 395,
            "src": "1343:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1768:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 178,
                    "name": "voters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57,
                    "src": "1785:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                      "typeString": "struct Voting.Voter storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 177,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "1778:13:0"
                }
              ]
            },
            "functionSelector": "bc86f385",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 171,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1723:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1723:9:0"
              }
            ],
            "name": "getVotersList",
            "nameLocation": "1707:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:2:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1753:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Voter_$42_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Voter[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 174,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 173,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "1753:5:0"
                      },
                      "referencedDeclaration": 42,
                      "src": "1753:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$42_storage_ptr",
                        "typeString": "struct Voting.Voter"
                      }
                    },
                    "id": 175,
                    "nodeType": "ArrayTypeName",
                    "src": "1753:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Voter[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:16:0"
            },
            "scope": 395,
            "src": "1698:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1881:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 190,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "1898:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 189,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "1891:17:0"
                }
              ]
            },
            "functionSelector": "4aba5f34",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 183,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1832:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1832:9:0"
              }
            ],
            "name": "getCandidatesList",
            "nameLocation": "1812:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1829:2:0"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "1862:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$53_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 186,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 185,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "1862:9:0"
                      },
                      "referencedDeclaration": 53,
                      "src": "1862:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$53_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 187,
                    "nodeType": "ArrayTypeName",
                    "src": "1862:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1861:20:0"
            },
            "scope": 395,
            "src": "1803:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "2083:351:0",
              "statements": [
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "2098:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 250,
                      "src": "2093:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2093:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 207,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2122:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 208,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2129:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 209,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2144:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 206,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2108:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2108:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2093:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2170:34:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 213,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "2171:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                                "typeString": "struct Voting.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 217,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 214,
                                "name": "ballot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "2182:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 216,
                              "indexExpression": {
                                "id": 215,
                                "name": "candId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "2189:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2182:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2171:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$53_storage",
                              "typeString": "struct Voting.Candidate storage ref"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "2171:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e64696461746520616c726561647920696e2062616c6c6f74206c697374212e",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2206:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        },
                        "value": "Candidate already in ballot list!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2162:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 227,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2279:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 228,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "2286:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 229,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "2301:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2310:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2313:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 226,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2269:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$53_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2269:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 223,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2253:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2253:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$53_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:66:0"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 235,
                        "name": "ballot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "2329:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 237,
                      "indexExpression": {
                        "id": 236,
                        "name": "candId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "2336:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2329:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 238,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2346:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2346:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2366:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2346:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2329:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 245,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2397:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 246,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "2404:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 247,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2419:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 244,
                      "name": "candidateAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2382:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "EmitStatement",
                  "src": "2377:50:0"
                }
              ]
            },
            "functionSelector": "1d823d32",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 201,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "2066:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2066:9:0"
              }
            ],
            "name": "createCandidate",
            "nameLocation": "1977:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2007:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1993:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2028:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "2014:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2057:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "2043:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:73:0"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2083:0:0"
            },
            "scope": 395,
            "src": "1968:466:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2566:117:0",
              "statements": [
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2581:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2576:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2576:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 275,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 269,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "2620:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 270,
                                "name": "_constituency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "2627:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 271,
                                "name": "_symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 257,
                                "src": "2642:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 267,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2603:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2603:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2603:47:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 266,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2593:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2593:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2588:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 264,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2588:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2576:76:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "name": "hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 263,
                    "src": "2672:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "2665:11:0"
                }
              ]
            },
            "functionSelector": "79ae584d",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateHash",
            "nameLocation": "2453:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2481:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2467:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2467:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2502:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2488:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2531:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2517:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2466:73:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2561:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2561:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2560:6:0"
            },
            "scope": 395,
            "src": "2444:239:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "2803:736:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "electionOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2821:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e2054686520656c656374696f6e2068617320656e6465642e",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        },
                        "value": "Sorry. The election has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2813:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 296,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "2884:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 300,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 297,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "2891:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 299,
                            "indexExpression": {
                              "id": 298,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "2902:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2891:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2884:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$42_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "2884:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f74207265676973746572656420746f20766f74652e",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2921:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        },
                        "value": "You are not registered to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2876:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 306,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "2973:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 310,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 307,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "2980:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "id": 308,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "2991:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2980:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2973:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$42_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "2973:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f7520616c726561647920766f7465642e",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3011:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        },
                        "value": "Sorry. You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2965:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:74:0"
                },
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "3054:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 377,
                      "src": "3049:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3049:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 322,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 318,
                        "name": "_voteTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "3077:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 319,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "3086:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 320,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "3101:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 317,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "3063:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3063:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3049:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 324,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "3127:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                              "typeString": "struct Voting.Candidate storage ref[] storage ref"
                            }
                          },
                          "id": 328,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 325,
                              "name": "ballot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "3138:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 327,
                            "indexExpression": {
                              "id": 326,
                              "name": "candId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 316,
                              "src": "3145:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3138:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3127:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$53_storage",
                            "typeString": "struct Voting.Candidate storage ref"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52,
                        "src": "3127:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c65637465642063616e646964617465206e6f7420666f756e642e",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        },
                        "value": "Selected candidate not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3119:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "3119:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 337,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "3239:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                                        "typeString": "struct Voting.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 341,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 338,
                                        "name": "ballot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61,
                                        "src": "3250:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 340,
                                      "indexExpression": {
                                        "id": 339,
                                        "name": "candId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 316,
                                        "src": "3257:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3250:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3239:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$53_storage",
                                      "typeString": "struct Voting.Candidate storage ref"
                                    }
                                  },
                                  "id": 342,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "3239:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 335,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3222:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3222:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3222:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 334,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3212:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3212:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 348,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "3311:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                                        "typeString": "struct Voting.Voter storage ref[] storage ref"
                                      }
                                    },
                                    "id": 352,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 349,
                                        "name": "votersList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "3318:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 351,
                                      "indexExpression": {
                                        "id": 350,
                                        "name": "_voterId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 281,
                                        "src": "3329:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3318:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3311:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$42_storage",
                                      "typeString": "struct Voting.Voter storage ref"
                                    }
                                  },
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37,
                                  "src": "3311:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 346,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3294:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3294:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3294:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 345,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3284:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3284:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3212:142:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f752061726520766f74696e6720666f7220612063616e6469646174652077686f206973206e6f7420696e20796f757220636f6e7374697475656e63792e",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3356:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        },
                        "value": "Sorry. You are voting for a candidate who is not in your constituency."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3204:225:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3204:225:0"
                },
                {
                  "expression": {
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3439:38:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 360,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "3439:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 364,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 361,
                            "name": "ballot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "3450:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 363,
                          "indexExpression": {
                            "id": 362,
                            "name": "candId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "3457:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3450:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3439:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$53_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "3439:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:38:0"
                },
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 368,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "3488:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 372,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 369,
                            "name": "votersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "3495:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 371,
                          "indexExpression": {
                            "id": 370,
                            "name": "_voterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 281,
                            "src": "3506:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3495:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3488:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$42_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "3488:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3527:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3488:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:44:0"
                }
              ]
            },
            "functionSelector": "dd4159c0",
            "id": 378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2702:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_voterId",
                  "nameLocation": "2712:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2707:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_voteTo",
                  "nameLocation": "2736:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2722:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2759:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2745:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2788:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "2774:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:90:0"
            },
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2803:0:0"
            },
            "scope": 395,
            "src": "2693:846:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "3618:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3636:11:0",
                        "subExpression": {
                          "id": 386,
                          "name": "electionOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3637:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e20686173206e6f7420656e6465642e",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        },
                        "value": "Election has not ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3628:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:47:0"
                },
                {
                  "expression": {
                    "id": 391,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "3692:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 384,
                  "id": 392,
                  "nodeType": "Return",
                  "src": "3685:17:0"
                }
              ]
            },
            "functionSelector": "ca3eb443",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getElectionResult",
            "nameLocation": "3558:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3575:2:0"
            },
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3599:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$53_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 381,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 380,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "3599:9:0"
                      },
                      "referencedDeclaration": 53,
                      "src": "3599:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$53_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 382,
                    "nodeType": "ArrayTypeName",
                    "src": "3599:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3598:20:0"
            },
            "scope": 395,
            "src": "3549:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 396,
        "src": "25:3686:0",
        "usedErrors": []
      }
    ],
    "src": "0:3711:0"
  },
  "bytecode": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b50600080546001600160a01b031916331781556040805160e081018252600560a08201818152646e6f6e636560d81b60c084018190529083528351808501855282815260208181018390528085019190915284518086018652838152808201929092529383015260608201849052608082018490526003805460018101825594528151805192949091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0192620000dc9284929091019062000234565b506020828101518051620000f7926001850192019062000234565b50604082015180516200011591600284019160209091019062000234565b5060608281015160038301556080928301516004928301805491151560ff199092169190911790556040805160e081018252600560a08201818152646e6f6e636560d81b60c0840181905290835260006020808501829052855180870187529384528381019290925293830191909152928101829052938401819052600180548082018255915283518051919093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192620001d792849291019062000234565b50602082810151600183015560408301518051620001fc926002850192019062000234565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905562000317565b8280546200024290620002da565b90600052602060002090601f016020900481019282620002665760008555620002b1565b82601f106200028157805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b157825182559160200191906001019062000294565b50620002bf929150620002c3565b5090565b5b80821115620002bf5760008155600101620002c4565b600181811c90821680620002ef57607f821691505b602082108114156200031157634e487b7160e01b600052602260045260246000fd5b50919050565b61174b80620003276000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc86f38511610071578063bc86f3851461013d578063ca3eb44314610152578063d373f8d41461015a578063dd4159c01461016d578063e794273414610180578063fc6f9468146101a057600080fd5b8063137edd98146100b95780631d823d32146100e25780634aba5f34146100f757806359f784681461010c57806362d73eb81461011457806379ae584d1461011c575b600080fd5b6000546100cd90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6100f56100f0366004611204565b6101cb565b005b6100ff6103c9565b6040516100d9919061148b565b6100f5610615565b6100f561063b565b61012f61012a366004611204565b610667565b6040519081526020016100d9565b6101456106a0565b6040516100d99190611541565b6100ff610865565b6100f5610168366004611288565b610aeb565b6100f561017b3660046112f3565b610cb0565b61012f61018e3660046112db565b60026020526000908152604090205481565b6000546101b3906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b6000546001600160a01b031633146101e257600080fd5b60006101ef848484610667565b6000818152600260205260409020546003805492935091811061022257634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102965760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b60648201526084015b60405180910390fd5b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019261030a92849201906110e4565b50602082810151805161032392600185019201906110e4565b506040820151805161033f9160028401916020909101906110e4565b5060608201516003828101919091556080909201516004909101805460ff1916911515919091179055546103759060019061164c565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef906103bb90869086908690611609565b60405180910390a150505050565b6000546060906001600160a01b031633146103e357600080fd5b6003805480602002602001604051908101604052809291908181526020016000905b8282101561060c57838290600052602060002090600502016040518060a001604052908160008201805461043890611693565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611693565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b505050505081526020016001820180546104ca90611693565b80601f01602080910402602001604051908101604052809291908181526020018280546104f690611693565b80156105435780601f1061051857610100808354040283529160200191610543565b820191906000526020600020905b81548152906001019060200180831161052657829003601f168201915b5050505050815260200160028201805461055c90611693565b80601f016020809104026020016040519081016040528092919081815260200182805461058890611693565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040909101529082526001929092019101610405565b50505050905090565b6000546001600160a01b0316331461062c57600080fd5b6000805460ff60a01b19169055565b6000546001600160a01b0316331461065257600080fd5b6000805460ff60a01b1916600160a01b179055565b60008084848460405160200161067f939291906113ad565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b031633146106ba57600080fd5b6001805480602002602001604051908101604052809291908181526020016000905b8282101561060c57838290600052602060002090600402016040518060a001604052908160008201805461070f90611693565b80601f016020809104026020016040519081016040528092919081815260200182805461073b90611693565b80156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050508152602001600182015481526020016002820180546107ab90611693565b80601f01602080910402602001604051908101604052809291908181526020018280546107d790611693565b80156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b50505091835250506003919091015460ff808216151560208085019190915261010090920416151560409092019190915290825260019290920191016106dc565b600054606090600160a01b900460ff16156108c25760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161028d565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561060c57838290600052602060002090600502016040518060a001604052908160008201805461091790611693565b80601f016020809104026020016040519081016040528092919081815260200182805461094390611693565b80156109905780601f1061096557610100808354040283529160200191610990565b820191906000526020600020905b81548152906001019060200180831161097357829003601f168201915b505050505081526020016001820180546109a990611693565b80601f01602080910402602001604051908101604052809291908181526020018280546109d590611693565b8015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b50505050508152602001600282018054610a3b90611693565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6790611693565b8015610ab45780601f10610a8957610100808354040283529160200191610ab4565b820191906000526020600020905b815481529060010190602001808311610a9757829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016108e4565b600082815260046020526040902054600180549091908110610b1d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610b895760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161028d565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610bfc92849201906110e4565b50602082810151600183015560408301518051610c1f92600285019201906110e4565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610c5f919061164c565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610ca390859084906115db565b60405180910390a1505050565b600054600160a01b900460ff16610d095760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161028d565b600084815260046020526040902054600180549091908110610d3b57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610da65760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161028d565b600084815260046020526040902054600180549091908110610dd857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610e3b5760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161028d565b6000610e48848484610667565b60008181526002602052604090205460038054929350918110610e7b57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610ede5760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161028d565b600085815260046020526040902054600180549091908110610f1057634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610f3191906113f0565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610f7b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610f9c91906113f0565b60405160208183030381529060405280519060200120146110345760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161028d565b60008181526002602052604090205460038054909190811061106657634e487b7160e01b600052603260045260246000fd5b600091825260208220600360059092020101805491611084836116ce565b90915550506000858152600460205260408120546001805490919081106110bb57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b8280546110f090611693565b90600052602060002090601f0160209004810192826111125760008555611158565b82601f1061112b57805160ff1916838001178555611158565b82800160010185558215611158579182015b8281111561115857825182559160200191906001019061113d565b50611164929150611168565b5090565b5b808211156111645760008155600101611169565b600082601f83011261118d578081fd5b813567ffffffffffffffff808211156111a8576111a86116ff565b604051601f8301601f19908116603f011681019082821181831017156111d0576111d06116ff565b816040528381528660208588010111156111e8578485fd5b8360208701602083013792830160200193909352509392505050565b600080600060608486031215611218578283fd5b833567ffffffffffffffff8082111561122f578485fd5b61123b8783880161117d565b94506020860135915080821115611250578384fd5b61125c8783880161117d565b93506040860135915080821115611271578283fd5b5061127e8682870161117d565b9150509250925092565b60008060006060848603121561129c578283fd5b833567ffffffffffffffff808211156112b3578485fd5b6112bf8783880161117d565b9450602086013593506040860135915080821115611271578283fd5b6000602082840312156112ec578081fd5b5035919050565b60008060008060808587031215611308578081fd5b84359350602085013567ffffffffffffffff80821115611326578283fd5b6113328883890161117d565b94506040870135915080821115611347578283fd5b6113538883890161117d565b93506060870135915080821115611368578283fd5b506113758782880161117d565b91505092959194509250565b60008151808452611399816020860160208601611663565b601f01601f19169290920160200192915050565b600084516113bf818460208901611663565b8451908301906113d3818360208901611663565b84519101906113e6818360208801611663565b0195945050505050565b600080835482600182811c91508083168061140c57607f831692505b602080841082141561142c57634e487b7160e01b87526022600452602487fd5b81801561144057600181146114515761147d565b60ff1986168952848901965061147d565b60008a815260209020885b868110156114755781548b82015290850190830161145c565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561153357603f19898403018552815160a081518186526114d782870182611381565b915050888201518582038a8701526114ef8282611381565b91505087820151858203898701526115078282611381565b6060848101519088015260809384015115159390960192909252505093860193908601906001016114b1565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561153357603f19898403018552815160a0815181865261158d82870182611381565b915050888201518986015287820151858203898701526115ad8282611381565b6060848101511515908801526080938401511515939096019290925250509386019390860190600101611567565b6040815260006115ee6040830185611381565b82810360208401526116008185611381565b95945050505050565b60608152600061161c6060830186611381565b828103602084015261162e8186611381565b905082810360408401526116428185611381565b9695505050505050565b60008282101561165e5761165e6116e9565b500390565b60005b8381101561167e578181015183820152602001611666565b8381111561168d576000848401525b50505050565b600181811c908216806116a757607f821691505b602082108114156116c857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116e2576116e26116e9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205076b306ca5a7f70c330238497da5d4acf95dc9ae5f2b5de6567f7623e99cdb464736f6c63430008040033",
  "bytecodeSha1": "921e3cfe60cfa0aaad6d6b8c2bfefaa974375efa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Voting",
  "coverageMap": {
    "branches": {
      "0": {
        "Voting.createCandidate": {
          "21": [
            2170,
            2204,
            true
          ]
        },
        "Voting.createVoter": {
          "23": [
            1449,
            1480,
            true
          ]
        },
        "Voting.getElectionResult": {
          "22": [
            3636,
            3647,
            true
          ]
        },
        "Voting.vote": {
          "24": [
            2821,
            2831,
            true
          ],
          "25": [
            2884,
            2919,
            true
          ],
          "26": [
            2973,
            3009,
            true
          ],
          "27": [
            3127,
            3160,
            true
          ],
          "28": [
            3212,
            3354,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Voting.createCandidate": {
          "0": [
            2162,
            2243
          ],
          "1": [
            2253,
            2319
          ],
          "2": [
            2329,
            2367
          ],
          "3": [
            2377,
            2427
          ]
        },
        "Voting.createVoter": {
          "10": [
            1441,
            1517
          ],
          "11": [
            1527,
            1584
          ],
          "12": [
            1594,
            1629
          ],
          "13": [
            1648,
            1685
          ]
        },
        "Voting.endElection": {
          "5": [
            1273,
            1291
          ]
        },
        "Voting.getCandidatesList": {
          "4": [
            1891,
            1908
          ]
        },
        "Voting.getElectionResult": {
          "8": [
            3628,
            3675
          ],
          "9": [
            3685,
            3702
          ]
        },
        "Voting.getVotersList": {
          "7": [
            1778,
            1791
          ]
        },
        "Voting.startElection": {
          "6": [
            1189,
            1206
          ]
        },
        "Voting.vote": {
          "14": [
            2813,
            2866
          ],
          "15": [
            2876,
            2955
          ],
          "16": [
            2965,
            3039
          ],
          "17": [
            3119,
            3194
          ],
          "18": [
            3204,
            3429
          ],
          "19": [
            3439,
            3477
          ],
          "20": [
            3488,
            3532
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc86f38511610071578063bc86f3851461013d578063ca3eb44314610152578063d373f8d41461015a578063dd4159c01461016d578063e794273414610180578063fc6f9468146101a057600080fd5b8063137edd98146100b95780631d823d32146100e25780634aba5f34146100f757806359f784681461010c57806362d73eb81461011457806379ae584d1461011c575b600080fd5b6000546100cd90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6100f56100f0366004611204565b6101cb565b005b6100ff6103c9565b6040516100d9919061148b565b6100f5610615565b6100f561063b565b61012f61012a366004611204565b610667565b6040519081526020016100d9565b6101456106a0565b6040516100d99190611541565b6100ff610865565b6100f5610168366004611288565b610aeb565b6100f561017b3660046112f3565b610cb0565b61012f61018e3660046112db565b60026020526000908152604090205481565b6000546101b3906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b6000546001600160a01b031633146101e257600080fd5b60006101ef848484610667565b6000818152600260205260409020546003805492935091811061022257634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102965760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b60648201526084015b60405180910390fd5b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019261030a92849201906110e4565b50602082810151805161032392600185019201906110e4565b506040820151805161033f9160028401916020909101906110e4565b5060608201516003828101919091556080909201516004909101805460ff1916911515919091179055546103759060019061164c565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef906103bb90869086908690611609565b60405180910390a150505050565b6000546060906001600160a01b031633146103e357600080fd5b6003805480602002602001604051908101604052809291908181526020016000905b8282101561060c57838290600052602060002090600502016040518060a001604052908160008201805461043890611693565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611693565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b505050505081526020016001820180546104ca90611693565b80601f01602080910402602001604051908101604052809291908181526020018280546104f690611693565b80156105435780601f1061051857610100808354040283529160200191610543565b820191906000526020600020905b81548152906001019060200180831161052657829003601f168201915b5050505050815260200160028201805461055c90611693565b80601f016020809104026020016040519081016040528092919081815260200182805461058890611693565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040909101529082526001929092019101610405565b50505050905090565b6000546001600160a01b0316331461062c57600080fd5b6000805460ff60a01b19169055565b6000546001600160a01b0316331461065257600080fd5b6000805460ff60a01b1916600160a01b179055565b60008084848460405160200161067f939291906113ad565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b031633146106ba57600080fd5b6001805480602002602001604051908101604052809291908181526020016000905b8282101561060c57838290600052602060002090600402016040518060a001604052908160008201805461070f90611693565b80601f016020809104026020016040519081016040528092919081815260200182805461073b90611693565b80156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050508152602001600182015481526020016002820180546107ab90611693565b80601f01602080910402602001604051908101604052809291908181526020018280546107d790611693565b80156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b50505091835250506003919091015460ff808216151560208085019190915261010090920416151560409092019190915290825260019290920191016106dc565b600054606090600160a01b900460ff16156108c25760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161028d565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561060c57838290600052602060002090600502016040518060a001604052908160008201805461091790611693565b80601f016020809104026020016040519081016040528092919081815260200182805461094390611693565b80156109905780601f1061096557610100808354040283529160200191610990565b820191906000526020600020905b81548152906001019060200180831161097357829003601f168201915b505050505081526020016001820180546109a990611693565b80601f01602080910402602001604051908101604052809291908181526020018280546109d590611693565b8015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b50505050508152602001600282018054610a3b90611693565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6790611693565b8015610ab45780601f10610a8957610100808354040283529160200191610ab4565b820191906000526020600020905b815481529060010190602001808311610a9757829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016108e4565b600082815260046020526040902054600180549091908110610b1d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610b895760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161028d565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610bfc92849201906110e4565b50602082810151600183015560408301518051610c1f92600285019201906110e4565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610c5f919061164c565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610ca390859084906115db565b60405180910390a1505050565b600054600160a01b900460ff16610d095760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161028d565b600084815260046020526040902054600180549091908110610d3b57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610da65760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161028d565b600084815260046020526040902054600180549091908110610dd857634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610e3b5760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161028d565b6000610e48848484610667565b60008181526002602052604090205460038054929350918110610e7b57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610ede5760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161028d565b600085815260046020526040902054600180549091908110610f1057634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610f3191906113f0565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610f7b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610f9c91906113f0565b60405160208183030381529060405280519060200120146110345760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161028d565b60008181526002602052604090205460038054909190811061106657634e487b7160e01b600052603260045260246000fd5b600091825260208220600360059092020101805491611084836116ce565b90915550506000858152600460205260408120546001805490919081106110bb57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b8280546110f090611693565b90600052602060002090601f0160209004810192826111125760008555611158565b82601f1061112b57805160ff1916838001178555611158565b82800160010185558215611158579182015b8281111561115857825182559160200191906001019061113d565b50611164929150611168565b5090565b5b808211156111645760008155600101611169565b600082601f83011261118d578081fd5b813567ffffffffffffffff808211156111a8576111a86116ff565b604051601f8301601f19908116603f011681019082821181831017156111d0576111d06116ff565b816040528381528660208588010111156111e8578485fd5b8360208701602083013792830160200193909352509392505050565b600080600060608486031215611218578283fd5b833567ffffffffffffffff8082111561122f578485fd5b61123b8783880161117d565b94506020860135915080821115611250578384fd5b61125c8783880161117d565b93506040860135915080821115611271578283fd5b5061127e8682870161117d565b9150509250925092565b60008060006060848603121561129c578283fd5b833567ffffffffffffffff808211156112b3578485fd5b6112bf8783880161117d565b9450602086013593506040860135915080821115611271578283fd5b6000602082840312156112ec578081fd5b5035919050565b60008060008060808587031215611308578081fd5b84359350602085013567ffffffffffffffff80821115611326578283fd5b6113328883890161117d565b94506040870135915080821115611347578283fd5b6113538883890161117d565b93506060870135915080821115611368578283fd5b506113758782880161117d565b91505092959194509250565b60008151808452611399816020860160208601611663565b601f01601f19169290920160200192915050565b600084516113bf818460208901611663565b8451908301906113d3818360208901611663565b84519101906113e6818360208801611663565b0195945050505050565b600080835482600182811c91508083168061140c57607f831692505b602080841082141561142c57634e487b7160e01b87526022600452602487fd5b81801561144057600181146114515761147d565b60ff1986168952848901965061147d565b60008a815260209020885b868110156114755781548b82015290850190830161145c565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561153357603f19898403018552815160a081518186526114d782870182611381565b915050888201518582038a8701526114ef8282611381565b91505087820151858203898701526115078282611381565b6060848101519088015260809384015115159390960192909252505093860193908601906001016114b1565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561153357603f19898403018552815160a0815181865261158d82870182611381565b915050888201518986015287820151858203898701526115ad8282611381565b6060848101511515908801526080938401511515939096019290925250509386019390860190600101611567565b6040815260006115ee6040830185611381565b82810360208401526116008185611381565b95945050505050565b60608152600061161c6060830186611381565b828103602084015261162e8186611381565b905082810360408401526116428185611381565b9695505050505050565b60008282101561165e5761165e6116e9565b500390565b60005b8381101561167e578181015183820152602001611666565b8381111561168d576000848401525b50505050565b600181811c908216806116a757607f821691505b602082108114156116c857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116e2576116e26116e9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205076b306ca5a7f70c330238497da5d4acf95dc9ae5f2b5de6567f7623e99cdb464736f6c63430008040033",
  "deployedSourceMap": "25:3686:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80:30;;;;;-1:-1:-1;;;80:30:0;;;;;;;;;8697:14:1;;8690:22;8672:41;;8660:2;8645:18;80:30:0;;;;;;;;1968:466;;;;;;:::i;:::-;;:::i;:::-;;1803:112;;;:::i;:::-;;;;;;;:::i;1223:75::-;;;:::i;1137:76::-;;;:::i;2444:239::-;;;;;;:::i;:::-;;:::i;:::-;;;12835:25:1;;;12823:2;12808:18;2444:239:0;12790:76:1;1698:100:0;;;:::i;:::-;;;;;;;:::i;3549:160::-;;;:::i;1343:349::-;;;;;;:::i;:::-;;:::i;2693:846::-;;;;;;:::i;:::-;;:::i;765:35::-;;;;;;:::i;:::-;;;;;;;;;;;;;;47:27;;;;;-1:-1:-1;;;;;47:27:0;;;;;;-1:-1:-1;;;;;5448:32:1;;;5430:51;;5418:2;5403:18;47:27:0;5385:102:1;1968:466:0;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;2093:11:::1;2108:44;2122:5;2129:13;2144:7;2108:13;:44::i;:::-;2182:14;::::0;;;:6:::1;:14;::::0;;;;;2171:10:::1;:26:::0;;2093:59;;-1:-1:-1;2171:10:0;:26;::::1;;;-1:-1:-1::0;;;2171:26:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:33:::1;:26;::::0;;::::1;;:33;::::0;::::1;;2170:34;2162:81;;;::::0;-1:-1:-1;;;2162:81:0;;10937:2:1;2162:81:0::1;::::0;::::1;10919:21:1::0;10976:2;10956:18;;;10949:30;11015:34;10995:18;;;10988:62;-1:-1:-1;;;11066:18:1;;;11059:32;11108:19;;2162:81:0::1;;;;;;;;;2269:49;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;2269:49:0;;;;;;2313:4:::1;2269:49:::0;;;;;;2253:10:::1;:66:::0;;;;::::1;::::0;;;;;;;;;2269:49;;2253:66:::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2253:66:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2253:66:0::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2253:66:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2253:66:0::1;::::0;::::1;;::::0;;;::::1;::::0;;2346:17;:21:::1;::::0;-1:-1:-1;;2346:21:0::1;:::i;:::-;2329:14;::::0;;;:6:::1;:14;::::0;;;;;;:38;;;;2382:45;::::1;::::0;::::1;::::0;2397:5;;2404:13;;2419:7;;2382:45:::1;:::i;:::-;;;;;;;;190:1;1968:466:::0;;;:::o;1803:112::-;167:12;;1862:18;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1898:10:::1;1891:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1891:17:0;;;-1:-1:-1;;1891:17:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;;;;;;;;;;;::::1;::::0;::::1;;;;;;;;;;1803:112:::0;:::o;1223:75::-;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1286:5:::1;1273:18:::0;;-1:-1:-1;;;;1273:18:0::1;::::0;;1223:75::o;1137:76::-;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1189:10:::1;:17:::0;;-1:-1:-1;;;;1189:17:0::1;-1:-1:-1::0;;;1189:17:0::1;::::0;;1137:76::o;2444:239::-;2561:4;2576:9;2620:5;2627:13;2642:7;2603:47;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2603:47:0;;;;;;2593:58;;2603:47;2593:58;;;;;2444:239;-1:-1:-1;;;;;2444:239:0:o;1698:100::-;167:12;;1753:14;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1785:6:::1;1778:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1778:13:0;;;-1:-1:-1;;1778:13:0::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;;;;::::0;;;;;;;;;;;;;;;::::1;::::0;::::1;;;3549:160:::0;3637:10;;3599:18;;-1:-1:-1;;;3637:10:0;;;;3636:11;3628:47;;;;-1:-1:-1;;;3628:47:0;;11340:2:1;3628:47:0;;;11322:21:1;11379:2;11359:18;;;11352:30;11418:25;11398:18;;;11391:53;11461:18;;3628:47:0;11312:173:1;3628:47:0;3692:10;3685:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3685:17:0;;;-1:-1:-1;;3685:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:349;1457:15;;;;:10;:15;;;;;;1450:6;:23;;:6;;1457:15;1450:23;;;;-1:-1:-1;;;1450:23:0;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;1449:31;1441:76;;;;-1:-1:-1;;;1441:76:0;;11692:2:1;1441:76:0;;;11674:21:1;;;11711:18;;;11704:30;11770:34;11750:18;;;11743:62;11822:18;;1441:76:0;11664:182:1;1441:76:0;1539:44;;;;;;;;;;;;;;;;;;;;;;;;1527:6;1539:44;;;;;;;;;;;;1527:57;;;;;;;-1:-1:-1;1527:57:0;;;;;;;;1539:44;;1527:57;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1527:57:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1527:57:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1527:57:0;;;;;;;-1:-1:-1;;1527:57:0;;;;;;;;;;;1612:13;;:17;;1527:57;1612:17;:::i;:::-;1594:15;;;;:10;:15;;;;;;;:35;;;;1653:32;;;;;1664:5;;1671:13;;1653:32;:::i;:::-;;;;;;;;1343:349;;;:::o;2693:846::-;2821:10;;-1:-1:-1;;;2821:10:0;;;;2813:53;;;;-1:-1:-1;;;2813:53:0;;12053:2:1;2813:53:0;;;12035:21:1;12092:2;12072:18;;;12065:30;12131:32;12111:18;;;12104:60;12181:18;;2813:53:0;12025:180:1;2813:53:0;2891:20;;;;:10;:20;;;;;;2884:6;:28;;:6;;2891:20;2884:28;;;;-1:-1:-1;;;2884:28:0;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;2876:79;;;;-1:-1:-1;;;2876:79:0;;10223:2:1;2876:79:0;;;10205:21:1;10262:2;10242:18;;;10235:30;10301:33;10281:18;;;10274:61;10352:18;;2876:79:0;10195:181:1;2876:79:0;2980:20;;;;:10;:20;;;;;;2973:6;:28;;:6;;2980:20;2973:28;;;;-1:-1:-1;;;2973:28:0;;;;;;;;;;;;;;;;;:36;:28;;;;;:36;;;;2965:74;;;;-1:-1:-1;;;2965:74:0;;10583:2:1;2965:74:0;;;10565:21:1;10622:2;10602:18;;;10595:30;10661:27;10641:18;;;10634:55;10706:18;;2965:74:0;10555:175:1;2965:74:0;3049:11;3063:46;3077:7;3086:13;3101:7;3063:13;:46::i;:::-;3138:14;;;;:6;:14;;;;;;3127:10;:26;;3049:60;;-1:-1:-1;3127:10:0;:26;;;;-1:-1:-1;;;3127:26:0;;;;;;;;;;;;;;;;;:33;:26;;;;;:33;;;;3119:75;;;;-1:-1:-1;;;3119:75:0;;9865:2:1;3119:75:0;;;9847:21:1;9904:2;9884:18;;;9877:30;9943:31;9923:18;;;9916:59;9992:18;;3119:75:0;9837:179:1;3119:75:0;3318:20;;;;:10;:20;;;;;;3311:6;:28;;:6;;3318:20;3311:28;;;;-1:-1:-1;;;3311:28:0;;;;;;;;;;;;;;;;;;;:41;;3294:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;3284:70;;;;;;3239:10;3250:6;:14;3257:6;3250:14;;;;;;;;;;;;3239:26;;;;;;-1:-1:-1;;;3239:26:0;;;;;;;;;;;;;;;;;;;:39;;3222:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;3212:68;;;;;;:142;3204:225;;;;-1:-1:-1;;;3204:225:0;;12412:2:1;3204:225:0;;;12394:21:1;12451:2;12431:18;;;12424:30;12490:34;12470:18;;;12463:62;12561:34;12541:18;;;12534:62;-1:-1:-1;;;12612:19:1;;;12605:37;12659:19;;3204:225:0;12384:300:1;3204:225:0;3450:14;;;;:6;:14;;;;;;3439:10;:26;;:10;;3450:14;3439:26;;;;-1:-1:-1;;;3439:26:0;;;;;;;;;;;;;;;;:36;:26;;;;;:36;:38;;;;;;:::i;:::-;;;;-1:-1:-1;;3527:5:0;3495:20;;;:10;:20;;;;;;3488:6;:28;;:6;;3495:20;3488:28;;;;-1:-1:-1;;;3488:28:0;;;;;;;;;;;;;;;;;;;;;;:36;;:44;;-1:-1:-1;;3488:44:0;;;;;;;;;;-1:-1:-1;;;;;2693:846:0:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:739:1;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;132:5;125;118:20;77:2;172:6;159:20;198:18;235:2;231;228:10;225:2;;;241:18;;:::i;:::-;316:2;310:9;284:2;370:13;;-1:-1:-1;;366:22:1;;;390:2;362:31;358:40;346:53;;;414:18;;;434:22;;;411:46;408:2;;;460:18;;:::i;:::-;500:10;496:2;489:22;535:2;527:6;520:18;581:3;574:4;569:2;561:6;557:15;553:26;550:35;547:2;;;602:5;595;588:20;547:2;670;663:4;655:6;651:17;644:4;636:6;632:17;619:54;693:15;;;710:4;689:26;682:41;;;;-1:-1:-1;697:6:1;67:686;-1:-1:-1;;;67:686:1:o;758:783::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;955:6;947;940:22;902:2;1000:9;987:23;1029:18;1070:2;1062:6;1059:14;1056:2;;;1091:6;1083;1076:22;1056:2;1119:50;1161:7;1152:6;1141:9;1137:22;1119:50;:::i;:::-;1109:60;;1222:2;1211:9;1207:18;1194:32;1178:48;;1251:2;1241:8;1238:16;1235:2;;;1272:6;1264;1257:22;1235:2;1300:52;1344:7;1333:8;1322:9;1318:24;1300:52;:::i;:::-;1290:62;;1405:2;1394:9;1390:18;1377:32;1361:48;;1434:2;1424:8;1421:16;1418:2;;;1455:6;1447;1440:22;1418:2;;1483:52;1527:7;1516:8;1505:9;1501:24;1483:52;:::i;:::-;1473:62;;;892:649;;;;;:::o;1546:641::-;1643:6;1651;1659;1712:2;1700:9;1691:7;1687:23;1683:32;1680:2;;;1733:6;1725;1718:22;1680:2;1778:9;1765:23;1807:18;1848:2;1840:6;1837:14;1834:2;;;1869:6;1861;1854:22;1834:2;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1994:2;1983:9;1979:18;1966:32;1956:42;;2051:2;2040:9;2036:18;2023:32;2007:48;;2080:2;2070:8;2067:16;2064:2;;;2101:6;2093;2086:22;2192:190;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:2;;;2325:6;2317;2310:22;2272:2;-1:-1:-1;2353:23:1;;2262:120;-1:-1:-1;2262:120:1:o;2387:852::-;2503:6;2511;2519;2527;2580:3;2568:9;2559:7;2555:23;2551:33;2548:2;;;2602:6;2594;2587:22;2548:2;2643:9;2630:23;2620:33;;2704:2;2693:9;2689:18;2676:32;2727:18;2768:2;2760:6;2757:14;2754:2;;;2789:6;2781;2774:22;2754:2;2817:50;2859:7;2850:6;2839:9;2835:22;2817:50;:::i;:::-;2807:60;;2920:2;2909:9;2905:18;2892:32;2876:48;;2949:2;2939:8;2936:16;2933:2;;;2970:6;2962;2955:22;2933:2;2998:52;3042:7;3031:8;3020:9;3016:24;2998:52;:::i;:::-;2988:62;;3103:2;3092:9;3088:18;3075:32;3059:48;;3132:2;3122:8;3119:16;3116:2;;;3153:6;3145;3138:22;3116:2;;3181:52;3225:7;3214:8;3203:9;3199:24;3181:52;:::i;:::-;3171:62;;;2538:701;;;;;;;:::o;3244:258::-;3286:3;3324:5;3318:12;3351:6;3346:3;3339:19;3367:63;3423:6;3416:4;3411:3;3407:14;3400:4;3393:5;3389:16;3367:63;:::i;:::-;3484:2;3463:15;-1:-1:-1;;3459:29:1;3450:39;;;;3491:4;3446:50;;3294:208;-1:-1:-1;;3294:208:1:o;3507:664::-;3734:3;3772:6;3766:13;3788:53;3834:6;3829:3;3822:4;3814:6;3810:17;3788:53;:::i;:::-;3904:13;;3863:16;;;;3926:57;3904:13;3863:16;3960:4;3948:17;;3926:57;:::i;:::-;4050:13;;4005:20;;;4072:57;4050:13;4005:20;4106:4;4094:17;;4072:57;:::i;:::-;4145:20;;3742:429;-1:-1:-1;;;;;3742:429:1:o;4176:1103::-;4304:3;4333;4368:6;4362:13;4398:3;4420:1;4448:9;4444:2;4440:18;4430:28;;4508:2;4497:9;4493:18;4530;4520:2;;4574:4;4566:6;4562:17;4552:27;;4520:2;4600;4648;4640:6;4637:14;4617:18;4614:38;4611:2;;;-1:-1:-1;;;4675:33:1;;4731:4;4728:1;4721:15;4761:4;4682:3;4749:17;4611:2;4792:18;4819:104;;;;4937:1;4932:322;;;;4785:469;;4819:104;-1:-1:-1;;4852:24:1;;4840:37;;4897:16;;;;-1:-1:-1;4819:104:1;;4932:322;12918:4;12937:17;;;12987:4;12971:21;;5027:3;5043:165;5057:6;5054:1;5051:13;5043:165;;;5135:14;;5122:11;;;5115:35;5178:16;;;;5072:10;;5043:165;;;5047:3;;5237:6;5232:3;5228:16;5221:23;;4785:469;-1:-1:-1;5270:3:1;;4312:967;-1:-1:-1;;;;;;;;4312:967:1:o;5492:1572::-;5684:4;5713:2;5753;5742:9;5738:18;5783:2;5772:9;5765:21;5806:6;5841;5835:13;5872:6;5864;5857:22;5898:2;5888:12;;5931:2;5920:9;5916:18;5909:25;;5993:2;5983:6;5980:1;5976:14;5965:9;5961:30;5957:39;6031:2;6023:6;6019:15;6052:4;6065:970;6079:6;6076:1;6073:13;6065:970;;;6172:2;6168:7;6156:9;6148:6;6144:22;6140:36;6135:3;6128:49;6206:6;6200:13;6236:4;6279:2;6273:9;6310:2;6302:6;6295:18;6340:48;6384:2;6376:6;6372:15;6358:12;6340:48;:::i;:::-;6326:62;;;6437:2;6433;6429:11;6423:18;6490:6;6482;6478:19;6473:2;6465:6;6461:15;6454:44;6525:41;6559:6;6543:14;6525:41;:::i;:::-;6511:55;;;6615:2;6611;6607:11;6601:18;6668:6;6660;6656:19;6651:2;6643:6;6639:15;6632:44;6703:41;6737:6;6721:14;6703:41;:::i;:::-;6767:4;6814:11;;;6808:18;6791:15;;;6784:43;6850:4;6911:11;;;6905:18;6898:26;6891:34;6874:15;;;;6867:59;;;;-1:-1:-1;;7013:12:1;;;;6978:15;;;;6101:1;6094:9;6065:970;;;-1:-1:-1;7052:6:1;;5693:1371;-1:-1:-1;;;;;;;;5693:1371:1:o;7069:1458::-;7253:4;7282:2;7322;7311:9;7307:18;7352:2;7341:9;7334:21;7375:6;7410;7404:13;7441:6;7433;7426:22;7467:2;7457:12;;7500:2;7489:9;7485:18;7478:25;;7562:2;7552:6;7549:1;7545:14;7534:9;7530:30;7526:39;7600:2;7592:6;7588:15;7621:4;7634:864;7648:6;7645:1;7642:13;7634:864;;;7741:2;7737:7;7725:9;7717:6;7713:22;7709:36;7704:3;7697:49;7775:6;7769:13;7805:4;7848:2;7842:9;7879:2;7871:6;7864:18;7909:48;7953:2;7945:6;7941:15;7927:12;7909:48;:::i;:::-;7895:62;;;8008:2;8004;8000:11;7994:18;7989:2;7981:6;7977:15;7970:43;8062:2;8058;8054:11;8048:18;8115:6;8107;8103:19;8098:2;8090:6;8086:15;8079:44;8150:41;8184:6;8168:14;8150:41;:::i;:::-;8214:4;8275:11;;;8269:18;8262:26;8255:34;8238:15;;;8231:59;8313:4;8374:11;;;8368:18;8361:26;8354:34;8337:15;;;;8330:59;;;;-1:-1:-1;;8476:12:1;;;;8441:15;;;;7670:1;7663:9;7634:864;;8724:383;8921:2;8910:9;8903:21;8884:4;8947:45;8988:2;8977:9;8973:18;8965:6;8947:45;:::i;:::-;9040:9;9032:6;9028:22;9023:2;9012:9;9008:18;9001:50;9068:33;9094:6;9086;9068:33;:::i;:::-;9060:41;8893:214;-1:-1:-1;;;;;8893:214:1:o;9112:546::-;9357:2;9346:9;9339:21;9320:4;9383:45;9424:2;9413:9;9409:18;9401:6;9383:45;:::i;:::-;9476:9;9468:6;9464:22;9459:2;9448:9;9444:18;9437:50;9510:33;9536:6;9528;9510:33;:::i;:::-;9496:47;;9591:9;9583:6;9579:22;9574:2;9563:9;9559:18;9552:50;9619:33;9645:6;9637;9619:33;:::i;:::-;9611:41;9329:329;-1:-1:-1;;;;;;9329:329:1:o;13003:125::-;13043:4;13071:1;13068;13065:8;13062:2;;;13076:18;;:::i;:::-;-1:-1:-1;13113:9:1;;13052:76::o;13133:258::-;13205:1;13215:113;13229:6;13226:1;13223:13;13215:113;;;13305:11;;;13299:18;13286:11;;;13279:39;13251:2;13244:10;13215:113;;;13346:6;13343:1;13340:13;13337:2;;;13381:1;13372:6;13367:3;13363:16;13356:27;13337:2;;13186:205;;;:::o;13396:380::-;13475:1;13471:12;;;;13518;;;13539:2;;13593:4;13585:6;13581:17;13571:27;;13539:2;13646;13638:6;13635:14;13615:18;13612:38;13609:2;;;13692:10;13687:3;13683:20;13680:1;13673:31;13727:4;13724:1;13717:15;13755:4;13752:1;13745:15;13609:2;;13451:325;;;:::o;13781:135::-;13820:3;-1:-1:-1;;13841:17:1;;13838:2;;;13861:18;;:::i;:::-;-1:-1:-1;13908:1:1;13897:13;;13828:88::o;13921:127::-;13982:10;13977:3;13973:20;13970:1;13963:31;14013:4;14010:1;14003:15;14037:4;14034:1;14027:15;14053:127;14114:10;14109:3;14105:20;14102:1;14095:31;14145:4;14142:1;14135:15;14169:4;14166:1;14159:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    3711
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC86F385 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC86F385 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xCA3EB443 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xD373F8D4 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xDD4159C0 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE7942734 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x137EDD98 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1D823D32 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x4ABA5F34 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x59F78468 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x62D73EB8 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x79AE584D EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x615 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x63B JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x865 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x1288 JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x12F3 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EF DUP5 DUP5 DUP5 PUSH2 0x667 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0x222 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1097 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x5 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP3 PUSH2 0x30A SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x10E4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x323 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x10E4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x33F SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x10E4 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD PUSH2 0x375 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF SWAP1 PUSH2 0x3BB SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x60C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x4CA SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F6 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x543 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x518 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x543 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x526 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x55C SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x67F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x60C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x70F SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x73B SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x788 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x75D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x788 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x76B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x7AB SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D7 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x60C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x917 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x943 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x990 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x965 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x990 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x973 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x9A9 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D5 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA3B SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA67 SWAP1 PUSH2 0x1693 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA89 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA97 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xB1D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220696420697320616C72656164792072656769737465726564212E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x4 SWAP1 SWAP3 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP3 PUSH2 0xBFC SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x10E4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC1F SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x10E4 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A SWAP1 PUSH2 0xCA3 SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xD3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xDD8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 DUP5 DUP5 DUP5 PUSH2 0x667 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0xE7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xF10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x3AB2B731BC97 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1066 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x1084 DUP4 PUSH2 0x16CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x10BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0x1693 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1112 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1158 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x112B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1158 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1158 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1158 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x113D JUMP JUMPDEST POP PUSH2 0x1164 SWAP3 SWAP2 POP PUSH2 0x1168 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1164 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x118D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11A8 JUMPI PUSH2 0x11A8 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11D0 PUSH2 0x16FF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x11E8 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1218 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x122F JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x123B DUP8 DUP4 DUP9 ADD PUSH2 0x117D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1250 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x125C DUP8 DUP4 DUP9 ADD PUSH2 0x117D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1271 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x127E DUP7 DUP3 DUP8 ADD PUSH2 0x117D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x129C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12B3 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x12BF DUP8 DUP4 DUP9 ADD PUSH2 0x117D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1271 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EC JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1308 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1326 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1332 DUP9 DUP4 DUP10 ADD PUSH2 0x117D JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1347 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1353 DUP9 DUP4 DUP10 ADD PUSH2 0x117D JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1368 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1375 DUP8 DUP3 DUP9 ADD PUSH2 0x117D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1399 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x13BF DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x1663 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x13D3 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x1663 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x13E6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1663 JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x140C JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x142C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1440 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1451 JUMPI PUSH2 0x147D JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x147D JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1475 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x145C JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x14D7 DUP3 DUP8 ADD DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP11 DUP8 ADD MSTORE PUSH2 0x14EF DUP3 DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x1507 DUP3 DUP3 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14B1 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x158D DUP3 DUP8 ADD DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x15AD DUP3 DUP3 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1381 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1600 DUP2 DUP6 PUSH2 0x1381 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x161C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1381 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x162E DUP2 DUP7 PUSH2 0x1381 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1642 DUP2 DUP6 PUSH2 0x1381 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165E PUSH2 0x16E9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x167E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1666 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x168D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x16E2 JUMPI PUSH2 0x16E2 PUSH2 0x16E9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP PUSH23 0xB306CA5A7F70C330238497DA5D4ACF95DC9AE5F2B5DE65 PUSH8 0xF7623E99CDB46473 PUSH16 0x6C634300080400330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA3EB443"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD373F8D4"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD4159C0"
    },
    "82": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "86": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE7942734"
    },
    "93": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "97": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC6F9468"
    },
    "104": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "108": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x137EDD98"
    },
    "120": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1D823D32"
    },
    "131": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "135": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4ABA5F34"
    },
    "142": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "146": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59F78468"
    },
    "153": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "157": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62D73EB8"
    },
    "164": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79AE584D"
    },
    "175": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C"
    },
    "179": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        3711
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "188": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "192": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DIV",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "202": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "AND",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "204": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "op": "SWAP1"
    },
    "210": {
      "op": "ISZERO"
    },
    "211": {
      "op": "ISZERO"
    },
    "212": {
      "op": "DUP2"
    },
    "213": {
      "op": "MSTORE"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "216": {
      "op": "ADD"
    },
    "217": {
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "220": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SUB",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "RETURN",
      "path": "0"
    },
    "226": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "230": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "233": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "234": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "236": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1204"
    },
    "239": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "240": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB"
    },
    "244": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "STOP",
      "path": "0"
    },
    "247": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "251": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "254": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1803,
        1915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "258": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "259": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "262": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "263": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "264": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148B"
    },
    "267": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1803,
        1915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "268": {
      "fn": "Voting.endElection",
      "offset": [
        1223,
        1298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "269": {
      "fn": "Voting.endElection",
      "offset": [
        1223,
        1298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "272": {
      "fn": "Voting.endElection",
      "offset": [
        1223,
        1298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x615"
    },
    "275": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        1223,
        1298
      ],
      "op": "JUMP",
      "path": "0"
    },
    "276": {
      "fn": "Voting.startElection",
      "offset": [
        1137,
        1213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "277": {
      "fn": "Voting.startElection",
      "offset": [
        1137,
        1213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "280": {
      "fn": "Voting.startElection",
      "offset": [
        1137,
        1213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63B"
    },
    "283": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        1137,
        1213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "284": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "285": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "288": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "291": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "292": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "294": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1204"
    },
    "297": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x667"
    },
    "302": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "303": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "306": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "307": {
      "op": "SWAP1"
    },
    "308": {
      "op": "DUP2"
    },
    "309": {
      "op": "MSTORE"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "312": {
      "op": "ADD"
    },
    "313": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "316": {
      "op": "JUMP"
    },
    "317": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "318": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "321": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "324": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1698,
        1798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "328": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "329": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "332": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "333": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "334": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1541"
    },
    "337": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1698,
        1798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "338": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3549,
        3709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3549,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "342": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3549,
        3709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x865"
    },
    "345": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3549,
        3709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "350": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "353": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "354": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "356": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1288"
    },
    "359": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1343,
        1692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "360": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEB"
    },
    "364": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1343,
        1692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "369": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "372": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "373": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "375": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F3"
    },
    "378": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2693,
        3539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "383": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2693,
        3539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "offset": [
        765,
        800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "388": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "391": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "392": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "394": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12DB"
    },
    "397": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        765,
        800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "398": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "401": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "403": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "404": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "406": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "407": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "408": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "409": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "411": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "412": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "413": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "414": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "415": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "416": {
      "offset": [
        47,
        74
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "419": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "420": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "423": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "offset": [
        47,
        74
      ],
      "op": "AND",
      "path": "0"
    },
    "433": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "DUP2",
      "path": "0"
    },
    "434": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "438": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "op": "SWAP1"
    },
    "448": {
      "op": "SWAP2"
    },
    "449": {
      "op": "AND"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "offset": [
        47,
        74
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "458": {
      "op": "JUMP"
    },
    "459": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "462": {
      "fn": "Voting.createCandidate",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "472": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "473": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "474": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "477": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "478": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "480": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "481": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "482": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "483": {
      "fn": "Voting.createCandidate",
      "offset": [
        2093,
        2104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "fn": "Voting.createCandidate",
      "offset": [
        2108,
        2152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "488": {
      "fn": "Voting.createCandidate",
      "offset": [
        2122,
        2127
      ],
      "op": "DUP5",
      "path": "0"
    },
    "489": {
      "fn": "Voting.createCandidate",
      "offset": [
        2129,
        2142
      ],
      "op": "DUP5",
      "path": "0"
    },
    "490": {
      "fn": "Voting.createCandidate",
      "offset": [
        2144,
        2151
      ],
      "op": "DUP5",
      "path": "0"
    },
    "491": {
      "fn": "Voting.createCandidate",
      "offset": [
        2108,
        2121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x667"
    },
    "494": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2108,
        2152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "Voting.createCandidate",
      "offset": [
        2108,
        2152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "498": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "DUP2",
      "path": "0"
    },
    "499": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "DUP2",
      "path": "0"
    },
    "500": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "501": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "503": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "505": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "506": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "508": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "509": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "510": {
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2196
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "511": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "513": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "514": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "515": {
      "fn": "Voting.createCandidate",
      "offset": [
        2093,
        2152
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "516": {
      "fn": "Voting.createCandidate",
      "offset": [
        2093,
        2152
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "519": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "520": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "LT",
      "path": "0"
    },
    "521": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x222"
    },
    "524": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "525": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "535": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "536": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "538": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "540": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "543": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "545": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "546": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "547": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "549": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "550": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "551": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "552": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "554": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "555": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "556": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "557": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "559": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "561": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "562": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "563": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "MUL",
      "path": "0"
    },
    "564": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2197
      ],
      "op": "ADD",
      "path": "0"
    },
    "565": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2204
      ],
      "op": "ADD",
      "path": "0"
    },
    "566": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2204
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "567": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "569": {
      "fn": "Voting.createCandidate",
      "offset": [
        2171,
        2204
      ],
      "op": "AND",
      "path": "0"
    },
    "570": {
      "branch": 21,
      "fn": "Voting.createCandidate",
      "offset": [
        2170,
        2204
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "571": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "574": {
      "branch": 21,
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "575": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "577": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "584": {
      "op": "SHL"
    },
    "585": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "586": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "589": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "591": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "DUP3",
      "path": "0"
    },
    "592": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "ADD",
      "path": "0"
    },
    "593": {
      "op": "MSTORE"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "598": {
      "op": "DUP3"
    },
    "599": {
      "op": "ADD"
    },
    "600": {
      "op": "MSTORE"
    },
    "601": {
      "op": "PUSH32",
      "value": "0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "636": {
      "op": "DUP3"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "op": "MSTORE"
    },
    "639": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "652": {
      "op": "ADD"
    },
    "653": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "654": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "656": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "657": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "DUP1",
      "path": "0"
    },
    "658": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "659": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "SUB",
      "path": "0"
    },
    "660": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "661": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "REVERT",
      "path": "0"
    },
    "662": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "665": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP1",
      "path": "0"
    },
    "666": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "667": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "669": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "ADD",
      "path": "0"
    },
    "671": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP3",
      "path": "0"
    },
    "672": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "673": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP6",
      "path": "0"
    },
    "674": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "675": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "676": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "678": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP1",
      "path": "0"
    },
    "679": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP3",
      "path": "0"
    },
    "680": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP7",
      "path": "0"
    },
    "682": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "683": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "684": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "685": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "ADD",
      "path": "0"
    },
    "687": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP5",
      "path": "0"
    },
    "688": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "692": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "694": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP3",
      "path": "0"
    },
    "695": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "ADD",
      "path": "0"
    },
    "696": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "697": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "698": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "699": {
      "fn": "Voting.createCandidate",
      "offset": [
        2313,
        2317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "701": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "703": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP4",
      "path": "0"
    },
    "704": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "ADD",
      "path": "0"
    },
    "705": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "706": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "708": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "710": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "712": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "713": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "714": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "715": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "716": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "717": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "718": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "719": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "720": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "721": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "722": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "723": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "724": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "725": {
      "fn": "Voting.createCandidate",
      "offset": [
        2269,
        2318
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "726": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "728": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "729": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "730": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MUL",
      "path": "0"
    },
    "731": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "764": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "765": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "766": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30A"
    },
    "769": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "770": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP5",
      "path": "0"
    },
    "771": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "772": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "773": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "774": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "777": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2253,
        2319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "778": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "782": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "783": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "784": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "785": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "786": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "787": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "788": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "791": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "792": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "794": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP6",
      "path": "0"
    },
    "795": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "796": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "797": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "798": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "799": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "802": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2253,
        2319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "803": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "807": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "808": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "809": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "810": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "812": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33F"
    },
    "815": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "816": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "818": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP5",
      "path": "0"
    },
    "819": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "820": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "821": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "823": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "824": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "825": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "826": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "830": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2253,
        2319
      ],
      "op": "JUMP",
      "path": "0"
    },
    "831": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "835": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "836": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "837": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "838": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "840": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "841": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "842": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "843": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "844": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "845": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "846": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "847": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "849": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "850": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "851": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "852": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "853": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "855": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "856": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "857": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ADD",
      "path": "0"
    },
    "858": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "862": {
      "op": "NOT"
    },
    "863": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "AND",
      "path": "0"
    },
    "864": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "865": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "866": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "867": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "868": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "870": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "OR",
      "path": "0"
    },
    "871": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "872": {
      "fn": "Voting.createCandidate",
      "offset": [
        2253,
        2319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "873": {
      "fn": "Voting.createCandidate",
      "offset": [
        2346,
        2363
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "874": {
      "fn": "Voting.createCandidate",
      "offset": [
        2346,
        2367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x375"
    },
    "877": {
      "fn": "Voting.createCandidate",
      "offset": [
        2346,
        2367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "SWAP1"
    },
    "881": {
      "fn": "Voting.createCandidate",
      "offset": [
        2346,
        2367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164C"
    },
    "884": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2346,
        2367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "885": {
      "fn": "Voting.createCandidate",
      "offset": [
        2346,
        2367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "886": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "888": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "DUP3",
      "path": "0"
    },
    "889": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "890": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "891": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "893": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "895": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "896": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "898": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "899": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "901": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2343
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "902": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "903": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "904": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "905": {
      "fn": "Voting.createCandidate",
      "offset": [
        2329,
        2367
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "906": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 3
    },
    "907": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF"
    },
    "940": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "941": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BB"
    },
    "944": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "945": {
      "fn": "Voting.createCandidate",
      "offset": [
        2397,
        2402
      ],
      "op": "DUP7",
      "path": "0"
    },
    "946": {
      "fn": "Voting.createCandidate",
      "offset": [
        2397,
        2402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "947": {
      "fn": "Voting.createCandidate",
      "offset": [
        2404,
        2417
      ],
      "op": "DUP7",
      "path": "0"
    },
    "948": {
      "fn": "Voting.createCandidate",
      "offset": [
        2404,
        2417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "949": {
      "fn": "Voting.createCandidate",
      "offset": [
        2419,
        2426
      ],
      "op": "DUP7",
      "path": "0"
    },
    "950": {
      "fn": "Voting.createCandidate",
      "offset": [
        2419,
        2426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "951": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1609"
    },
    "954": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2382,
        2427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "955": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "956": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "958": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "959": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "DUP1",
      "path": "0"
    },
    "960": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "961": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "SUB",
      "path": "0"
    },
    "962": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "963": {
      "fn": "Voting.createCandidate",
      "offset": [
        2382,
        2427
      ],
      "op": "LOG1",
      "path": "0"
    },
    "964": {
      "offset": [
        190,
        191
      ],
      "op": "POP",
      "path": "0"
    },
    "965": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "POP",
      "path": "0"
    },
    "966": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "POP",
      "path": "0"
    },
    "967": {
      "fn": "Voting.createCandidate",
      "offset": [
        1968,
        2434
      ],
      "op": "POP",
      "path": "0"
    },
    "968": {
      "fn": "Voting.createCandidate",
      "jump": "o",
      "offset": [
        1968,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "969": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "970": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "972": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "973": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1862,
        1880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "975": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1862,
        1880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "op": "SUB"
    },
    "984": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "985": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "986": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "987": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E3"
    },
    "990": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "991": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "993": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "994": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "995": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1898,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "998": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1000": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1001": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1003": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1004": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1006": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1007": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1009": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1010": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1012": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1013": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1015": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1016": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1017": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1018": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1019": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1022": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1023": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1025": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1026": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1028": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1029": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1030": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1031": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1032": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "LT",
      "path": "0"
    },
    "1033": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1034": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "1037": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1038": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1039": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1040": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1041": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1043": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1044": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1046": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1048": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1049": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1050": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1052": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1053": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1054": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1056": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1057": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1058": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1060": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1061": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1063": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1064": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1065": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1066": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1068": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1069": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1070": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1071": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1072": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "1075": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1076": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1079": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1080": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1081": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1082": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1084": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1085": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1087": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1088": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1089": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DIV",
      "path": "0"
    },
    "1090": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1091": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1093": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1094": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1096": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1097": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1098": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1099": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1100": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1102": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1104": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1105": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1106": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1108": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1109": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1112": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1113": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1114": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1116": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1119": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1120": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1123": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1124": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1126": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1127": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B1"
    },
    "1130": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1131": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1132": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1134": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "LT",
      "path": "0"
    },
    "1135": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1138": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1139": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1142": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1143": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1144": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1145": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DIV",
      "path": "0"
    },
    "1146": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1147": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1148": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1149": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1150": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1152": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1153": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1154": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B1"
    },
    "1157": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1158": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1159": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1160": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1161": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1162": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1163": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1165": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1166": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1168": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1170": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1171": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1172": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1173": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1174": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1175": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1177": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1180": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1182": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1184": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1185": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1186": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1187": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "GT",
      "path": "0"
    },
    "1188": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x494"
    },
    "1191": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1192": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1193": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1194": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SUB",
      "path": "0"
    },
    "1195": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1197": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "AND",
      "path": "0"
    },
    "1198": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1199": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1200": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1201": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1203": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1204": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1205": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1206": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1207": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1208": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1209": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1211": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1212": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1214": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1215": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1216": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1217": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1218": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1221": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1222": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1225": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1226": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1227": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1228": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1230": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1231": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1233": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1234": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1235": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DIV",
      "path": "0"
    },
    "1236": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1237": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1239": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1240": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1242": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1243": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1244": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1245": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1246": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1248": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1249": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1250": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1251": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1252": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1254": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1255": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1256": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1258": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1259": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1260": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1261": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1262": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F6"
    },
    "1265": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1266": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1269": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1270": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1271": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1272": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1273": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "1276": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1277": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1278": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1280": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "LT",
      "path": "0"
    },
    "1281": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x518"
    },
    "1284": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1285": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1288": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1289": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1290": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1291": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DIV",
      "path": "0"
    },
    "1292": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1293": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1294": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1295": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1296": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1298": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1299": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "1303": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1304": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1305": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1306": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1307": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1308": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1311": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1312": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1314": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1316": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1317": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1319": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1320": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1321": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1322": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1323": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1324": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1326": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1327": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1328": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1330": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1331": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1332": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1333": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "GT",
      "path": "0"
    },
    "1334": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x526"
    },
    "1337": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1338": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1339": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1340": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SUB",
      "path": "0"
    },
    "1341": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1343": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "AND",
      "path": "0"
    },
    "1344": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1345": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1346": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1347": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1348": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1349": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1350": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1351": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1352": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1353": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1354": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1355": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1357": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1358": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1360": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1361": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1362": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1363": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1364": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55C"
    },
    "1367": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1368": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1371": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1372": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1373": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1374": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1376": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1377": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1379": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1380": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1381": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DIV",
      "path": "0"
    },
    "1382": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1383": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1385": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1386": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1388": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1389": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1390": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1391": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1392": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1394": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1395": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1396": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1397": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1398": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1399": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1400": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1401": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1402": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1404": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1405": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1406": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1407": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1408": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x588"
    },
    "1411": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1412": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1415": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1416": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1417": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1418": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1419": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D5"
    },
    "1422": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1423": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1424": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1426": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "LT",
      "path": "0"
    },
    "1427": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AA"
    },
    "1430": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1431": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1434": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1435": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1436": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1437": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DIV",
      "path": "0"
    },
    "1438": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MUL",
      "path": "0"
    },
    "1439": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1440": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1441": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1442": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1444": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1445": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1446": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D5"
    },
    "1449": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1450": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1451": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1452": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1453": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1454": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1455": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1457": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1458": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1460": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1462": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1463": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1464": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1465": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1466": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1467": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1468": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1469": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1470": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1472": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1473": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1474": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1476": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1477": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1478": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1479": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "GT",
      "path": "0"
    },
    "1480": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B8"
    },
    "1483": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1484": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1485": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SUB",
      "path": "0"
    },
    "1487": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1489": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "AND",
      "path": "0"
    },
    "1490": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1491": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1492": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1493": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1498": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1499": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1504": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1505": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1506": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1507": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1509": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1510": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1511": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1512": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1513": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1514": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1515": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1516": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1518": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1519": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1520": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1521": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1522": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1524": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "AND",
      "path": "0"
    },
    "1525": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1526": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1527": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1529": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1530": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1531": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1532": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1533": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1534": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1535": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1536": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1538": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1539": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1540": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1541": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1542": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1543": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "ADD",
      "path": "0"
    },
    "1544": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x405"
    },
    "1547": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1548": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1549": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1550": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1551": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1552": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1553": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1554": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1891,
        1908
      ],
      "op": "POP",
      "path": "0"
    },
    "1555": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1803,
        1915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1556": {
      "fn": "Voting.getCandidatesList",
      "jump": "o",
      "offset": [
        1803,
        1915
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1557": {
      "fn": "Voting.endElection",
      "offset": [
        1223,
        1298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1558": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1560": {
      "fn": "Voting.endElection",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "op": "SUB"
    },
    "1569": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1570": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1571": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1572": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62C"
    },
    "1575": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1576": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1578": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1579": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1580": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1581": {
      "fn": "Voting.endElection",
      "offset": [
        1286,
        1291
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "1583": {
      "fn": "Voting.endElection",
      "offset": [
        1273,
        1291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1584": {
      "fn": "Voting.endElection",
      "offset": [
        1273,
        1291
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1589": {
      "op": "SHL"
    },
    "1590": {
      "op": "NOT"
    },
    "1591": {
      "fn": "Voting.endElection",
      "offset": [
        1273,
        1291
      ],
      "op": "AND",
      "path": "0"
    },
    "1592": {
      "fn": "Voting.endElection",
      "offset": [
        1273,
        1291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "Voting.endElection",
      "offset": [
        1273,
        1291
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1594": {
      "fn": "Voting.endElection",
      "jump": "o",
      "offset": [
        1223,
        1298
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1595": {
      "fn": "Voting.startElection",
      "offset": [
        1137,
        1213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1596": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1598": {
      "fn": "Voting.startElection",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "SUB"
    },
    "1607": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1608": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1609": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1610": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x652"
    },
    "1613": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1614": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1616": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1617": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1618": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1619": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1199
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1621": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1622": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "op": "NOT"
    },
    "1629": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1206
      ],
      "op": "AND",
      "path": "0"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1206
      ],
      "op": "OR",
      "path": "0"
    },
    "1636": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "Voting.startElection",
      "offset": [
        1189,
        1206
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1638": {
      "fn": "Voting.startElection",
      "jump": "o",
      "offset": [
        1137,
        1213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1639": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1640": {
      "fn": "Voting._generateHash",
      "offset": [
        2561,
        2565
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1642": {
      "fn": "Voting._generateHash",
      "offset": [
        2576,
        2585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1643": {
      "fn": "Voting._generateHash",
      "offset": [
        2620,
        2625
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1644": {
      "fn": "Voting._generateHash",
      "offset": [
        2627,
        2640
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1645": {
      "fn": "Voting._generateHash",
      "offset": [
        2642,
        2649
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1646": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1648": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1649": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1651": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "ADD",
      "path": "0"
    },
    "1652": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67F"
    },
    "1655": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1656": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1657": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1658": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1659": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AD"
    },
    "1662": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2603,
        2650
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1663": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1664": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1666": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1667": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1668": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1669": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1670": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SUB",
      "path": "0"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1673": {
      "op": "NOT"
    },
    "1674": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "ADD",
      "path": "0"
    },
    "1675": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1676": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1677": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1678": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1679": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1680": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1681": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1682": {
      "fn": "Voting._generateHash",
      "offset": [
        2603,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1684": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1685": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1686": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "ADD",
      "path": "0"
    },
    "1687": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1688": {
      "fn": "Voting._generateHash",
      "offset": [
        2593,
        2651
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1689": {
      "fn": "Voting._generateHash",
      "offset": [
        2444,
        2683
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "op": "POP"
    },
    "1695": {
      "fn": "Voting._generateHash",
      "jump": "o",
      "offset": [
        2444,
        2683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1696": {
      "fn": "Voting.getVotersList",
      "offset": [
        1698,
        1798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1697": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1699": {
      "fn": "Voting.getVotersList",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1700": {
      "fn": "Voting.getVotersList",
      "offset": [
        1753,
        1767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1702": {
      "fn": "Voting.getVotersList",
      "offset": [
        1753,
        1767
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "SUB"
    },
    "1711": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1712": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1713": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1714": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BA"
    },
    "1717": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1718": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1720": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1721": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1722": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1723": {
      "fn": "Voting.getVotersList",
      "offset": [
        1785,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1725": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1726": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1727": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1728": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1730": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MUL",
      "path": "0"
    },
    "1731": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1733": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1734": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1736": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1737": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1738": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1739": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1740": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1742": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1743": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1744": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1745": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1746": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1747": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1748": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1749": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1750": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1752": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1753": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1755": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1756": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1757": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1758": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1759": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "LT",
      "path": "0"
    },
    "1760": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1761": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "1764": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1765": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1766": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1767": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1768": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1770": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1771": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1773": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1775": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1776": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1779": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MUL",
      "path": "0"
    },
    "1780": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1781": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1783": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1784": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1785": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1787": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1788": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1790": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1791": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1792": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1793": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1795": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1796": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1797": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1798": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1799": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70F"
    },
    "1802": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1803": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1806": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1807": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1808": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1809": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1811": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1812": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1814": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1815": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1816": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DIV",
      "path": "0"
    },
    "1817": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MUL",
      "path": "0"
    },
    "1818": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1820": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1821": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1823": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1824": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1825": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1826": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1827": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1829": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1830": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1831": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1832": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1833": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1834": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1835": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1836": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1837": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1839": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1840": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1841": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1842": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1843": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73B"
    },
    "1846": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1847": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1850": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1851": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1852": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1853": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1854": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1857": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1858": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1859": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1861": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "LT",
      "path": "0"
    },
    "1862": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75D"
    },
    "1865": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1866": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1869": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1870": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1871": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1872": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DIV",
      "path": "0"
    },
    "1873": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MUL",
      "path": "0"
    },
    "1874": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1875": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1876": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1879": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1880": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1881": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1884": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1885": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1886": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1887": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1888": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1889": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1892": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1893": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1895": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1897": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1898": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1899": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1901": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1902": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1903": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1904": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1905": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1907": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1908": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1909": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1911": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1912": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1913": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1914": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "GT",
      "path": "0"
    },
    "1915": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1918": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1919": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1920": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1921": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SUB",
      "path": "0"
    },
    "1922": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1924": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "AND",
      "path": "0"
    },
    "1925": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1926": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1927": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1928": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1929": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "POP",
      "path": "0"
    },
    "1930": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "POP",
      "path": "0"
    },
    "1931": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "POP",
      "path": "0"
    },
    "1932": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "POP",
      "path": "0"
    },
    "1933": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "POP",
      "path": "0"
    },
    "1934": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1935": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1936": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1938": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1939": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1941": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1942": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1943": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1944": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1945": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1946": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1948": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1949": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1951": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1952": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1953": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1954": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1955": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AB"
    },
    "1958": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1959": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "1962": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1963": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1964": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1965": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1967": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1968": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1970": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1971": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1972": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DIV",
      "path": "0"
    },
    "1973": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MUL",
      "path": "0"
    },
    "1974": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1976": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1977": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1979": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1980": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1981": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1982": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1983": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1985": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1986": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1987": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1988": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1989": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1990": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1991": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1992": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1993": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1995": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "1996": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1997": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1998": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1999": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D7"
    },
    "2002": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2003": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2006": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2007": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2008": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2009": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2010": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x824"
    },
    "2013": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2014": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2015": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2017": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "LT",
      "path": "0"
    },
    "2018": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "2021": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2022": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2025": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2026": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2027": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2028": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DIV",
      "path": "0"
    },
    "2029": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MUL",
      "path": "0"
    },
    "2030": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2031": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2032": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2033": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2035": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2036": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2037": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x824"
    },
    "2040": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2041": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2043": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2044": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2045": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2046": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2048": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2051": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2053": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2054": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2055": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2056": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2057": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2058": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2059": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2060": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2061": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2063": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2064": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2065": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2067": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2068": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2069": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2070": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "GT",
      "path": "0"
    },
    "2071": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "2074": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2075": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2076": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2077": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SUB",
      "path": "0"
    },
    "2078": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2080": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "AND",
      "path": "0"
    },
    "2081": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2082": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2083": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2084": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "op": "POP"
    },
    "2088": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2089": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2090": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2091": {
      "op": "POP"
    },
    "2092": {
      "op": "POP"
    },
    "2093": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2095": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2096": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2097": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2098": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2099": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2100": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2102": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2103": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2104": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "AND",
      "path": "0"
    },
    "2105": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2106": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2107": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2109": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2110": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2111": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2112": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2113": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2115": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2116": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2119": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2120": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2121": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DIV",
      "path": "0"
    },
    "2122": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "AND",
      "path": "0"
    },
    "2123": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2124": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2125": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2127": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2128": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2129": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2130": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2131": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2132": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2133": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2134": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2135": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2136": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2137": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2139": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2140": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2141": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2142": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2143": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2144": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "ADD",
      "path": "0"
    },
    "2145": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DC"
    },
    "2148": {
      "fn": "Voting.getVotersList",
      "offset": [
        1778,
        1791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2149": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3549,
        3709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2150": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3637,
        3647
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x0"
    },
    "2152": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3637,
        3647
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2153": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3599,
        3617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2155": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3599,
        3617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3637,
        3647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2162": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3637,
        3647
      ],
      "op": "DIV",
      "path": "0"
    },
    "2163": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3637,
        3647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2165": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3637,
        3647
      ],
      "op": "AND",
      "path": "0"
    },
    "2166": {
      "branch": 22,
      "fn": "Voting.getElectionResult",
      "offset": [
        3636,
        3647
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2167": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C2"
    },
    "2170": {
      "branch": 22,
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2171": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2173": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2182": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2185": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2187": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2188": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "ADD",
      "path": "0"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2194": {
      "op": "DUP3"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "op": "PUSH32",
      "value": "0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2232": {
      "op": "DUP3"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "op": "MSTORE"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "2241": {
      "op": "JUMP"
    },
    "2242": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3628,
        3675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2243": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3692,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x3"
    },
    "2245": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2246": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2247": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2248": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2250": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2251": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2253": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2254": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2256": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2257": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2258": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2259": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2260": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2262": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2263": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2264": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2265": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2266": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2267": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2268": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2269": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2270": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2272": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2273": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2275": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2276": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2277": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2278": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2279": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "LT",
      "path": "0"
    },
    "2280": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2281": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "2284": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2286": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2287": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2288": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2290": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2291": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2293": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2295": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2296": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2297": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2299": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2300": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2301": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2303": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2304": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2305": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2307": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2308": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2310": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2311": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2312": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2313": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2315": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2316": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2317": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2318": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2319": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x917"
    },
    "2322": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2323": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2326": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2327": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2328": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2329": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2331": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2332": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2334": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2335": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2336": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DIV",
      "path": "0"
    },
    "2337": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2338": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2340": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2341": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2343": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2344": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2345": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2346": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2347": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2349": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2350": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2351": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2352": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2353": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2354": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2355": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2356": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2357": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2359": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2360": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2361": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2362": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2363": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x943"
    },
    "2366": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2367": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2370": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2371": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2372": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2373": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2374": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x990"
    },
    "2377": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2378": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2379": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2381": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "LT",
      "path": "0"
    },
    "2382": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x965"
    },
    "2385": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2386": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2389": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2390": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2391": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2392": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DIV",
      "path": "0"
    },
    "2393": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2394": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2395": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2396": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2397": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2399": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2400": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2401": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x990"
    },
    "2404": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2405": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2406": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2407": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2408": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2409": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2410": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2412": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2413": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2415": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2417": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2418": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2419": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2420": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2421": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2422": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2423": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2424": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2425": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2427": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2428": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2429": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2431": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2432": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2433": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2434": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "GT",
      "path": "0"
    },
    "2435": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2438": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2439": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2440": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2441": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SUB",
      "path": "0"
    },
    "2442": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2444": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "AND",
      "path": "0"
    },
    "2445": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2446": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2447": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2448": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2449": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2450": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2451": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2452": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2453": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2454": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2455": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2456": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2458": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2459": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2461": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2462": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2463": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2464": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2465": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A9"
    },
    "2468": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2469": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2472": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2473": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2474": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2475": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2477": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2478": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2480": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2481": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2482": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DIV",
      "path": "0"
    },
    "2483": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2484": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2486": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2487": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2489": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2490": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2491": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2492": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2493": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2495": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2496": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2497": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2498": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2499": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2500": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2501": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2502": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2503": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2505": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2506": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2507": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2508": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2509": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D5"
    },
    "2512": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2513": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2516": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2517": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2518": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2519": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2520": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA22"
    },
    "2523": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2524": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2525": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2527": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "LT",
      "path": "0"
    },
    "2528": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F7"
    },
    "2531": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2532": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2535": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2536": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2537": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2538": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DIV",
      "path": "0"
    },
    "2539": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2540": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2541": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2542": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2543": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2545": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2546": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2547": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA22"
    },
    "2550": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2551": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2552": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2553": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2554": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2555": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2556": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2558": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2559": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2561": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2563": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2564": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2565": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2566": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2567": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2568": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2569": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2570": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2571": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2573": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2574": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2575": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2577": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2578": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2579": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2580": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "GT",
      "path": "0"
    },
    "2581": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA05"
    },
    "2584": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2585": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2586": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2587": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SUB",
      "path": "0"
    },
    "2588": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2590": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "AND",
      "path": "0"
    },
    "2591": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2592": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2593": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2594": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2595": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2596": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2597": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2598": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2599": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "POP",
      "path": "0"
    },
    "2600": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2601": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2602": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2604": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2605": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2607": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2608": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2609": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2610": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2611": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3B"
    },
    "2614": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2615": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2618": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2619": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2620": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2621": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2623": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2624": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2626": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2627": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2628": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DIV",
      "path": "0"
    },
    "2629": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2630": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2632": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2633": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2635": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2636": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2637": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2638": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2639": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2641": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2642": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2643": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2644": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2645": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2646": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2647": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2648": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2649": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2651": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2652": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2653": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2654": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2655": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA67"
    },
    "2658": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2659": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1693"
    },
    "2662": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2663": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2664": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2665": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2666": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB4"
    },
    "2669": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2670": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2671": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2673": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "LT",
      "path": "0"
    },
    "2674": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA89"
    },
    "2677": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2678": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2681": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2682": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2683": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2684": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DIV",
      "path": "0"
    },
    "2685": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MUL",
      "path": "0"
    },
    "2686": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2687": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2688": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2689": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2691": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2692": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2693": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB4"
    },
    "2696": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2697": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2698": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2699": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2700": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2701": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2702": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2704": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2705": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2707": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2709": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2710": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2711": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2712": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2713": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2714": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2715": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2716": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2717": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2719": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2720": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2721": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2723": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2724": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2725": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2726": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "GT",
      "path": "0"
    },
    "2727": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA97"
    },
    "2730": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2731": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2732": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2733": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SUB",
      "path": "0"
    },
    "2734": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2736": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "AND",
      "path": "0"
    },
    "2737": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2738": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2739": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2740": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2741": {
      "op": "POP"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2745": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2746": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2751": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2752": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2753": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2754": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2756": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2757": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2758": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2759": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2760": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2761": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2762": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2763": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2765": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2766": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2767": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2768": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2769": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2771": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "AND",
      "path": "0"
    },
    "2772": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2773": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2774": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2776": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2777": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2778": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2779": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2780": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2781": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2782": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2783": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2785": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2786": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2787": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2788": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2789": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2790": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "ADD",
      "path": "0"
    },
    "2791": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E4"
    },
    "2794": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3685,
        3702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2795": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2796": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "2798": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2799": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2800": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2801": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2803": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2805": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2806": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2808": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2809": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2810": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2811": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2813": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2814": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2815": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1456
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2816": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1456
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2817": {
      "fn": "Voting.createVoter",
      "offset": [
        1457,
        1472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2818": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2819": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "LT",
      "path": "0"
    },
    "2820": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1D"
    },
    "2823": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2824": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2831": {
      "op": "SHL"
    },
    "2832": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2834": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2835": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2837": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2839": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2840": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2842": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2844": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2845": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2846": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2847": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2849": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2850": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2852": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2854": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2855": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2856": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2858": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "MUL",
      "path": "0"
    },
    "2859": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1473
      ],
      "op": "ADD",
      "path": "0"
    },
    "2860": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2862": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "ADD",
      "path": "0"
    },
    "2863": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2865": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2866": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2867": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2868": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2871": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "EXP",
      "path": "0"
    },
    "2872": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2873": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "DIV",
      "path": "0"
    },
    "2874": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2876": {
      "fn": "Voting.createVoter",
      "offset": [
        1450,
        1480
      ],
      "op": "AND",
      "path": "0"
    },
    "2877": {
      "branch": 23,
      "fn": "Voting.createVoter",
      "offset": [
        1449,
        1480
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2878": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB89"
    },
    "2881": {
      "branch": 23,
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2882": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2884": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2893": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2896": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2898": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2899": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "ADD",
      "path": "0"
    },
    "2900": {
      "op": "DUP2"
    },
    "2901": {
      "op": "SWAP1"
    },
    "2902": {
      "op": "MSTORE"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2905": {
      "op": "DUP3"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "op": "MSTORE"
    },
    "2908": {
      "op": "PUSH32",
      "value": "0x566F74657220696420697320616C72656164792072656769737465726564212E"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2943": {
      "op": "DUP3"
    },
    "2944": {
      "op": "ADD"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "2952": {
      "op": "JUMP"
    },
    "2953": {
      "fn": "Voting.createVoter",
      "offset": [
        1441,
        1517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2954": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "2956": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2957": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2958": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2960": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2961": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "2962": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2963": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2964": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2965": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2966": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2967": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2969": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2970": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2971": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "2972": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2973": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2974": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2975": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2976": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2977": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "2978": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2979": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2980": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2981": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2983": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2985": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2986": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "2987": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2988": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2989": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2990": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2992": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2993": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "ADD",
      "path": "0"
    },
    "2994": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2995": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2996": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2997": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2998": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2999": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3000": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3001": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3002": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3003": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3006": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3007": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3008": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3009": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3010": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3011": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3012": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3013": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3014": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3015": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1583
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3016": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3018": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3019": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3020": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MUL",
      "path": "0"
    },
    "3021": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "3054": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3055": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3056": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFC"
    },
    "3059": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3060": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3061": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3062": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3063": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3064": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "3067": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1527,
        1584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3068": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3069": {
      "op": "POP"
    },
    "3070": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3072": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3073": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3074": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3075": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3076": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3078": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3079": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3080": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3081": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3083": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3084": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3085": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3086": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3087": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3088": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1F"
    },
    "3091": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3092": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3094": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3095": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3096": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3097": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3098": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3099": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "3102": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1527,
        1584
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3103": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3104": {
      "op": "POP"
    },
    "3105": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3107": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3108": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3109": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3110": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3112": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3113": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3114": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3115": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3116": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3117": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3119": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3120": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3121": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ADD",
      "path": "0"
    },
    "3122": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3123": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3124": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3125": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3128": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "MUL",
      "path": "0"
    },
    "3129": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3132": {
      "op": "NOT"
    },
    "3133": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3134": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3135": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3136": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3137": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3138": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3139": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "AND",
      "path": "0"
    },
    "3140": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3143": {
      "op": "NOT"
    },
    "3144": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3145": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3146": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "AND",
      "path": "0"
    },
    "3147": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3148": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3149": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3150": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "OR",
      "path": "0"
    },
    "3151": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "OR",
      "path": "0"
    },
    "3152": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3153": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3154": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3156": {
      "fn": "Voting.createVoter",
      "offset": [
        1612,
        1625
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "3157": {
      "fn": "Voting.createVoter",
      "offset": [
        1612,
        1625
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3158": {
      "fn": "Voting.createVoter",
      "offset": [
        1612,
        1629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5F"
    },
    "3161": {
      "fn": "Voting.createVoter",
      "offset": [
        1612,
        1629
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3162": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3163": {
      "fn": "Voting.createVoter",
      "offset": [
        1612,
        1629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164C"
    },
    "3166": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1612,
        1629
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3167": {
      "fn": "Voting.createVoter",
      "offset": [
        1612,
        1629
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3168": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3170": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3171": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3172": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3173": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3175": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3177": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3178": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3180": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3181": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3182": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3183": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1609
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3184": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1629
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3185": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3186": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1629
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3187": {
      "fn": "Voting.createVoter",
      "offset": [
        1594,
        1629
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3188": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 13
    },
    "3189": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A"
    },
    "3222": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3223": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA3"
    },
    "3226": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3227": {
      "fn": "Voting.createVoter",
      "offset": [
        1664,
        1669
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3228": {
      "fn": "Voting.createVoter",
      "offset": [
        1664,
        1669
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3229": {
      "fn": "Voting.createVoter",
      "offset": [
        1671,
        1684
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3230": {
      "fn": "Voting.createVoter",
      "offset": [
        1671,
        1684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3231": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15DB"
    },
    "3234": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1653,
        1685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3235": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3236": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3238": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3239": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3240": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3241": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "SUB",
      "path": "0"
    },
    "3242": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3243": {
      "fn": "Voting.createVoter",
      "offset": [
        1653,
        1685
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3244": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "POP",
      "path": "0"
    },
    "3245": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "POP",
      "path": "0"
    },
    "3246": {
      "fn": "Voting.createVoter",
      "offset": [
        1343,
        1692
      ],
      "op": "POP",
      "path": "0"
    },
    "3247": {
      "fn": "Voting.createVoter",
      "jump": "o",
      "offset": [
        1343,
        1692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3248": {
      "fn": "Voting.vote",
      "offset": [
        2693,
        3539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3249": {
      "fn": "Voting.vote",
      "offset": [
        2821,
        2831
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "3251": {
      "fn": "Voting.vote",
      "offset": [
        2821,
        2831
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "fn": "Voting.vote",
      "offset": [
        2821,
        2831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3258": {
      "fn": "Voting.vote",
      "offset": [
        2821,
        2831
      ],
      "op": "DIV",
      "path": "0"
    },
    "3259": {
      "fn": "Voting.vote",
      "offset": [
        2821,
        2831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3261": {
      "branch": 24,
      "fn": "Voting.vote",
      "offset": [
        2821,
        2831
      ],
      "op": "AND",
      "path": "0"
    },
    "3262": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD09"
    },
    "3265": {
      "branch": 24,
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3266": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3268": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3277": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3280": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3282": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3283": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "ADD",
      "path": "0"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3289": {
      "op": "DUP3"
    },
    "3290": {
      "op": "ADD"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH32",
      "value": "0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "3336": {
      "op": "JUMP"
    },
    "3337": {
      "fn": "Voting.vote",
      "offset": [
        2813,
        2866
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3338": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "3340": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3341": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3342": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3343": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3345": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3347": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3348": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3350": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3351": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3352": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3353": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3355": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3356": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3357": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2890
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3358": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2890
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3359": {
      "fn": "Voting.vote",
      "offset": [
        2891,
        2911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3360": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3361": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "LT",
      "path": "0"
    },
    "3362": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3B"
    },
    "3365": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3366": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3376": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3377": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3379": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3381": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3382": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3384": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3386": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3387": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3388": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3389": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3391": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3392": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3394": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3396": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3397": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3398": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3400": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "MUL",
      "path": "0"
    },
    "3401": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2912
      ],
      "op": "ADD",
      "path": "0"
    },
    "3402": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3404": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "ADD",
      "path": "0"
    },
    "3405": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3407": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3408": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3409": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3410": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3413": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "EXP",
      "path": "0"
    },
    "3414": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3415": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "DIV",
      "path": "0"
    },
    "3416": {
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3418": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2884,
        2919
      ],
      "op": "AND",
      "path": "0"
    },
    "3419": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA6"
    },
    "3422": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3423": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3425": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3434": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3437": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3439": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3440": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "ADD",
      "path": "0"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3446": {
      "op": "DUP3"
    },
    "3447": {
      "op": "ADD"
    },
    "3448": {
      "op": "MSTORE"
    },
    "3449": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3484": {
      "op": "DUP3"
    },
    "3485": {
      "op": "ADD"
    },
    "3486": {
      "op": "MSTORE"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "3493": {
      "op": "JUMP"
    },
    "3494": {
      "fn": "Voting.vote",
      "offset": [
        2876,
        2955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3495": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "3497": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3498": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3499": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3500": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        2990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3502": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3504": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3505": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3507": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3508": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3509": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3510": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        2979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3512": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3513": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3514": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        2979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3515": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        2979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3516": {
      "fn": "Voting.vote",
      "offset": [
        2980,
        3000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3517": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3518": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "LT",
      "path": "0"
    },
    "3519": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD8"
    },
    "3522": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3523": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3533": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3534": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3536": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3538": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3539": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3541": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3543": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3544": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3545": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3547": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3548": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3549": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3550": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3552": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3553": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3554": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3555": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3557": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3559": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3560": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3561": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "MUL",
      "path": "0"
    },
    "3562": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3001
      ],
      "op": "ADD",
      "path": "0"
    },
    "3563": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3009
      ],
      "op": "ADD",
      "path": "0"
    },
    "3564": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3009
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3565": {
      "fn": "Voting.vote",
      "offset": [
        2973,
        3009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3567": {
      "branch": 26,
      "fn": "Voting.vote",
      "offset": [
        2973,
        3009
      ],
      "op": "AND",
      "path": "0"
    },
    "3568": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3B"
    },
    "3571": {
      "branch": 26,
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3572": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3574": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3581": {
      "op": "SHL"
    },
    "3582": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3583": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3586": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3588": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3589": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "ADD",
      "path": "0"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3595": {
      "op": "DUP3"
    },
    "3596": {
      "op": "ADD"
    },
    "3597": {
      "op": "MSTORE"
    },
    "3598": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3633": {
      "op": "DUP3"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "MSTORE"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "3642": {
      "op": "JUMP"
    },
    "3643": {
      "fn": "Voting.vote",
      "offset": [
        2965,
        3039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3644": {
      "fn": "Voting.vote",
      "offset": [
        3049,
        3060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3646": {
      "fn": "Voting.vote",
      "offset": [
        3063,
        3109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE48"
    },
    "3649": {
      "fn": "Voting.vote",
      "offset": [
        3077,
        3084
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3650": {
      "fn": "Voting.vote",
      "offset": [
        3086,
        3099
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3651": {
      "fn": "Voting.vote",
      "offset": [
        3101,
        3108
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3652": {
      "fn": "Voting.vote",
      "offset": [
        3063,
        3076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x667"
    },
    "3655": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3063,
        3109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3656": {
      "fn": "Voting.vote",
      "offset": [
        3063,
        3109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3657": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "3659": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3660": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3661": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3662": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3664": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3666": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3667": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3669": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3670": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3671": {
      "fn": "Voting.vote",
      "offset": [
        3138,
        3152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3672": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3674": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3675": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3676": {
      "fn": "Voting.vote",
      "offset": [
        3049,
        3109
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3677": {
      "fn": "Voting.vote",
      "offset": [
        3049,
        3109
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3137
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3680": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3681": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "LT",
      "path": "0"
    },
    "3682": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7B"
    },
    "3685": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3686": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3696": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3697": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3699": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3701": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3702": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3704": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3706": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3707": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3708": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3710": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3711": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3712": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3713": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3715": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3716": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3717": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3718": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3720": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3722": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3723": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3724": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "MUL",
      "path": "0"
    },
    "3725": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3153
      ],
      "op": "ADD",
      "path": "0"
    },
    "3726": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3160
      ],
      "op": "ADD",
      "path": "0"
    },
    "3727": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3160
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3728": {
      "fn": "Voting.vote",
      "offset": [
        3127,
        3160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3730": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        3127,
        3160
      ],
      "op": "AND",
      "path": "0"
    },
    "3731": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDE"
    },
    "3734": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3735": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3737": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3744": {
      "op": "SHL"
    },
    "3745": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3746": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3749": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3751": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3752": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "ADD",
      "path": "0"
    },
    "3753": {
      "op": "MSTORE"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3758": {
      "op": "DUP3"
    },
    "3759": {
      "op": "ADD"
    },
    "3760": {
      "op": "MSTORE"
    },
    "3761": {
      "op": "PUSH32",
      "value": "0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "3805": {
      "op": "JUMP"
    },
    "3806": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3807": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "3809": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3810": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3811": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3812": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3814": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3816": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3817": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3819": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3820": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3821": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3822": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3824": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3825": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3826": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3827": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3317
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3828": {
      "fn": "Voting.vote",
      "offset": [
        3318,
        3338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3829": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3830": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "LT",
      "path": "0"
    },
    "3831": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF10"
    },
    "3834": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3835": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3842": {
      "op": "SHL"
    },
    "3843": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3845": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3846": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3848": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3850": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3851": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3853": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3855": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3856": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3857": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3858": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3860": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3861": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3863": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3865": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3866": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3867": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3869": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "MUL",
      "path": "0"
    },
    "3870": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3339
      ],
      "op": "ADD",
      "path": "0"
    },
    "3871": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3873": {
      "fn": "Voting.vote",
      "offset": [
        3311,
        3352
      ],
      "op": "ADD",
      "path": "0"
    },
    "3874": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3876": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3877": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3879": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "ADD",
      "path": "0"
    },
    "3880": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF31"
    },
    "3883": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3884": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3885": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F0"
    },
    "3888": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3294,
        3353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3889": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3890": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3892": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3893": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3895": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3896": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3897": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "SUB",
      "path": "0"
    },
    "3898": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "SUB",
      "path": "0"
    },
    "3899": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3900": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3901": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3902": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3904": {
      "fn": "Voting.vote",
      "offset": [
        3294,
        3353
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3905": {
      "fn": "Voting.vote",
      "offset": [
        3284,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3906": {
      "fn": "Voting.vote",
      "offset": [
        3284,
        3354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3907": {
      "fn": "Voting.vote",
      "offset": [
        3284,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3908": {
      "fn": "Voting.vote",
      "offset": [
        3284,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3910": {
      "fn": "Voting.vote",
      "offset": [
        3284,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "3911": {
      "fn": "Voting.vote",
      "offset": [
        3284,
        3354
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3912": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3914": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3916": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3918": {
      "fn": "Voting.vote",
      "offset": [
        3257,
        3263
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3919": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3920": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3921": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3923": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "ADD",
      "path": "0"
    },
    "3924": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3925": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3926": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3927": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3929": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "ADD",
      "path": "0"
    },
    "3930": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3932": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3933": {
      "fn": "Voting.vote",
      "offset": [
        3250,
        3264
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3934": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3935": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3936": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3937": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "LT",
      "path": "0"
    },
    "3938": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7B"
    },
    "3941": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3942": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3952": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3953": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3955": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3957": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3958": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3960": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3962": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3963": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3964": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3965": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3967": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3968": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3970": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3972": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3973": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3974": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3976": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "MUL",
      "path": "0"
    },
    "3977": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3265
      ],
      "op": "ADD",
      "path": "0"
    },
    "3978": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3980": {
      "fn": "Voting.vote",
      "offset": [
        3239,
        3278
      ],
      "op": "ADD",
      "path": "0"
    },
    "3981": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3983": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3984": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3986": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "ADD",
      "path": "0"
    },
    "3987": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9C"
    },
    "3990": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3991": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3992": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F0"
    },
    "3995": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3222,
        3279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3996": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3997": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3999": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4000": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4002": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4003": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4004": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "SUB",
      "path": "0"
    },
    "4005": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "SUB",
      "path": "0"
    },
    "4006": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4007": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4008": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4009": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4011": {
      "fn": "Voting.vote",
      "offset": [
        3222,
        3279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4012": {
      "fn": "Voting.vote",
      "offset": [
        3212,
        3280
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4013": {
      "fn": "Voting.vote",
      "offset": [
        3212,
        3280
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4014": {
      "fn": "Voting.vote",
      "offset": [
        3212,
        3280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4015": {
      "fn": "Voting.vote",
      "offset": [
        3212,
        3280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4017": {
      "fn": "Voting.vote",
      "offset": [
        3212,
        3280
      ],
      "op": "ADD",
      "path": "0"
    },
    "4018": {
      "fn": "Voting.vote",
      "offset": [
        3212,
        3280
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4019": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3212,
        3354
      ],
      "op": "EQ",
      "path": "0"
    },
    "4020": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1034"
    },
    "4023": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4024": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4026": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4035": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4038": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4040": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4041": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "ADD",
      "path": "0"
    },
    "4042": {
      "op": "MSTORE"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4047": {
      "op": "DUP3"
    },
    "4048": {
      "op": "ADD"
    },
    "4049": {
      "op": "MSTORE"
    },
    "4050": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4085": {
      "op": "DUP3"
    },
    "4086": {
      "op": "ADD"
    },
    "4087": {
      "op": "MSTORE"
    },
    "4088": {
      "op": "PUSH32",
      "value": "0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH6",
      "value": "0x3AB2B731BC97"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4135": {
      "op": "SHL"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4143": {
      "op": "ADD"
    },
    "4144": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "4147": {
      "op": "JUMP"
    },
    "4148": {
      "fn": "Voting.vote",
      "offset": [
        3204,
        3429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4149": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "4151": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4152": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4153": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4154": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3456
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4156": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4158": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4159": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4161": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4162": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4163": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4164": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3449
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4166": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4167": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4168": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3449
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4169": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3449
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4170": {
      "fn": "Voting.vote",
      "offset": [
        3450,
        3464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4171": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4172": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "LT",
      "path": "0"
    },
    "4173": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1066"
    },
    "4176": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4177": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4184": {
      "op": "SHL"
    },
    "4185": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4187": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4188": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4190": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4192": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4193": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4195": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4197": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4198": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4199": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4201": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4202": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4203": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4204": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4206": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4207": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4208": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4210": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4212": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4213": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4214": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "MUL",
      "path": "0"
    },
    "4215": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3465
      ],
      "op": "ADD",
      "path": "0"
    },
    "4216": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3475
      ],
      "op": "ADD",
      "path": "0"
    },
    "4217": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4218": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4219": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4220": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1084"
    },
    "4223": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4224": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16CE"
    },
    "4227": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3439,
        3477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4228": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4229": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4230": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4231": {
      "fn": "Voting.vote",
      "offset": [
        3439,
        3477
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4232": {
      "op": "POP"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "fn": "Voting.vote",
      "offset": [
        3527,
        3532
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "4236": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4237": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4238": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4239": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4241": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4243": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4244": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4246": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4247": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4248": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4249": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4251": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4252": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4253": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3494
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4254": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3494
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4255": {
      "fn": "Voting.vote",
      "offset": [
        3495,
        3515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4256": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4257": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "LT",
      "path": "0"
    },
    "4258": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BB"
    },
    "4261": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4262": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4269": {
      "op": "SHL"
    },
    "4270": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4272": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4273": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4275": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4277": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4278": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4280": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4282": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4283": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4284": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4286": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4287": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4288": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4289": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4291": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4292": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4293": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4294": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4296": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4297": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4298": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "MUL",
      "path": "0"
    },
    "4299": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3516
      ],
      "op": "ADD",
      "path": "0"
    },
    "4300": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4302": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3524
      ],
      "op": "ADD",
      "path": "0"
    },
    "4303": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4304": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4307": {
      "op": "NOT"
    },
    "4308": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "AND",
      "path": "0"
    },
    "4309": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4310": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4311": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4312": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4313": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4314": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4315": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "OR",
      "path": "0"
    },
    "4316": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4317": {
      "fn": "Voting.vote",
      "offset": [
        3488,
        3532
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4318": {
      "op": "POP"
    },
    "4319": {
      "op": "POP"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "op": "POP"
    },
    "4323": {
      "fn": "Voting.vote",
      "jump": "o",
      "offset": [
        2693,
        3539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "DUP3"
    },
    "4326": {
      "op": "DUP1"
    },
    "4327": {
      "op": "SLOAD"
    },
    "4328": {
      "op": "PUSH2",
      "value": "0x10F0"
    },
    "4331": {
      "op": "SWAP1"
    },
    "4332": {
      "op": "PUSH2",
      "value": "0x1693"
    },
    "4335": {
      "jump": "i",
      "op": "JUMP"
    },
    "4336": {
      "op": "JUMPDEST"
    },
    "4337": {
      "op": "SWAP1"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4345": {
      "op": "KECCAK256"
    },
    "4346": {
      "op": "SWAP1"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "op": "DIV"
    },
    "4354": {
      "op": "DUP2"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "SWAP3"
    },
    "4357": {
      "op": "DUP3"
    },
    "4358": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4361": {
      "op": "JUMPI"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4364": {
      "op": "DUP6"
    },
    "4365": {
      "op": "SSTORE"
    },
    "4366": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4369": {
      "op": "JUMP"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "DUP3"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4374": {
      "op": "LT"
    },
    "4375": {
      "op": "PUSH2",
      "value": "0x112B"
    },
    "4378": {
      "op": "JUMPI"
    },
    "4379": {
      "op": "DUP1"
    },
    "4380": {
      "op": "MLOAD"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4383": {
      "op": "NOT"
    },
    "4384": {
      "op": "AND"
    },
    "4385": {
      "op": "DUP4"
    },
    "4386": {
      "op": "DUP1"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "OR"
    },
    "4389": {
      "op": "DUP6"
    },
    "4390": {
      "op": "SSTORE"
    },
    "4391": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4394": {
      "op": "JUMP"
    },
    "4395": {
      "op": "JUMPDEST"
    },
    "4396": {
      "op": "DUP3"
    },
    "4397": {
      "op": "DUP1"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "ADD"
    },
    "4402": {
      "op": "DUP6"
    },
    "4403": {
      "op": "SSTORE"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "ISZERO"
    },
    "4406": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4409": {
      "op": "JUMPI"
    },
    "4410": {
      "op": "SWAP2"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "DUP3"
    },
    "4415": {
      "op": "DUP2"
    },
    "4416": {
      "op": "GT"
    },
    "4417": {
      "op": "ISZERO"
    },
    "4418": {
      "op": "PUSH2",
      "value": "0x1158"
    },
    "4421": {
      "op": "JUMPI"
    },
    "4422": {
      "op": "DUP3"
    },
    "4423": {
      "op": "MLOAD"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "SSTORE"
    },
    "4426": {
      "op": "SWAP2"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "SWAP2"
    },
    "4431": {
      "op": "SWAP1"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "op": "SWAP1"
    },
    "4436": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4439": {
      "op": "JUMP"
    },
    "4440": {
      "op": "JUMPDEST"
    },
    "4441": {
      "op": "POP"
    },
    "4442": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4445": {
      "op": "SWAP3"
    },
    "4446": {
      "op": "SWAP2"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "op": "PUSH2",
      "value": "0x1168"
    },
    "4451": {
      "jump": "i",
      "op": "JUMP"
    },
    "4452": {
      "op": "JUMPDEST"
    },
    "4453": {
      "op": "POP"
    },
    "4454": {
      "op": "SWAP1"
    },
    "4455": {
      "jump": "o",
      "op": "JUMP"
    },
    "4456": {
      "op": "JUMPDEST"
    },
    "4457": {
      "op": "JUMPDEST"
    },
    "4458": {
      "op": "DUP1"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "GT"
    },
    "4461": {
      "op": "ISZERO"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x1164"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "DUP2"
    },
    "4469": {
      "op": "SSTORE"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4472": {
      "op": "ADD"
    },
    "4473": {
      "op": "PUSH2",
      "value": "0x1169"
    },
    "4476": {
      "op": "JUMP"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4480": {
      "op": "DUP3"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4483": {
      "op": "DUP4"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "SLT"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4489": {
      "op": "JUMPI"
    },
    "4490": {
      "op": "DUP1"
    },
    "4491": {
      "op": "DUP2"
    },
    "4492": {
      "op": "REVERT"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "DUP2"
    },
    "4495": {
      "op": "CALLDATALOAD"
    },
    "4496": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4505": {
      "op": "DUP1"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "GT"
    },
    "4508": {
      "op": "ISZERO"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x11A8"
    },
    "4512": {
      "op": "JUMPI"
    },
    "4513": {
      "op": "PUSH2",
      "value": "0x11A8"
    },
    "4516": {
      "op": "PUSH2",
      "value": "0x16FF"
    },
    "4519": {
      "jump": "i",
      "op": "JUMP"
    },
    "4520": {
      "op": "JUMPDEST"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4523": {
      "op": "MLOAD"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4526": {
      "op": "DUP4"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4530": {
      "op": "NOT"
    },
    "4531": {
      "op": "SWAP1"
    },
    "4532": {
      "op": "DUP2"
    },
    "4533": {
      "op": "AND"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "AND"
    },
    "4538": {
      "op": "DUP2"
    },
    "4539": {
      "op": "ADD"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "DUP3"
    },
    "4543": {
      "op": "GT"
    },
    "4544": {
      "op": "DUP2"
    },
    "4545": {
      "op": "DUP4"
    },
    "4546": {
      "op": "LT"
    },
    "4547": {
      "op": "OR"
    },
    "4548": {
      "op": "ISZERO"
    },
    "4549": {
      "op": "PUSH2",
      "value": "0x11D0"
    },
    "4552": {
      "op": "JUMPI"
    },
    "4553": {
      "op": "PUSH2",
      "value": "0x11D0"
    },
    "4556": {
      "op": "PUSH2",
      "value": "0x16FF"
    },
    "4559": {
      "jump": "i",
      "op": "JUMP"
    },
    "4560": {
      "op": "JUMPDEST"
    },
    "4561": {
      "op": "DUP2"
    },
    "4562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "DUP4"
    },
    "4566": {
      "op": "DUP2"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "DUP7"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4571": {
      "op": "DUP6"
    },
    "4572": {
      "op": "DUP9"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "GT"
    },
    "4576": {
      "op": "ISZERO"
    },
    "4577": {
      "op": "PUSH2",
      "value": "0x11E8"
    },
    "4580": {
      "op": "JUMPI"
    },
    "4581": {
      "op": "DUP5"
    },
    "4582": {
      "op": "DUP6"
    },
    "4583": {
      "op": "REVERT"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "DUP4"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4588": {
      "op": "DUP8"
    },
    "4589": {
      "op": "ADD"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4592": {
      "op": "DUP4"
    },
    "4593": {
      "op": "ADD"
    },
    "4594": {
      "op": "CALLDATACOPY"
    },
    "4595": {
      "op": "SWAP3"
    },
    "4596": {
      "op": "DUP4"
    },
    "4597": {
      "op": "ADD"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4600": {
      "op": "ADD"
    },
    "4601": {
      "op": "SWAP4"
    },
    "4602": {
      "op": "SWAP1"
    },
    "4603": {
      "op": "SWAP4"
    },
    "4604": {
      "op": "MSTORE"
    },
    "4605": {
      "op": "POP"
    },
    "4606": {
      "op": "SWAP4"
    },
    "4607": {
      "op": "SWAP3"
    },
    "4608": {
      "op": "POP"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "jump": "o",
      "op": "JUMP"
    },
    "4612": {
      "op": "JUMPDEST"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4615": {
      "op": "DUP1"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4620": {
      "op": "DUP5"
    },
    "4621": {
      "op": "DUP7"
    },
    "4622": {
      "op": "SUB"
    },
    "4623": {
      "op": "SLT"
    },
    "4624": {
      "op": "ISZERO"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0x1218"
    },
    "4628": {
      "op": "JUMPI"
    },
    "4629": {
      "op": "DUP3"
    },
    "4630": {
      "op": "DUP4"
    },
    "4631": {
      "op": "REVERT"
    },
    "4632": {
      "op": "JUMPDEST"
    },
    "4633": {
      "op": "DUP4"
    },
    "4634": {
      "op": "CALLDATALOAD"
    },
    "4635": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4644": {
      "op": "DUP1"
    },
    "4645": {
      "op": "DUP3"
    },
    "4646": {
      "op": "GT"
    },
    "4647": {
      "op": "ISZERO"
    },
    "4648": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "4651": {
      "op": "JUMPI"
    },
    "4652": {
      "op": "DUP5"
    },
    "4653": {
      "op": "DUP6"
    },
    "4654": {
      "op": "REVERT"
    },
    "4655": {
      "op": "JUMPDEST"
    },
    "4656": {
      "op": "PUSH2",
      "value": "0x123B"
    },
    "4659": {
      "op": "DUP8"
    },
    "4660": {
      "op": "DUP4"
    },
    "4661": {
      "op": "DUP9"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4666": {
      "jump": "i",
      "op": "JUMP"
    },
    "4667": {
      "op": "JUMPDEST"
    },
    "4668": {
      "op": "SWAP5"
    },
    "4669": {
      "op": "POP"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4672": {
      "op": "DUP7"
    },
    "4673": {
      "op": "ADD"
    },
    "4674": {
      "op": "CALLDATALOAD"
    },
    "4675": {
      "op": "SWAP2"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "op": "DUP1"
    },
    "4678": {
      "op": "DUP3"
    },
    "4679": {
      "op": "GT"
    },
    "4680": {
      "op": "ISZERO"
    },
    "4681": {
      "op": "PUSH2",
      "value": "0x1250"
    },
    "4684": {
      "op": "JUMPI"
    },
    "4685": {
      "op": "DUP4"
    },
    "4686": {
      "op": "DUP5"
    },
    "4687": {
      "op": "REVERT"
    },
    "4688": {
      "op": "JUMPDEST"
    },
    "4689": {
      "op": "PUSH2",
      "value": "0x125C"
    },
    "4692": {
      "op": "DUP8"
    },
    "4693": {
      "op": "DUP4"
    },
    "4694": {
      "op": "DUP9"
    },
    "4695": {
      "op": "ADD"
    },
    "4696": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4699": {
      "jump": "i",
      "op": "JUMP"
    },
    "4700": {
      "op": "JUMPDEST"
    },
    "4701": {
      "op": "SWAP4"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4705": {
      "op": "DUP7"
    },
    "4706": {
      "op": "ADD"
    },
    "4707": {
      "op": "CALLDATALOAD"
    },
    "4708": {
      "op": "SWAP2"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "DUP1"
    },
    "4711": {
      "op": "DUP3"
    },
    "4712": {
      "op": "GT"
    },
    "4713": {
      "op": "ISZERO"
    },
    "4714": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4717": {
      "op": "JUMPI"
    },
    "4718": {
      "op": "DUP3"
    },
    "4719": {
      "op": "DUP4"
    },
    "4720": {
      "op": "REVERT"
    },
    "4721": {
      "op": "JUMPDEST"
    },
    "4722": {
      "op": "POP"
    },
    "4723": {
      "op": "PUSH2",
      "value": "0x127E"
    },
    "4726": {
      "op": "DUP7"
    },
    "4727": {
      "op": "DUP3"
    },
    "4728": {
      "op": "DUP8"
    },
    "4729": {
      "op": "ADD"
    },
    "4730": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4733": {
      "jump": "i",
      "op": "JUMP"
    },
    "4734": {
      "op": "JUMPDEST"
    },
    "4735": {
      "op": "SWAP2"
    },
    "4736": {
      "op": "POP"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "SWAP3"
    },
    "4739": {
      "op": "POP"
    },
    "4740": {
      "op": "SWAP3"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "op": "SWAP3"
    },
    "4743": {
      "jump": "o",
      "op": "JUMP"
    },
    "4744": {
      "op": "JUMPDEST"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4747": {
      "op": "DUP1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4752": {
      "op": "DUP5"
    },
    "4753": {
      "op": "DUP7"
    },
    "4754": {
      "op": "SUB"
    },
    "4755": {
      "op": "SLT"
    },
    "4756": {
      "op": "ISZERO"
    },
    "4757": {
      "op": "PUSH2",
      "value": "0x129C"
    },
    "4760": {
      "op": "JUMPI"
    },
    "4761": {
      "op": "DUP3"
    },
    "4762": {
      "op": "DUP4"
    },
    "4763": {
      "op": "REVERT"
    },
    "4764": {
      "op": "JUMPDEST"
    },
    "4765": {
      "op": "DUP4"
    },
    "4766": {
      "op": "CALLDATALOAD"
    },
    "4767": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4776": {
      "op": "DUP1"
    },
    "4777": {
      "op": "DUP3"
    },
    "4778": {
      "op": "GT"
    },
    "4779": {
      "op": "ISZERO"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "4783": {
      "op": "JUMPI"
    },
    "4784": {
      "op": "DUP5"
    },
    "4785": {
      "op": "DUP6"
    },
    "4786": {
      "op": "REVERT"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4791": {
      "op": "DUP8"
    },
    "4792": {
      "op": "DUP4"
    },
    "4793": {
      "op": "DUP9"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4798": {
      "jump": "i",
      "op": "JUMP"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "SWAP5"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4804": {
      "op": "DUP7"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "CALLDATALOAD"
    },
    "4807": {
      "op": "SWAP4"
    },
    "4808": {
      "op": "POP"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4811": {
      "op": "DUP7"
    },
    "4812": {
      "op": "ADD"
    },
    "4813": {
      "op": "CALLDATALOAD"
    },
    "4814": {
      "op": "SWAP2"
    },
    "4815": {
      "op": "POP"
    },
    "4816": {
      "op": "DUP1"
    },
    "4817": {
      "op": "DUP3"
    },
    "4818": {
      "op": "GT"
    },
    "4819": {
      "op": "ISZERO"
    },
    "4820": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4823": {
      "op": "JUMPI"
    },
    "4824": {
      "op": "DUP3"
    },
    "4825": {
      "op": "DUP4"
    },
    "4826": {
      "op": "REVERT"
    },
    "4827": {
      "op": "JUMPDEST"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4832": {
      "op": "DUP3"
    },
    "4833": {
      "op": "DUP5"
    },
    "4834": {
      "op": "SUB"
    },
    "4835": {
      "op": "SLT"
    },
    "4836": {
      "op": "ISZERO"
    },
    "4837": {
      "op": "PUSH2",
      "value": "0x12EC"
    },
    "4840": {
      "op": "JUMPI"
    },
    "4841": {
      "op": "DUP1"
    },
    "4842": {
      "op": "DUP2"
    },
    "4843": {
      "op": "REVERT"
    },
    "4844": {
      "op": "JUMPDEST"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "CALLDATALOAD"
    },
    "4847": {
      "op": "SWAP2"
    },
    "4848": {
      "op": "SWAP1"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "jump": "o",
      "op": "JUMP"
    },
    "4851": {
      "op": "JUMPDEST"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4854": {
      "op": "DUP1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4857": {
      "op": "DUP1"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4860": {
      "op": "DUP6"
    },
    "4861": {
      "op": "DUP8"
    },
    "4862": {
      "op": "SUB"
    },
    "4863": {
      "op": "SLT"
    },
    "4864": {
      "op": "ISZERO"
    },
    "4865": {
      "op": "PUSH2",
      "value": "0x1308"
    },
    "4868": {
      "op": "JUMPI"
    },
    "4869": {
      "op": "DUP1"
    },
    "4870": {
      "op": "DUP2"
    },
    "4871": {
      "op": "REVERT"
    },
    "4872": {
      "op": "JUMPDEST"
    },
    "4873": {
      "op": "DUP5"
    },
    "4874": {
      "op": "CALLDATALOAD"
    },
    "4875": {
      "op": "SWAP4"
    },
    "4876": {
      "op": "POP"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4879": {
      "op": "DUP6"
    },
    "4880": {
      "op": "ADD"
    },
    "4881": {
      "op": "CALLDATALOAD"
    },
    "4882": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4891": {
      "op": "DUP1"
    },
    "4892": {
      "op": "DUP3"
    },
    "4893": {
      "op": "GT"
    },
    "4894": {
      "op": "ISZERO"
    },
    "4895": {
      "op": "PUSH2",
      "value": "0x1326"
    },
    "4898": {
      "op": "JUMPI"
    },
    "4899": {
      "op": "DUP3"
    },
    "4900": {
      "op": "DUP4"
    },
    "4901": {
      "op": "REVERT"
    },
    "4902": {
      "op": "JUMPDEST"
    },
    "4903": {
      "op": "PUSH2",
      "value": "0x1332"
    },
    "4906": {
      "op": "DUP9"
    },
    "4907": {
      "op": "DUP4"
    },
    "4908": {
      "op": "DUP10"
    },
    "4909": {
      "op": "ADD"
    },
    "4910": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4913": {
      "jump": "i",
      "op": "JUMP"
    },
    "4914": {
      "op": "JUMPDEST"
    },
    "4915": {
      "op": "SWAP5"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4919": {
      "op": "DUP8"
    },
    "4920": {
      "op": "ADD"
    },
    "4921": {
      "op": "CALLDATALOAD"
    },
    "4922": {
      "op": "SWAP2"
    },
    "4923": {
      "op": "POP"
    },
    "4924": {
      "op": "DUP1"
    },
    "4925": {
      "op": "DUP3"
    },
    "4926": {
      "op": "GT"
    },
    "4927": {
      "op": "ISZERO"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0x1347"
    },
    "4931": {
      "op": "JUMPI"
    },
    "4932": {
      "op": "DUP3"
    },
    "4933": {
      "op": "DUP4"
    },
    "4934": {
      "op": "REVERT"
    },
    "4935": {
      "op": "JUMPDEST"
    },
    "4936": {
      "op": "PUSH2",
      "value": "0x1353"
    },
    "4939": {
      "op": "DUP9"
    },
    "4940": {
      "op": "DUP4"
    },
    "4941": {
      "op": "DUP10"
    },
    "4942": {
      "op": "ADD"
    },
    "4943": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4946": {
      "jump": "i",
      "op": "JUMP"
    },
    "4947": {
      "op": "JUMPDEST"
    },
    "4948": {
      "op": "SWAP4"
    },
    "4949": {
      "op": "POP"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4952": {
      "op": "DUP8"
    },
    "4953": {
      "op": "ADD"
    },
    "4954": {
      "op": "CALLDATALOAD"
    },
    "4955": {
      "op": "SWAP2"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "op": "DUP1"
    },
    "4958": {
      "op": "DUP3"
    },
    "4959": {
      "op": "GT"
    },
    "4960": {
      "op": "ISZERO"
    },
    "4961": {
      "op": "PUSH2",
      "value": "0x1368"
    },
    "4964": {
      "op": "JUMPI"
    },
    "4965": {
      "op": "DUP3"
    },
    "4966": {
      "op": "DUP4"
    },
    "4967": {
      "op": "REVERT"
    },
    "4968": {
      "op": "JUMPDEST"
    },
    "4969": {
      "op": "POP"
    },
    "4970": {
      "op": "PUSH2",
      "value": "0x1375"
    },
    "4973": {
      "op": "DUP8"
    },
    "4974": {
      "op": "DUP3"
    },
    "4975": {
      "op": "DUP9"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4980": {
      "jump": "i",
      "op": "JUMP"
    },
    "4981": {
      "op": "JUMPDEST"
    },
    "4982": {
      "op": "SWAP2"
    },
    "4983": {
      "op": "POP"
    },
    "4984": {
      "op": "POP"
    },
    "4985": {
      "op": "SWAP3"
    },
    "4986": {
      "op": "SWAP6"
    },
    "4987": {
      "op": "SWAP2"
    },
    "4988": {
      "op": "SWAP5"
    },
    "4989": {
      "op": "POP"
    },
    "4990": {
      "op": "SWAP3"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "jump": "o",
      "op": "JUMP"
    },
    "4993": {
      "op": "JUMPDEST"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4996": {
      "op": "DUP2"
    },
    "4997": {
      "op": "MLOAD"
    },
    "4998": {
      "op": "DUP1"
    },
    "4999": {
      "op": "DUP5"
    },
    "5000": {
      "op": "MSTORE"
    },
    "5001": {
      "op": "PUSH2",
      "value": "0x1399"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5007": {
      "op": "DUP7"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5011": {
      "op": "DUP7"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5016": {
      "jump": "i",
      "op": "JUMP"
    },
    "5017": {
      "op": "JUMPDEST"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5020": {
      "op": "ADD"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5023": {
      "op": "NOT"
    },
    "5024": {
      "op": "AND"
    },
    "5025": {
      "op": "SWAP3"
    },
    "5026": {
      "op": "SWAP1"
    },
    "5027": {
      "op": "SWAP3"
    },
    "5028": {
      "op": "ADD"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5031": {
      "op": "ADD"
    },
    "5032": {
      "op": "SWAP3"
    },
    "5033": {
      "op": "SWAP2"
    },
    "5034": {
      "op": "POP"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "jump": "o",
      "op": "JUMP"
    },
    "5037": {
      "op": "JUMPDEST"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5040": {
      "op": "DUP5"
    },
    "5041": {
      "op": "MLOAD"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5045": {
      "op": "DUP2"
    },
    "5046": {
      "op": "DUP5"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5049": {
      "op": "DUP10"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5054": {
      "jump": "i",
      "op": "JUMP"
    },
    "5055": {
      "op": "JUMPDEST"
    },
    "5056": {
      "op": "DUP5"
    },
    "5057": {
      "op": "MLOAD"
    },
    "5058": {
      "op": "SWAP1"
    },
    "5059": {
      "op": "DUP4"
    },
    "5060": {
      "op": "ADD"
    },
    "5061": {
      "op": "SWAP1"
    },
    "5062": {
      "op": "PUSH2",
      "value": "0x13D3"
    },
    "5065": {
      "op": "DUP2"
    },
    "5066": {
      "op": "DUP4"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5069": {
      "op": "DUP10"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5074": {
      "jump": "i",
      "op": "JUMP"
    },
    "5075": {
      "op": "JUMPDEST"
    },
    "5076": {
      "op": "DUP5"
    },
    "5077": {
      "op": "MLOAD"
    },
    "5078": {
      "op": "SWAP2"
    },
    "5079": {
      "op": "ADD"
    },
    "5080": {
      "op": "SWAP1"
    },
    "5081": {
      "op": "PUSH2",
      "value": "0x13E6"
    },
    "5084": {
      "op": "DUP2"
    },
    "5085": {
      "op": "DUP4"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5088": {
      "op": "DUP9"
    },
    "5089": {
      "op": "ADD"
    },
    "5090": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5093": {
      "jump": "i",
      "op": "JUMP"
    },
    "5094": {
      "op": "JUMPDEST"
    },
    "5095": {
      "op": "ADD"
    },
    "5096": {
      "op": "SWAP6"
    },
    "5097": {
      "op": "SWAP5"
    },
    "5098": {
      "op": "POP"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "op": "POP"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "jump": "o",
      "op": "JUMP"
    },
    "5104": {
      "op": "JUMPDEST"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5107": {
      "op": "DUP1"
    },
    "5108": {
      "op": "DUP4"
    },
    "5109": {
      "op": "SLOAD"
    },
    "5110": {
      "op": "DUP3"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5113": {
      "op": "DUP3"
    },
    "5114": {
      "op": "DUP2"
    },
    "5115": {
      "op": "SHR"
    },
    "5116": {
      "op": "SWAP2"
    },
    "5117": {
      "op": "POP"
    },
    "5118": {
      "op": "DUP1"
    },
    "5119": {
      "op": "DUP4"
    },
    "5120": {
      "op": "AND"
    },
    "5121": {
      "op": "DUP1"
    },
    "5122": {
      "op": "PUSH2",
      "value": "0x140C"
    },
    "5125": {
      "op": "JUMPI"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5128": {
      "op": "DUP4"
    },
    "5129": {
      "op": "AND"
    },
    "5130": {
      "op": "SWAP3"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "op": "JUMPDEST"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5135": {
      "op": "DUP1"
    },
    "5136": {
      "op": "DUP5"
    },
    "5137": {
      "op": "LT"
    },
    "5138": {
      "op": "DUP3"
    },
    "5139": {
      "op": "EQ"
    },
    "5140": {
      "op": "ISZERO"
    },
    "5141": {
      "op": "PUSH2",
      "value": "0x142C"
    },
    "5144": {
      "op": "JUMPI"
    },
    "5145": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5152": {
      "op": "SHL"
    },
    "5153": {
      "op": "DUP8"
    },
    "5154": {
      "op": "MSTORE"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5159": {
      "op": "MSTORE"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5162": {
      "op": "DUP8"
    },
    "5163": {
      "op": "REVERT"
    },
    "5164": {
      "op": "JUMPDEST"
    },
    "5165": {
      "op": "DUP2"
    },
    "5166": {
      "op": "DUP1"
    },
    "5167": {
      "op": "ISZERO"
    },
    "5168": {
      "op": "PUSH2",
      "value": "0x1440"
    },
    "5171": {
      "op": "JUMPI"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5174": {
      "op": "DUP2"
    },
    "5175": {
      "op": "EQ"
    },
    "5176": {
      "op": "PUSH2",
      "value": "0x1451"
    },
    "5179": {
      "op": "JUMPI"
    },
    "5180": {
      "op": "PUSH2",
      "value": "0x147D"
    },
    "5183": {
      "op": "JUMP"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5187": {
      "op": "NOT"
    },
    "5188": {
      "op": "DUP7"
    },
    "5189": {
      "op": "AND"
    },
    "5190": {
      "op": "DUP10"
    },
    "5191": {
      "op": "MSTORE"
    },
    "5192": {
      "op": "DUP5"
    },
    "5193": {
      "op": "DUP10"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "SWAP7"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "op": "PUSH2",
      "value": "0x147D"
    },
    "5200": {
      "op": "JUMP"
    },
    "5201": {
      "op": "JUMPDEST"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5204": {
      "op": "DUP11"
    },
    "5205": {
      "op": "DUP2"
    },
    "5206": {
      "op": "MSTORE"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5209": {
      "op": "SWAP1"
    },
    "5210": {
      "op": "KECCAK256"
    },
    "5211": {
      "op": "DUP9"
    },
    "5212": {
      "op": "JUMPDEST"
    },
    "5213": {
      "op": "DUP7"
    },
    "5214": {
      "op": "DUP2"
    },
    "5215": {
      "op": "LT"
    },
    "5216": {
      "op": "ISZERO"
    },
    "5217": {
      "op": "PUSH2",
      "value": "0x1475"
    },
    "5220": {
      "op": "JUMPI"
    },
    "5221": {
      "op": "DUP2"
    },
    "5222": {
      "op": "SLOAD"
    },
    "5223": {
      "op": "DUP12"
    },
    "5224": {
      "op": "DUP3"
    },
    "5225": {
      "op": "ADD"
    },
    "5226": {
      "op": "MSTORE"
    },
    "5227": {
      "op": "SWAP1"
    },
    "5228": {
      "op": "DUP6"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "SWAP1"
    },
    "5231": {
      "op": "DUP4"
    },
    "5232": {
      "op": "ADD"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x145C"
    },
    "5236": {
      "op": "JUMP"
    },
    "5237": {
      "op": "JUMPDEST"
    },
    "5238": {
      "op": "POP"
    },
    "5239": {
      "op": "POP"
    },
    "5240": {
      "op": "DUP5"
    },
    "5241": {
      "op": "DUP10"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "SWAP7"
    },
    "5244": {
      "op": "POP"
    },
    "5245": {
      "op": "JUMPDEST"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "op": "SWAP5"
    },
    "5248": {
      "op": "SWAP9"
    },
    "5249": {
      "op": "SWAP8"
    },
    "5250": {
      "op": "POP"
    },
    "5251": {
      "op": "POP"
    },
    "5252": {
      "op": "POP"
    },
    "5253": {
      "op": "POP"
    },
    "5254": {
      "op": "POP"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "op": "POP"
    },
    "5257": {
      "op": "POP"
    },
    "5258": {
      "jump": "o",
      "op": "JUMP"
    },
    "5259": {
      "op": "JUMPDEST"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5264": {
      "op": "DUP1"
    },
    "5265": {
      "op": "DUP4"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "op": "DUP2"
    },
    "5268": {
      "op": "DUP5"
    },
    "5269": {
      "op": "MSTORE"
    },
    "5270": {
      "op": "DUP1"
    },
    "5271": {
      "op": "DUP6"
    },
    "5272": {
      "op": "MLOAD"
    },
    "5273": {
      "op": "DUP1"
    },
    "5274": {
      "op": "DUP4"
    },
    "5275": {
      "op": "MSTORE"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5278": {
      "op": "SWAP3"
    },
    "5279": {
      "op": "POP"
    },
    "5280": {
      "op": "DUP3"
    },
    "5281": {
      "op": "DUP7"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "op": "SWAP2"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "op": "DUP3"
    },
    "5286": {
      "op": "DUP2"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5289": {
      "op": "SHL"
    },
    "5290": {
      "op": "DUP8"
    },
    "5291": {
      "op": "ADD"
    },
    "5292": {
      "op": "ADD"
    },
    "5293": {
      "op": "DUP5"
    },
    "5294": {
      "op": "DUP9"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "op": "DUP7"
    },
    "5297": {
      "op": "JUMPDEST"
    },
    "5298": {
      "op": "DUP4"
    },
    "5299": {
      "op": "DUP2"
    },
    "5300": {
      "op": "LT"
    },
    "5301": {
      "op": "ISZERO"
    },
    "5302": {
      "op": "PUSH2",
      "value": "0x1533"
    },
    "5305": {
      "op": "JUMPI"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5308": {
      "op": "NOT"
    },
    "5309": {
      "op": "DUP10"
    },
    "5310": {
      "op": "DUP5"
    },
    "5311": {
      "op": "SUB"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "DUP6"
    },
    "5314": {
      "op": "MSTORE"
    },
    "5315": {
      "op": "DUP2"
    },
    "5316": {
      "op": "MLOAD"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5319": {
      "op": "DUP2"
    },
    "5320": {
      "op": "MLOAD"
    },
    "5321": {
      "op": "DUP2"
    },
    "5322": {
      "op": "DUP7"
    },
    "5323": {
      "op": "MSTORE"
    },
    "5324": {
      "op": "PUSH2",
      "value": "0x14D7"
    },
    "5327": {
      "op": "DUP3"
    },
    "5328": {
      "op": "DUP8"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "DUP3"
    },
    "5331": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5334": {
      "jump": "i",
      "op": "JUMP"
    },
    "5335": {
      "op": "JUMPDEST"
    },
    "5336": {
      "op": "SWAP2"
    },
    "5337": {
      "op": "POP"
    },
    "5338": {
      "op": "POP"
    },
    "5339": {
      "op": "DUP9"
    },
    "5340": {
      "op": "DUP3"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "MLOAD"
    },
    "5343": {
      "op": "DUP6"
    },
    "5344": {
      "op": "DUP3"
    },
    "5345": {
      "op": "SUB"
    },
    "5346": {
      "op": "DUP11"
    },
    "5347": {
      "op": "DUP8"
    },
    "5348": {
      "op": "ADD"
    },
    "5349": {
      "op": "MSTORE"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x14EF"
    },
    "5353": {
      "op": "DUP3"
    },
    "5354": {
      "op": "DUP3"
    },
    "5355": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5358": {
      "jump": "i",
      "op": "JUMP"
    },
    "5359": {
      "op": "JUMPDEST"
    },
    "5360": {
      "op": "SWAP2"
    },
    "5361": {
      "op": "POP"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "op": "DUP8"
    },
    "5364": {
      "op": "DUP3"
    },
    "5365": {
      "op": "ADD"
    },
    "5366": {
      "op": "MLOAD"
    },
    "5367": {
      "op": "DUP6"
    },
    "5368": {
      "op": "DUP3"
    },
    "5369": {
      "op": "SUB"
    },
    "5370": {
      "op": "DUP10"
    },
    "5371": {
      "op": "DUP8"
    },
    "5372": {
      "op": "ADD"
    },
    "5373": {
      "op": "MSTORE"
    },
    "5374": {
      "op": "PUSH2",
      "value": "0x1507"
    },
    "5377": {
      "op": "DUP3"
    },
    "5378": {
      "op": "DUP3"
    },
    "5379": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5382": {
      "jump": "i",
      "op": "JUMP"
    },
    "5383": {
      "op": "JUMPDEST"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5386": {
      "op": "DUP5"
    },
    "5387": {
      "op": "DUP2"
    },
    "5388": {
      "op": "ADD"
    },
    "5389": {
      "op": "MLOAD"
    },
    "5390": {
      "op": "SWAP1"
    },
    "5391": {
      "op": "DUP9"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "MSTORE"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5396": {
      "op": "SWAP4"
    },
    "5397": {
      "op": "DUP5"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "MLOAD"
    },
    "5400": {
      "op": "ISZERO"
    },
    "5401": {
      "op": "ISZERO"
    },
    "5402": {
      "op": "SWAP4"
    },
    "5403": {
      "op": "SWAP1"
    },
    "5404": {
      "op": "SWAP7"
    },
    "5405": {
      "op": "ADD"
    },
    "5406": {
      "op": "SWAP3"
    },
    "5407": {
      "op": "SWAP1"
    },
    "5408": {
      "op": "SWAP3"
    },
    "5409": {
      "op": "MSTORE"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "op": "POP"
    },
    "5412": {
      "op": "SWAP4"
    },
    "5413": {
      "op": "DUP7"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "SWAP4"
    },
    "5416": {
      "op": "SWAP1"
    },
    "5417": {
      "op": "DUP7"
    },
    "5418": {
      "op": "ADD"
    },
    "5419": {
      "op": "SWAP1"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5422": {
      "op": "ADD"
    },
    "5423": {
      "op": "PUSH2",
      "value": "0x14B1"
    },
    "5426": {
      "op": "JUMP"
    },
    "5427": {
      "op": "JUMPDEST"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "SWAP1"
    },
    "5430": {
      "op": "SWAP9"
    },
    "5431": {
      "op": "SWAP8"
    },
    "5432": {
      "op": "POP"
    },
    "5433": {
      "op": "POP"
    },
    "5434": {
      "op": "POP"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "POP"
    },
    "5439": {
      "op": "POP"
    },
    "5440": {
      "jump": "o",
      "op": "JUMP"
    },
    "5441": {
      "op": "JUMPDEST"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5446": {
      "op": "DUP1"
    },
    "5447": {
      "op": "DUP4"
    },
    "5448": {
      "op": "ADD"
    },
    "5449": {
      "op": "DUP2"
    },
    "5450": {
      "op": "DUP5"
    },
    "5451": {
      "op": "MSTORE"
    },
    "5452": {
      "op": "DUP1"
    },
    "5453": {
      "op": "DUP6"
    },
    "5454": {
      "op": "MLOAD"
    },
    "5455": {
      "op": "DUP1"
    },
    "5456": {
      "op": "DUP4"
    },
    "5457": {
      "op": "MSTORE"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5460": {
      "op": "SWAP3"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "op": "DUP3"
    },
    "5463": {
      "op": "DUP7"
    },
    "5464": {
      "op": "ADD"
    },
    "5465": {
      "op": "SWAP2"
    },
    "5466": {
      "op": "POP"
    },
    "5467": {
      "op": "DUP3"
    },
    "5468": {
      "op": "DUP2"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5471": {
      "op": "SHL"
    },
    "5472": {
      "op": "DUP8"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "ADD"
    },
    "5475": {
      "op": "DUP5"
    },
    "5476": {
      "op": "DUP9"
    },
    "5477": {
      "op": "ADD"
    },
    "5478": {
      "op": "DUP7"
    },
    "5479": {
      "op": "JUMPDEST"
    },
    "5480": {
      "op": "DUP4"
    },
    "5481": {
      "op": "DUP2"
    },
    "5482": {
      "op": "LT"
    },
    "5483": {
      "op": "ISZERO"
    },
    "5484": {
      "op": "PUSH2",
      "value": "0x1533"
    },
    "5487": {
      "op": "JUMPI"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5490": {
      "op": "NOT"
    },
    "5491": {
      "op": "DUP10"
    },
    "5492": {
      "op": "DUP5"
    },
    "5493": {
      "op": "SUB"
    },
    "5494": {
      "op": "ADD"
    },
    "5495": {
      "op": "DUP6"
    },
    "5496": {
      "op": "MSTORE"
    },
    "5497": {
      "op": "DUP2"
    },
    "5498": {
      "op": "MLOAD"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5501": {
      "op": "DUP2"
    },
    "5502": {
      "op": "MLOAD"
    },
    "5503": {
      "op": "DUP2"
    },
    "5504": {
      "op": "DUP7"
    },
    "5505": {
      "op": "MSTORE"
    },
    "5506": {
      "op": "PUSH2",
      "value": "0x158D"
    },
    "5509": {
      "op": "DUP3"
    },
    "5510": {
      "op": "DUP8"
    },
    "5511": {
      "op": "ADD"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5516": {
      "jump": "i",
      "op": "JUMP"
    },
    "5517": {
      "op": "JUMPDEST"
    },
    "5518": {
      "op": "SWAP2"
    },
    "5519": {
      "op": "POP"
    },
    "5520": {
      "op": "POP"
    },
    "5521": {
      "op": "DUP9"
    },
    "5522": {
      "op": "DUP3"
    },
    "5523": {
      "op": "ADD"
    },
    "5524": {
      "op": "MLOAD"
    },
    "5525": {
      "op": "DUP10"
    },
    "5526": {
      "op": "DUP7"
    },
    "5527": {
      "op": "ADD"
    },
    "5528": {
      "op": "MSTORE"
    },
    "5529": {
      "op": "DUP8"
    },
    "5530": {
      "op": "DUP3"
    },
    "5531": {
      "op": "ADD"
    },
    "5532": {
      "op": "MLOAD"
    },
    "5533": {
      "op": "DUP6"
    },
    "5534": {
      "op": "DUP3"
    },
    "5535": {
      "op": "SUB"
    },
    "5536": {
      "op": "DUP10"
    },
    "5537": {
      "op": "DUP8"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x15AD"
    },
    "5543": {
      "op": "DUP3"
    },
    "5544": {
      "op": "DUP3"
    },
    "5545": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5548": {
      "jump": "i",
      "op": "JUMP"
    },
    "5549": {
      "op": "JUMPDEST"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5552": {
      "op": "DUP5"
    },
    "5553": {
      "op": "DUP2"
    },
    "5554": {
      "op": "ADD"
    },
    "5555": {
      "op": "MLOAD"
    },
    "5556": {
      "op": "ISZERO"
    },
    "5557": {
      "op": "ISZERO"
    },
    "5558": {
      "op": "SWAP1"
    },
    "5559": {
      "op": "DUP9"
    },
    "5560": {
      "op": "ADD"
    },
    "5561": {
      "op": "MSTORE"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5564": {
      "op": "SWAP4"
    },
    "5565": {
      "op": "DUP5"
    },
    "5566": {
      "op": "ADD"
    },
    "5567": {
      "op": "MLOAD"
    },
    "5568": {
      "op": "ISZERO"
    },
    "5569": {
      "op": "ISZERO"
    },
    "5570": {
      "op": "SWAP4"
    },
    "5571": {
      "op": "SWAP1"
    },
    "5572": {
      "op": "SWAP7"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "SWAP3"
    },
    "5575": {
      "op": "SWAP1"
    },
    "5576": {
      "op": "SWAP3"
    },
    "5577": {
      "op": "MSTORE"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "SWAP4"
    },
    "5581": {
      "op": "DUP7"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "op": "SWAP4"
    },
    "5584": {
      "op": "SWAP1"
    },
    "5585": {
      "op": "DUP7"
    },
    "5586": {
      "op": "ADD"
    },
    "5587": {
      "op": "SWAP1"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5590": {
      "op": "ADD"
    },
    "5591": {
      "op": "PUSH2",
      "value": "0x1567"
    },
    "5594": {
      "op": "JUMP"
    },
    "5595": {
      "op": "JUMPDEST"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5598": {
      "op": "DUP2"
    },
    "5599": {
      "op": "MSTORE"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x15EE"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5607": {
      "op": "DUP4"
    },
    "5608": {
      "op": "ADD"
    },
    "5609": {
      "op": "DUP6"
    },
    "5610": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5613": {
      "jump": "i",
      "op": "JUMP"
    },
    "5614": {
      "op": "JUMPDEST"
    },
    "5615": {
      "op": "DUP3"
    },
    "5616": {
      "op": "DUP2"
    },
    "5617": {
      "op": "SUB"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5620": {
      "op": "DUP5"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "MSTORE"
    },
    "5623": {
      "op": "PUSH2",
      "value": "0x1600"
    },
    "5626": {
      "op": "DUP2"
    },
    "5627": {
      "op": "DUP6"
    },
    "5628": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5631": {
      "jump": "i",
      "op": "JUMP"
    },
    "5632": {
      "op": "JUMPDEST"
    },
    "5633": {
      "op": "SWAP6"
    },
    "5634": {
      "op": "SWAP5"
    },
    "5635": {
      "op": "POP"
    },
    "5636": {
      "op": "POP"
    },
    "5637": {
      "op": "POP"
    },
    "5638": {
      "op": "POP"
    },
    "5639": {
      "op": "POP"
    },
    "5640": {
      "jump": "o",
      "op": "JUMP"
    },
    "5641": {
      "op": "JUMPDEST"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5644": {
      "op": "DUP2"
    },
    "5645": {
      "op": "MSTORE"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5648": {
      "op": "PUSH2",
      "value": "0x161C"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5653": {
      "op": "DUP4"
    },
    "5654": {
      "op": "ADD"
    },
    "5655": {
      "op": "DUP7"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5659": {
      "jump": "i",
      "op": "JUMP"
    },
    "5660": {
      "op": "JUMPDEST"
    },
    "5661": {
      "op": "DUP3"
    },
    "5662": {
      "op": "DUP2"
    },
    "5663": {
      "op": "SUB"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5666": {
      "op": "DUP5"
    },
    "5667": {
      "op": "ADD"
    },
    "5668": {
      "op": "MSTORE"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0x162E"
    },
    "5672": {
      "op": "DUP2"
    },
    "5673": {
      "op": "DUP7"
    },
    "5674": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5677": {
      "jump": "i",
      "op": "JUMP"
    },
    "5678": {
      "op": "JUMPDEST"
    },
    "5679": {
      "op": "SWAP1"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "op": "DUP3"
    },
    "5682": {
      "op": "DUP2"
    },
    "5683": {
      "op": "SUB"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5686": {
      "op": "DUP5"
    },
    "5687": {
      "op": "ADD"
    },
    "5688": {
      "op": "MSTORE"
    },
    "5689": {
      "op": "PUSH2",
      "value": "0x1642"
    },
    "5692": {
      "op": "DUP2"
    },
    "5693": {
      "op": "DUP6"
    },
    "5694": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "5697": {
      "jump": "i",
      "op": "JUMP"
    },
    "5698": {
      "op": "JUMPDEST"
    },
    "5699": {
      "op": "SWAP7"
    },
    "5700": {
      "op": "SWAP6"
    },
    "5701": {
      "op": "POP"
    },
    "5702": {
      "op": "POP"
    },
    "5703": {
      "op": "POP"
    },
    "5704": {
      "op": "POP"
    },
    "5705": {
      "op": "POP"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "jump": "o",
      "op": "JUMP"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5711": {
      "op": "DUP3"
    },
    "5712": {
      "op": "DUP3"
    },
    "5713": {
      "op": "LT"
    },
    "5714": {
      "op": "ISZERO"
    },
    "5715": {
      "op": "PUSH2",
      "value": "0x165E"
    },
    "5718": {
      "op": "JUMPI"
    },
    "5719": {
      "op": "PUSH2",
      "value": "0x165E"
    },
    "5722": {
      "op": "PUSH2",
      "value": "0x16E9"
    },
    "5725": {
      "jump": "i",
      "op": "JUMP"
    },
    "5726": {
      "op": "JUMPDEST"
    },
    "5727": {
      "op": "POP"
    },
    "5728": {
      "op": "SUB"
    },
    "5729": {
      "op": "SWAP1"
    },
    "5730": {
      "jump": "o",
      "op": "JUMP"
    },
    "5731": {
      "op": "JUMPDEST"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5734": {
      "op": "JUMPDEST"
    },
    "5735": {
      "op": "DUP4"
    },
    "5736": {
      "op": "DUP2"
    },
    "5737": {
      "op": "LT"
    },
    "5738": {
      "op": "ISZERO"
    },
    "5739": {
      "op": "PUSH2",
      "value": "0x167E"
    },
    "5742": {
      "op": "JUMPI"
    },
    "5743": {
      "op": "DUP2"
    },
    "5744": {
      "op": "DUP2"
    },
    "5745": {
      "op": "ADD"
    },
    "5746": {
      "op": "MLOAD"
    },
    "5747": {
      "op": "DUP4"
    },
    "5748": {
      "op": "DUP3"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "MSTORE"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5753": {
      "op": "ADD"
    },
    "5754": {
      "op": "PUSH2",
      "value": "0x1666"
    },
    "5757": {
      "op": "JUMP"
    },
    "5758": {
      "op": "JUMPDEST"
    },
    "5759": {
      "op": "DUP4"
    },
    "5760": {
      "op": "DUP2"
    },
    "5761": {
      "op": "GT"
    },
    "5762": {
      "op": "ISZERO"
    },
    "5763": {
      "op": "PUSH2",
      "value": "0x168D"
    },
    "5766": {
      "op": "JUMPI"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5769": {
      "op": "DUP5"
    },
    "5770": {
      "op": "DUP5"
    },
    "5771": {
      "op": "ADD"
    },
    "5772": {
      "op": "MSTORE"
    },
    "5773": {
      "op": "JUMPDEST"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "POP"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "jump": "o",
      "op": "JUMP"
    },
    "5779": {
      "op": "JUMPDEST"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5782": {
      "op": "DUP2"
    },
    "5783": {
      "op": "DUP2"
    },
    "5784": {
      "op": "SHR"
    },
    "5785": {
      "op": "SWAP1"
    },
    "5786": {
      "op": "DUP3"
    },
    "5787": {
      "op": "AND"
    },
    "5788": {
      "op": "DUP1"
    },
    "5789": {
      "op": "PUSH2",
      "value": "0x16A7"
    },
    "5792": {
      "op": "JUMPI"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5795": {
      "op": "DUP3"
    },
    "5796": {
      "op": "AND"
    },
    "5797": {
      "op": "SWAP2"
    },
    "5798": {
      "op": "POP"
    },
    "5799": {
      "op": "JUMPDEST"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5802": {
      "op": "DUP3"
    },
    "5803": {
      "op": "LT"
    },
    "5804": {
      "op": "DUP2"
    },
    "5805": {
      "op": "EQ"
    },
    "5806": {
      "op": "ISZERO"
    },
    "5807": {
      "op": "PUSH2",
      "value": "0x16C8"
    },
    "5810": {
      "op": "JUMPI"
    },
    "5811": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5818": {
      "op": "SHL"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5821": {
      "op": "MSTORE"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5826": {
      "op": "MSTORE"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5831": {
      "op": "REVERT"
    },
    "5832": {
      "op": "JUMPDEST"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "op": "SWAP2"
    },
    "5835": {
      "op": "SWAP1"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "jump": "o",
      "op": "JUMP"
    },
    "5838": {
      "op": "JUMPDEST"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5843": {
      "op": "NOT"
    },
    "5844": {
      "op": "DUP3"
    },
    "5845": {
      "op": "EQ"
    },
    "5846": {
      "op": "ISZERO"
    },
    "5847": {
      "op": "PUSH2",
      "value": "0x16E2"
    },
    "5850": {
      "op": "JUMPI"
    },
    "5851": {
      "op": "PUSH2",
      "value": "0x16E2"
    },
    "5854": {
      "op": "PUSH2",
      "value": "0x16E9"
    },
    "5857": {
      "jump": "i",
      "op": "JUMP"
    },
    "5858": {
      "op": "JUMPDEST"
    },
    "5859": {
      "op": "POP"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5862": {
      "op": "ADD"
    },
    "5863": {
      "op": "SWAP1"
    },
    "5864": {
      "jump": "o",
      "op": "JUMP"
    },
    "5865": {
      "op": "JUMPDEST"
    },
    "5866": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5873": {
      "op": "SHL"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5876": {
      "op": "MSTORE"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5881": {
      "op": "MSTORE"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5886": {
      "op": "REVERT"
    },
    "5887": {
      "op": "JUMPDEST"
    },
    "5888": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5895": {
      "op": "SHL"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5898": {
      "op": "MSTORE"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5903": {
      "op": "MSTORE"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5908": {
      "op": "REVERT"
    }
  },
  "sha1": "03e2fcfe5fb744232bef5e3a0031c5a35394cc72",
  "source": "pragma solidity ^0.8.1;\n\ncontract Voting {\n    address public adminAddress;\n    bool public electionOn = false;\n    modifier onlyOwner {\n        require(msg.sender == adminAddress);\n        _;\n    }\n \n    event voterAdded(string name, string constituency);\n    event candidateAdded(string name, string constituency, string symbol);\n    // event voteEvent();\n    struct Voter {\n        // name, id, constituency, canVote \n        string name;\n        uint idNo;\n        string constituency;\n        bool canVote;\n        bool exists;\n    }\n    struct Candidate {\n        // name, constituency, noofvotes, address\n        string name;\n        string constituency;\n        string symbol;\n        uint noOfVotes;\n        bool exists;\n    }\n    \n    Voter[] voters;\n    mapping(uint => uint) public ballot; //hash to candidate mapping\n    Candidate[] candidates;\n    mapping(uint => uint) votersList; // voters id to voter mapping\n    \n    constructor(){\n        adminAddress = msg.sender;\n        candidates.push(Candidate(\"nonce\", \"nonce\", \"nonce\", 0,  false));\n        voters.push(Voter(\"nonce\", 0, \"nonce\", false, false));\n    }\n    \n    function startElection() public onlyOwner {\n        electionOn = true;\n    }\n    \n    function endElection() public onlyOwner {\n        electionOn = false;\n    }\n    // add right to vote facility later\n    function createVoter(string memory _name, uint _id, string memory _constituency) public {\n        require(!voters[votersList[_id]].exists, \"Voter id is already registered!.\");\n        voters.push(Voter(_name, _id, _constituency, true, true));\n        votersList[_id] = voters.length - 1;\n        \n        emit voterAdded(_name, _constituency);\n    } \n    function getVotersList() onlyOwner public view returns(Voter[] memory){\n        return voters;\n    }\n    function getCandidatesList() onlyOwner public view returns(Candidate[] memory){\n        return candidates;\n    }\n    // handle duplicate candidate problem later\n    function createCandidate(string memory _name, string memory _constituency, string memory _symbol) onlyOwner public {\n        uint candId =  _generateHash(_name, _constituency, _symbol);\n        require(!candidates[ballot[candId]].exists, \"Candidate already in ballot list!.\");\n        candidates.push(Candidate(_name, _constituency, _symbol, 0, true));\n        ballot[candId] = candidates.length - 1;\n        emit candidateAdded(_name, _constituency, _symbol);\n    }\n    \n    function _generateHash(string memory _name, string memory _constituency, string memory _symbol) public pure returns (uint){\n        uint hash = uint(keccak256(abi.encodePacked(_name, _constituency, _symbol)));   \n        return hash;\n    }\n    \n    function vote(uint _voterId, string memory _voteTo, string memory _constituency, string memory _symbol) public{\n        require(electionOn, \"Sorry. The election has ended.\");\n        require(voters[votersList[_voterId]].exists, \"You are not registered to vote.\");\n        require(voters[votersList[_voterId]].canVote, \"Sorry. You already voted.\");\n        uint candId = _generateHash(_voteTo, _constituency, _symbol);\n        require(candidates[ballot[candId]].exists, \"Selected candidate not found.\");\n        require(keccak256(abi.encodePacked(candidates[ballot[candId]].constituency)) == keccak256(abi.encodePacked(voters[votersList[_voterId]].constituency)), \"Sorry. You are voting for a candidate who is not in your constituency.\");\n        candidates[ballot[candId]].noOfVotes++; \n        voters[votersList[_voterId]].canVote = false;\n    }\n    \n    function getElectionResult() public view returns (Candidate[] memory){\n        require(!electionOn, \"Election has not ended.\");\n        return candidates;\n    }\n}",
  "sourceMap": "25:3686:0:-:0;;;105:5;80:30;;-1:-1:-1;;;;80:30:0;;;935:192;;;;;;;;;-1:-1:-1;958:12:0;:25;;-1:-1:-1;;;;;;958:25:0;973:10;958:25;;;1009:47;;;;;;;;;;;;;;;-1:-1:-1;;;1009:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1009:47:0;;;-1:-1:-1;;;1009:47:0;;;993:10;:64;;958:25;993:64;;;;;;;;;;1009:47;;993:64;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;993:64:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;993:64:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;993:64:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;993:64:0;;;;;;;;;1079:40;;;;;;;;;;;;;;;-1:-1:-1;;;1079:40:0;;;;;;;;;993:64;-1:-1:-1;1079:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1079:40:0;;;-1:-1:-1;;;1079:40:0;;;993:64;1067:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1067:53:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1067:53:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1067:53:0;;;;;;;-1:-1:-1;;1067:53:0;;;;;;;;;;25:3686;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25:3686:0;;;-1:-1:-1;25:3686:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;25:3686:0;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}