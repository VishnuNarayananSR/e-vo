{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "candidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        }
      ],
      "name": "voterAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "_generateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        }
      ],
      "name": "createVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidatesList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotersList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "idNo",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "canVote",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Voter[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_voteTo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        406
      ]
    },
    "id": 407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 406,
        "linearizedBaseContracts": [
          406
        ],
        "name": "Voting",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "adminAddress",
            "nameLocation": "55:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "47:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "47:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "electionOn",
            "nameLocation": "78:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "73:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "73:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "91:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "121:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "139:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "139:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11,
                          "name": "adminAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "153:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "139:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742062652061646d696e20746f20646f20746869732e",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "167:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4576645ad51b4521cb4d352297a95e08b68535df714c3278d050f291b06d9645",
                          "typeString": "literal_string \"You must be admin to do this.\""
                        },
                        "value": "You must be admin to do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4576645ad51b4521cb4d352297a95e08b68535df714c3278d050f291b06d9645",
                          "typeString": "literal_string \"You must be admin to do this.\""
                        }
                      ],
                      "id": 8,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "131:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "131:68:0"
                },
                {
                  "id": 16,
                  "nodeType": "PlaceholderStatement",
                  "src": "209:1:0"
                }
              ]
            },
            "id": 18,
            "name": "onlyOwner",
            "nameLocation": "111:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "121:0:0"
            },
            "src": "102:115:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 24,
            "name": "voterAdded",
            "nameLocation": "230:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "248:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "241:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "261:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "254:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "240:34:0"
            },
            "src": "224:51:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "candidateAdded",
            "nameLocation": "286:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "308:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "301:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "321:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "314:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "342:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "335:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:49:0"
            },
            "src": "280:70:0"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "455:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "448:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 33,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "448:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "idNo",
                "nameLocation": "474:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "469:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "495:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "488:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 37,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "canVote",
                "nameLocation": "522:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "517:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 39,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "517:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "544:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "539:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "388:5:0",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "381:176:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Candidate",
            "id": 54,
            "members": [
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "646:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "639:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 44,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "639:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "667:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "660:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 46,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "660:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "696:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "689:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 48,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "689:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "noOfVotes",
                "nameLocation": "717:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "712:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "712:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "741:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "736:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 52,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "569:9:0",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "562:192:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "772:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "764:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
              "typeString": "struct Voting.Voter[]"
            },
            "typeName": {
              "baseType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "764:5:0"
                },
                "referencedDeclaration": 43,
                "src": "764:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$43_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              },
              "id": 57,
              "nodeType": "ArrayTypeName",
              "src": "764:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Voter[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "ballot",
            "nameLocation": "806:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "784:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "792:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "784:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "800:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "858:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "846:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54,
                  "src": "846:9:0"
                },
                "referencedDeclaration": 54,
                "src": "846:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 65,
              "nodeType": "ArrayTypeName",
              "src": "846:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "votersList",
            "nameLocation": "896:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "874:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "882:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "874:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 68,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "890:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "960:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "adminAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "970:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "985:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "985:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "970:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "970:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1031:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1040:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1049:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1058:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1062:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 81,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1021:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$54_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1021:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 78,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1005:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1005:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$54_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1005:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1097:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1106:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1109:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1118:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1125:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 93,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1091:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$43_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1091:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1079:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1079:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$_t_struct$_Voter_$43_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:53:0"
                }
              ]
            },
            "id": 103,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:0"
            },
            "scope": 406,
            "src": "947:192:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1191:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1201:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1214:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1201:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:17:0"
                }
              ]
            },
            "functionSelector": "62d73eb8",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1181:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1181:9:0"
              }
            ],
            "name": "startElection",
            "nameLocation": "1158:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:0"
            },
            "scope": 406,
            "src": "1149:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1275:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1285:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1298:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1285:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:18:0"
                }
              ]
            },
            "functionSelector": "59f78468",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1265:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1265:9:0"
              }
            ],
            "name": "endElection",
            "nameLocation": "1244:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1275:0:0"
            },
            "scope": 406,
            "src": "1235:75:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1443:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1461:31:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 133,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1462:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                                "typeString": "struct Voting.Voter storage ref[] storage ref"
                              }
                            },
                            "id": 137,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 134,
                                "name": "votersList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "1469:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 136,
                              "indexExpression": {
                                "id": 135,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "1480:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1469:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1462:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$43_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1462:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220696420697320616c72656164792072656769737465726564212e",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        },
                        "value": "Voter id is already registered!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1453:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 147,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1557:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1564:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 149,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1569:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1584:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1590:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 146,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1551:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$43_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1551:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1539:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1539:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$_t_struct$_Voter_$43_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:57:0"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 155,
                        "name": "votersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1606:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 157,
                      "indexExpression": {
                        "id": 156,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1617:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1606:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 158,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1624:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1624:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1640:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1624:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1606:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1676:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 166,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1683:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 164,
                      "name": "voterAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1665:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "1660:37:0"
                }
              ]
            },
            "functionSelector": "d373f8d4",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVoter",
            "nameLocation": "1364:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1390:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1376:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1402:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1397:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "1421:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1407:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:60:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1443:0:0"
            },
            "scope": 406,
            "src": "1355:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "1780:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 179,
                    "name": "voters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "1797:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                      "typeString": "struct Voting.Voter storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "1790:13:0"
                }
              ]
            },
            "functionSelector": "bc86f385",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1735:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1735:9:0"
              }
            ],
            "name": "getVotersList",
            "nameLocation": "1719:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:2:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "1765:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Voter_$43_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Voter[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 175,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 174,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43,
                        "src": "1765:5:0"
                      },
                      "referencedDeclaration": 43,
                      "src": "1765:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$43_storage_ptr",
                        "typeString": "struct Voting.Voter"
                      }
                    },
                    "id": 176,
                    "nodeType": "ArrayTypeName",
                    "src": "1765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Voter[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1764:16:0"
            },
            "scope": 406,
            "src": "1710:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "1893:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 191,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1910:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "1903:17:0"
                }
              ]
            },
            "functionSelector": "4aba5f34",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1844:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1844:9:0"
              }
            ],
            "name": "getCandidatesList",
            "nameLocation": "1824:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:2:0"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1874:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$54_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 187,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 186,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "1874:9:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "1874:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 188,
                    "nodeType": "ArrayTypeName",
                    "src": "1874:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:20:0"
            },
            "scope": 406,
            "src": "1815:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2095:351:0",
              "statements": [
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "2110:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2105:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2105:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 208,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2134:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 209,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2141:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 210,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2156:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 207,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "2120:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2105:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2182:34:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 214,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "2183:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                                "typeString": "struct Voting.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 218,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 215,
                                "name": "ballot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "2194:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 217,
                              "indexExpression": {
                                "id": 216,
                                "name": "candId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "2201:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2194:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2183:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$54_storage",
                              "typeString": "struct Voting.Candidate storage ref"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "2183:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e64696461746520616c726561647920696e2062616c6c6f74206c697374212e",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2218:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        },
                        "value": "Candidate already in ballot list!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2174:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2291:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 229,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "2298:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 230,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "2313:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2322:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2325:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 227,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "2281:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$54_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2281:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "2265:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2265:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$54_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2265:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:66:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 236,
                        "name": "ballot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "2341:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 238,
                      "indexExpression": {
                        "id": 237,
                        "name": "candId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2348:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2341:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 239,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "2358:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2358:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2358:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2341:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2409:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 247,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2416:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 248,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2431:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 245,
                      "name": "candidateAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2394:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "EmitStatement",
                  "src": "2389:50:0"
                }
              ]
            },
            "functionSelector": "1d823d32",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 203,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 202,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "2078:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2078:9:0"
              }
            ],
            "name": "createCandidate",
            "nameLocation": "1989:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2019:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2005:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2040:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2026:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2069:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2055:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:73:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:0:0"
            },
            "scope": 406,
            "src": "1980:466:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "2578:117:0",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2593:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2588:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2588:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 276,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 270,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "2632:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 271,
                                "name": "_constituency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "2639:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 272,
                                "name": "_symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 258,
                                "src": "2654:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 268,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2615:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2615:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2615:47:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 267,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2605:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2605:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2600:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2600:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2600:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2588:76:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "name": "hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 264,
                    "src": "2684:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 262,
                  "id": 278,
                  "nodeType": "Return",
                  "src": "2677:11:0"
                }
              ]
            },
            "functionSelector": "79ae584d",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateHash",
            "nameLocation": "2465:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2493:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2479:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2514:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2500:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2543:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2529:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2529:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2478:73:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2573:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:6:0"
            },
            "scope": 406,
            "src": "2456:239:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "2815:736:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2833:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 296,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 293,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "2840:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 295,
                            "indexExpression": {
                              "id": 294,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "2851:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2840:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2833:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$43_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "2833:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f74207265676973746572656420746f20766f74652e",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2870:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        },
                        "value": "You are not registered to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2825:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 302,
                        "name": "electionOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2922:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e2054686520656c656374696f6e2068617320656e6465642e",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        },
                        "value": "Sorry. The election has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2914:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 307,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2985:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 311,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 308,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "2992:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "id": 309,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "3003:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2992:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2985:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$43_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "2985:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f7520616c726561647920766f7465642e",
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3023:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        },
                        "value": "Sorry. You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2977:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:74:0"
                },
                {
                  "assignments": [
                    317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "3066:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "3061:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3061:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 323,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "_voteTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "3089:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 320,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3098:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 321,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "3113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 318,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "3075:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3075:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3061:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 325,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3139:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                              "typeString": "struct Voting.Candidate storage ref[] storage ref"
                            }
                          },
                          "id": 329,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 326,
                              "name": "ballot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3150:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 328,
                            "indexExpression": {
                              "id": 327,
                              "name": "candId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 317,
                              "src": "3157:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3150:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3139:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$54_storage",
                            "typeString": "struct Voting.Candidate storage ref"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "3139:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c65637465642063616e646964617465206e6f7420666f756e642e",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3174:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        },
                        "value": "Selected candidate not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3131:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 338,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66,
                                      "src": "3251:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                                        "typeString": "struct Voting.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 342,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 339,
                                        "name": "ballot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62,
                                        "src": "3262:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 341,
                                      "indexExpression": {
                                        "id": 340,
                                        "name": "candId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 317,
                                        "src": "3269:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3262:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3251:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$54_storage",
                                      "typeString": "struct Voting.Candidate storage ref"
                                    }
                                  },
                                  "id": 343,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47,
                                  "src": "3251:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 336,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3234:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3234:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3234:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 335,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3224:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3224:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 349,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58,
                                      "src": "3323:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                                        "typeString": "struct Voting.Voter storage ref[] storage ref"
                                      }
                                    },
                                    "id": 353,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 350,
                                        "name": "votersList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 70,
                                        "src": "3330:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 352,
                                      "indexExpression": {
                                        "id": 351,
                                        "name": "_voterId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "3341:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3330:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3323:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$43_storage",
                                      "typeString": "struct Voting.Voter storage ref"
                                    }
                                  },
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38,
                                  "src": "3323:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 347,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3306:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3306:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3306:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 346,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3296:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3296:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3224:142:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f752061726520766f74696e6720666f7220612063616e6469646174652077686f206973206e6f7420696e20796f757220636f6e7374697475656e63792e",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3368:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        },
                        "value": "Sorry. You are voting for a candidate who is not in your constituency."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3216:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3216:225:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "3216:225:0"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3451:38:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 361,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "3451:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 365,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 362,
                            "name": "ballot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "3462:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "id": 363,
                            "name": "candId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "3469:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3462:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3451:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "3451:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3451:38:0"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 369,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3500:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 373,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 370,
                            "name": "votersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3507:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 372,
                          "indexExpression": {
                            "id": 371,
                            "name": "_voterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3518:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3507:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3500:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "3500:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3539:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3500:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:44:0"
                }
              ]
            },
            "functionSelector": "dd4159c0",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2714:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_voterId",
                  "nameLocation": "2724:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2719:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_voteTo",
                  "nameLocation": "2748:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2734:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2771:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2757:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2800:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2786:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2786:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2718:90:0"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2815:0:0"
            },
            "scope": 406,
            "src": "2705:846:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "3630:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3648:11:0",
                        "subExpression": {
                          "id": 387,
                          "name": "electionOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3649:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e20686173206e6f7420656e6465642e",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3661:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        },
                        "value": "Election has not ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:47:0"
                },
                {
                  "expression": {
                    "id": 392,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "3704:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 385,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "3697:17:0"
                }
              ]
            },
            "functionSelector": "ca3eb443",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getElectionResult",
            "nameLocation": "3570:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3587:2:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3611:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$54_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 382,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 381,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "3611:9:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "3611:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 383,
                    "nodeType": "ArrayTypeName",
                    "src": "3611:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3610:20:0"
            },
            "scope": 406,
            "src": "3561:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "3795:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 402,
                    "name": "electionOn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "3812:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 401,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "3805:17:0"
                }
              ]
            },
            "functionSelector": "f869809c",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 397,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "3766:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3766:9:0"
              }
            ],
            "name": "getElectionState",
            "nameLocation": "3740:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3756:2:0"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3790:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3789:6:0"
            },
            "scope": 406,
            "src": "3731:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 407,
        "src": "25:3806:0",
        "usedErrors": []
      }
    ],
    "src": "0:3831:0"
  },
  "bytecode": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b50600080546001600160a01b031916331781556040805160e081018252600560a08201818152646e6f6e636560d81b60c084018190529083528351808501855282815260208181018390528085019190915284518086018652838152808201929092529383015260608201849052608082018490526003805460018101825594528151805192949091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0192620000dc9284929091019062000234565b506020828101518051620000f7926001850192019062000234565b50604082015180516200011591600284019160209091019062000234565b5060608281015160038301556080928301516004928301805491151560ff199092169190911790556040805160e081018252600560a08201818152646e6f6e636560d81b60c0840181905290835260006020808501829052855180870187529384528381019290925293830191909152928101829052938401819052600180548082018255915283518051919093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192620001d792849291019062000234565b50602082810151600183015560408301518051620001fc926002850192019062000234565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905562000317565b8280546200024290620002da565b90600052602060002090601f016020900481019282620002665760008555620002b1565b82601f106200028157805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b157825182559160200191906001019062000294565b50620002bf929150620002c3565b5090565b5b80821115620002bf5760008155600101620002c4565b600181811c90821680620002ef57607f821691505b602082108114156200031157634e487b7160e01b600052602260045260246000fd5b50919050565b6117a080620003276000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063bc86f38511610066578063bc86f38514610107578063ca3eb4431461011c578063d373f8d414610124578063dd4159c014610137578063f869809c1461014a57600080fd5b80631d823d32146100a35780634aba5f34146100b857806359f78468146100d657806362d73eb8146100de57806379ae584d146100e6575b600080fd5b6100b66100b136600461123a565b610162565b005b6100c0610377565b6040516100cd91906114a9565b60405180910390f35b6100b66105d6565b6100b661060f565b6100f96100f436600461123a565b61064e565b6040519081526020016100cd565b61010f610687565b6040516100cd919061155f565b6100c061085f565b6100b66101323660046112be565b610ae5565b6100b6610145366004611311565b610caa565b6101526110de565b60405190151581526020016100cd565b6000546001600160a01b031633146101955760405162461bcd60e51b815260040161018c9061166a565b60405180910390fd5b60006101a284848461064e565b600081815260026020526040902054600380549293509181106101d557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102445760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b606482015260840161018c565b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01926102b8928492019061111a565b5060208281015180516102d1926001850192019061111a565b50604082015180516102ed91600284019160209091019061111a565b5060608201516003828101919091556080909201516004909101805460ff191691151591909117905554610323906001906116a1565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef9061036990869086908690611627565b60405180910390a150505050565b6000546060906001600160a01b031633146103a45760405162461bcd60e51b815260040161018c9061166a565b6003805480602002602001604051908101604052809291908181526020016000905b828210156105cd57838290600052602060002090600502016040518060a00160405290816000820180546103f9906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610425906116e8565b80156104725780601f1061044757610100808354040283529160200191610472565b820191906000526020600020905b81548152906001019060200180831161045557829003601f168201915b5050505050815260200160018201805461048b906116e8565b80601f01602080910402602001604051908101604052809291908181526020018280546104b7906116e8565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050505050815260200160028201805461051d906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610549906116e8565b80156105965780601f1061056b57610100808354040283529160200191610596565b820191906000526020600020905b81548152906001019060200180831161057957829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016103c6565b50505050905090565b6000546001600160a01b031633146106005760405162461bcd60e51b815260040161018c9061166a565b6000805460ff60a01b19169055565b6000546001600160a01b031633146106395760405162461bcd60e51b815260040161018c9061166a565b6000805460ff60a01b1916600160a01b179055565b600080848484604051602001610666939291906113cb565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b031633146106b45760405162461bcd60e51b815260040161018c9061166a565b6001805480602002602001604051908101604052809291908181526020016000905b828210156105cd57838290600052602060002090600402016040518060a0016040529081600082018054610709906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610735906116e8565b80156107825780601f1061075757610100808354040283529160200191610782565b820191906000526020600020905b81548152906001019060200180831161076557829003601f168201915b50505050508152602001600182015481526020016002820180546107a5906116e8565b80601f01602080910402602001604051908101604052809291908181526020018280546107d1906116e8565b801561081e5780601f106107f35761010080835404028352916020019161081e565b820191906000526020600020905b81548152906001019060200180831161080157829003601f168201915b50505091835250506003919091015460ff808216151560208085019190915261010090920416151560409092019190915290825260019290920191016106d6565b600054606090600160a01b900460ff16156108bc5760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161018c565b6003805480602002602001604051908101604052809291908181526020016000905b828210156105cd57838290600052602060002090600502016040518060a0016040529081600082018054610911906116e8565b80601f016020809104026020016040519081016040528092919081815260200182805461093d906116e8565b801561098a5780601f1061095f5761010080835404028352916020019161098a565b820191906000526020600020905b81548152906001019060200180831161096d57829003601f168201915b505050505081526020016001820180546109a3906116e8565b80601f01602080910402602001604051908101604052809291908181526020018280546109cf906116e8565b8015610a1c5780601f106109f157610100808354040283529160200191610a1c565b820191906000526020600020905b8154815290600101906020018083116109ff57829003601f168201915b50505050508152602001600282018054610a35906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a61906116e8565b8015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016108de565b600082815260046020526040902054600180549091908110610b1757634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610b835760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161018c565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610bf6928492019061111a565b50602082810151600183015560408301518051610c19926002850192019061111a565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610c5991906116a1565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610c9d90859084906115f9565b60405180910390a1505050565b600084815260046020526040902054600180549091908110610cdc57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610d475760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161018c565b600054600160a01b900460ff16610da05760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161018c565b600084815260046020526040902054600180549091908110610dd257634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610e355760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161018c565b6000610e4284848461064e565b60008181526002602052604090205460038054929350918110610e7557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610ed85760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161018c565b600085815260046020526040902054600180549091908110610f0a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610f2b919061140e565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610f7557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610f96919061140e565b604051602081830303815290604052805190602001201461102e5760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161018c565b60008181526002602052604090205460038054909190811061106057634e487b7160e01b600052603260045260246000fd5b60009182526020822060036005909202010180549161107e83611723565b90915550506000858152600460205260408120546001805490919081106110b557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b600080546001600160a01b031633146111095760405162461bcd60e51b815260040161018c9061166a565b50600054600160a01b900460ff1690565b828054611126906116e8565b90600052602060002090601f016020900481019282611148576000855561118e565b82601f1061116157805160ff191683800117855561118e565b8280016001018555821561118e579182015b8281111561118e578251825591602001919060010190611173565b5061119a92915061119e565b5090565b5b8082111561119a576000815560010161119f565b600082601f8301126111c3578081fd5b813567ffffffffffffffff808211156111de576111de611754565b604051601f8301601f19908116603f0116810190828211818310171561120657611206611754565b8160405283815286602085880101111561121e578485fd5b8360208701602083013792830160200193909352509392505050565b60008060006060848603121561124e578283fd5b833567ffffffffffffffff80821115611265578485fd5b611271878388016111b3565b94506020860135915080821115611286578384fd5b611292878388016111b3565b935060408601359150808211156112a7578283fd5b506112b4868287016111b3565b9150509250925092565b6000806000606084860312156112d2578283fd5b833567ffffffffffffffff808211156112e9578485fd5b6112f5878388016111b3565b94506020860135935060408601359150808211156112a7578283fd5b60008060008060808587031215611326578081fd5b84359350602085013567ffffffffffffffff80821115611344578283fd5b611350888389016111b3565b94506040870135915080821115611365578283fd5b611371888389016111b3565b93506060870135915080821115611386578283fd5b50611393878288016111b3565b91505092959194509250565b600081518084526113b78160208601602086016116b8565b601f01601f19169290920160200192915050565b600084516113dd8184602089016116b8565b8451908301906113f18183602089016116b8565b84519101906114048183602088016116b8565b0195945050505050565b600080835482600182811c91508083168061142a57607f831692505b602080841082141561144a57634e487b7160e01b87526022600452602487fd5b81801561145e576001811461146f5761149b565b60ff1986168952848901965061149b565b60008a815260209020885b868110156114935781548b82015290850190830161147a565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561155157603f19898403018552815160a081518186526114f58287018261139f565b915050888201518582038a87015261150d828261139f565b9150508782015185820389870152611525828261139f565b6060848101519088015260809384015115159390960192909252505093860193908601906001016114cf565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561155157603f19898403018552815160a081518186526115ab8287018261139f565b915050888201518986015287820151858203898701526115cb828261139f565b6060848101511515908801526080938401511515939096019290925250509386019390860190600101611585565b60408152600061160c604083018561139f565b828103602084015261161e818561139f565b95945050505050565b60608152600061163a606083018661139f565b828103602084015261164c818661139f565b90508281036040840152611660818561139f565b9695505050505050565b6020808252601d908201527f596f75206d7573742062652061646d696e20746f20646f20746869732e000000604082015260600190565b6000828210156116b3576116b361173e565b500390565b60005b838110156116d35781810151838201526020016116bb565b838111156116e2576000848401525b50505050565b600181811c908216806116fc57607f821691505b6020821081141561171d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117375761173761173e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220327de682d2b2ff17e92deb442e13b2d6a931467433fe60de8ff7c9cb57158fb664736f6c63430008040033",
  "bytecodeSha1": "62ebde6323ff3eb7e59b3b0afb1439ed78173983",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Voting",
  "coverageMap": {
    "branches": {
      "0": {
        "Voting.createCandidate": {
          "22": [
            2182,
            2216,
            true
          ]
        },
        "Voting.createVoter": {
          "24": [
            1461,
            1492,
            true
          ]
        },
        "Voting.getElectionResult": {
          "23": [
            3648,
            3659,
            true
          ]
        },
        "Voting.vote": {
          "25": [
            2833,
            2868,
            true
          ],
          "26": [
            2922,
            2932,
            true
          ],
          "27": [
            2985,
            3021,
            true
          ],
          "28": [
            3139,
            3172,
            true
          ],
          "29": [
            3224,
            3366,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Voting.createCandidate": {
          "0": [
            2174,
            2255
          ],
          "1": [
            2265,
            2331
          ],
          "2": [
            2341,
            2379
          ],
          "3": [
            2389,
            2439
          ]
        },
        "Voting.createVoter": {
          "10": [
            1453,
            1529
          ],
          "11": [
            1539,
            1596
          ],
          "12": [
            1606,
            1641
          ],
          "13": [
            1660,
            1697
          ]
        },
        "Voting.endElection": {
          "5": [
            1285,
            1303
          ]
        },
        "Voting.getCandidatesList": {
          "4": [
            1903,
            1920
          ]
        },
        "Voting.getElectionResult": {
          "8": [
            3640,
            3687
          ],
          "9": [
            3697,
            3714
          ]
        },
        "Voting.getElectionState": {
          "21": [
            3805,
            3822
          ]
        },
        "Voting.getVotersList": {
          "7": [
            1790,
            1803
          ]
        },
        "Voting.startElection": {
          "6": [
            1201,
            1218
          ]
        },
        "Voting.vote": {
          "14": [
            2825,
            2904
          ],
          "15": [
            2914,
            2967
          ],
          "16": [
            2977,
            3051
          ],
          "17": [
            3131,
            3206
          ],
          "18": [
            3216,
            3441
          ],
          "19": [
            3451,
            3489
          ],
          "20": [
            3500,
            3544
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063bc86f38511610066578063bc86f38514610107578063ca3eb4431461011c578063d373f8d414610124578063dd4159c014610137578063f869809c1461014a57600080fd5b80631d823d32146100a35780634aba5f34146100b857806359f78468146100d657806362d73eb8146100de57806379ae584d146100e6575b600080fd5b6100b66100b136600461123a565b610162565b005b6100c0610377565b6040516100cd91906114a9565b60405180910390f35b6100b66105d6565b6100b661060f565b6100f96100f436600461123a565b61064e565b6040519081526020016100cd565b61010f610687565b6040516100cd919061155f565b6100c061085f565b6100b66101323660046112be565b610ae5565b6100b6610145366004611311565b610caa565b6101526110de565b60405190151581526020016100cd565b6000546001600160a01b031633146101955760405162461bcd60e51b815260040161018c9061166a565b60405180910390fd5b60006101a284848461064e565b600081815260026020526040902054600380549293509181106101d557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102445760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b606482015260840161018c565b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01926102b8928492019061111a565b5060208281015180516102d1926001850192019061111a565b50604082015180516102ed91600284019160209091019061111a565b5060608201516003828101919091556080909201516004909101805460ff191691151591909117905554610323906001906116a1565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef9061036990869086908690611627565b60405180910390a150505050565b6000546060906001600160a01b031633146103a45760405162461bcd60e51b815260040161018c9061166a565b6003805480602002602001604051908101604052809291908181526020016000905b828210156105cd57838290600052602060002090600502016040518060a00160405290816000820180546103f9906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610425906116e8565b80156104725780601f1061044757610100808354040283529160200191610472565b820191906000526020600020905b81548152906001019060200180831161045557829003601f168201915b5050505050815260200160018201805461048b906116e8565b80601f01602080910402602001604051908101604052809291908181526020018280546104b7906116e8565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050505050815260200160028201805461051d906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610549906116e8565b80156105965780601f1061056b57610100808354040283529160200191610596565b820191906000526020600020905b81548152906001019060200180831161057957829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016103c6565b50505050905090565b6000546001600160a01b031633146106005760405162461bcd60e51b815260040161018c9061166a565b6000805460ff60a01b19169055565b6000546001600160a01b031633146106395760405162461bcd60e51b815260040161018c9061166a565b6000805460ff60a01b1916600160a01b179055565b600080848484604051602001610666939291906113cb565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b031633146106b45760405162461bcd60e51b815260040161018c9061166a565b6001805480602002602001604051908101604052809291908181526020016000905b828210156105cd57838290600052602060002090600402016040518060a0016040529081600082018054610709906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610735906116e8565b80156107825780601f1061075757610100808354040283529160200191610782565b820191906000526020600020905b81548152906001019060200180831161076557829003601f168201915b50505050508152602001600182015481526020016002820180546107a5906116e8565b80601f01602080910402602001604051908101604052809291908181526020018280546107d1906116e8565b801561081e5780601f106107f35761010080835404028352916020019161081e565b820191906000526020600020905b81548152906001019060200180831161080157829003601f168201915b50505091835250506003919091015460ff808216151560208085019190915261010090920416151560409092019190915290825260019290920191016106d6565b600054606090600160a01b900460ff16156108bc5760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161018c565b6003805480602002602001604051908101604052809291908181526020016000905b828210156105cd57838290600052602060002090600502016040518060a0016040529081600082018054610911906116e8565b80601f016020809104026020016040519081016040528092919081815260200182805461093d906116e8565b801561098a5780601f1061095f5761010080835404028352916020019161098a565b820191906000526020600020905b81548152906001019060200180831161096d57829003601f168201915b505050505081526020016001820180546109a3906116e8565b80601f01602080910402602001604051908101604052809291908181526020018280546109cf906116e8565b8015610a1c5780601f106109f157610100808354040283529160200191610a1c565b820191906000526020600020905b8154815290600101906020018083116109ff57829003601f168201915b50505050508152602001600282018054610a35906116e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a61906116e8565b8015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016108de565b600082815260046020526040902054600180549091908110610b1757634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610b835760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161018c565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610bf6928492019061111a565b50602082810151600183015560408301518051610c19926002850192019061111a565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610c5991906116a1565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610c9d90859084906115f9565b60405180910390a1505050565b600084815260046020526040902054600180549091908110610cdc57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610d475760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161018c565b600054600160a01b900460ff16610da05760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161018c565b600084815260046020526040902054600180549091908110610dd257634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610e355760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161018c565b6000610e4284848461064e565b60008181526002602052604090205460038054929350918110610e7557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610ed85760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161018c565b600085815260046020526040902054600180549091908110610f0a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610f2b919061140e565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610f7557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610f96919061140e565b604051602081830303815290604052805190602001201461102e5760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161018c565b60008181526002602052604090205460038054909190811061106057634e487b7160e01b600052603260045260246000fd5b60009182526020822060036005909202010180549161107e83611723565b90915550506000858152600460205260408120546001805490919081106110b557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b600080546001600160a01b031633146111095760405162461bcd60e51b815260040161018c9061166a565b50600054600160a01b900460ff1690565b828054611126906116e8565b90600052602060002090601f016020900481019282611148576000855561118e565b82601f1061116157805160ff191683800117855561118e565b8280016001018555821561118e579182015b8281111561118e578251825591602001919060010190611173565b5061119a92915061119e565b5090565b5b8082111561119a576000815560010161119f565b600082601f8301126111c3578081fd5b813567ffffffffffffffff808211156111de576111de611754565b604051601f8301601f19908116603f0116810190828211818310171561120657611206611754565b8160405283815286602085880101111561121e578485fd5b8360208701602083013792830160200193909352509392505050565b60008060006060848603121561124e578283fd5b833567ffffffffffffffff80821115611265578485fd5b611271878388016111b3565b94506020860135915080821115611286578384fd5b611292878388016111b3565b935060408601359150808211156112a7578283fd5b506112b4868287016111b3565b9150509250925092565b6000806000606084860312156112d2578283fd5b833567ffffffffffffffff808211156112e9578485fd5b6112f5878388016111b3565b94506020860135935060408601359150808211156112a7578283fd5b60008060008060808587031215611326578081fd5b84359350602085013567ffffffffffffffff80821115611344578283fd5b611350888389016111b3565b94506040870135915080821115611365578283fd5b611371888389016111b3565b93506060870135915080821115611386578283fd5b50611393878288016111b3565b91505092959194509250565b600081518084526113b78160208601602086016116b8565b601f01601f19169290920160200192915050565b600084516113dd8184602089016116b8565b8451908301906113f18183602089016116b8565b84519101906114048183602088016116b8565b0195945050505050565b600080835482600182811c91508083168061142a57607f831692505b602080841082141561144a57634e487b7160e01b87526022600452602487fd5b81801561145e576001811461146f5761149b565b60ff1986168952848901965061149b565b60008a815260209020885b868110156114935781548b82015290850190830161147a565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561155157603f19898403018552815160a081518186526114f58287018261139f565b915050888201518582038a87015261150d828261139f565b9150508782015185820389870152611525828261139f565b6060848101519088015260809384015115159390960192909252505093860193908601906001016114cf565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561155157603f19898403018552815160a081518186526115ab8287018261139f565b915050888201518986015287820151858203898701526115cb828261139f565b6060848101511515908801526080938401511515939096019290925250509386019390860190600101611585565b60408152600061160c604083018561139f565b828103602084015261161e818561139f565b95945050505050565b60608152600061163a606083018661139f565b828103602084015261164c818661139f565b90508281036040840152611660818561139f565b9695505050505050565b6020808252601d908201527f596f75206d7573742062652061646d696e20746f20646f20746869732e000000604082015260600190565b6000828210156116b3576116b361173e565b500390565b60005b838110156116d35781810151838201526020016116bb565b838111156116e2576000848401525b50505050565b600181811c908216806116fc57607f821691505b6020821081141561171d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117375761173761173e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220327de682d2b2ff17e92deb442e13b2d6a931467433fe60de8ff7c9cb57158fb664736f6c63430008040033",
  "deployedSourceMap": "25:3806:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:466;;;;;;:::i;:::-;;:::i;:::-;;1815:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1235:75;;;:::i;1149:76::-;;;:::i;2456:239::-;;;;;;:::i;:::-;;:::i;:::-;;;12790:25:1;;;12778:2;12763:18;2456:239:0;12745:76:1;1710:100:0;;;:::i;:::-;;;;;;;:::i;3561:160::-;;;:::i;1355:349::-;;;;;;:::i;:::-;;:::i;2705:846::-;;;;;;:::i;:::-;;:::i;3731:98::-;;;:::i;:::-;;;8294:14:1;;8287:22;8269:41;;8257:2;8242:18;3731:98:0;8224:92:1;1980:466:0;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;;;;;;;;;2105:11:::1;2120:44;2134:5;2141:13;2156:7;2120:13;:44::i;:::-;2194:14;::::0;;;:6:::1;:14;::::0;;;;;2183:10:::1;:26:::0;;2105:59;;-1:-1:-1;2183:10:0;:26;::::1;;;-1:-1:-1::0;;;2183:26:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:33:::1;:26;::::0;;::::1;;:33;::::0;::::1;;2182:34;2174:81;;;::::0;-1:-1:-1;;;2174:81:0;;10892:2:1;2174:81:0::1;::::0;::::1;10874:21:1::0;10931:2;10911:18;;;10904:30;10970:34;10950:18;;;10943:62;-1:-1:-1;;;11021:18:1;;;11014:32;11063:19;;2174:81:0::1;10864:224:1::0;2174:81:0::1;2281:49;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;2281:49:0;;;;;;2325:4:::1;2281:49:::0;;;;;;2265:10:::1;:66:::0;;;;::::1;::::0;;;;;;;;;2281:49;;2265:66:::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2265:66:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2265:66:0::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2265:66:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2265:66:0::1;::::0;::::1;;::::0;;;::::1;::::0;;2358:17;:21:::1;::::0;-1:-1:-1;;2358:21:0::1;:::i;:::-;2341:14;::::0;;;:6:::1;:14;::::0;;;;;;:38;;;;2394:45;::::1;::::0;::::1;::::0;2409:5;;2416:13;;2431:7;;2394:45:::1;:::i;:::-;;;;;;;;209:1;1980:466:::0;;;:::o;1815:112::-;153:12;;1874:18;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1910:10:::1;1903:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1903:17:0;;;-1:-1:-1;;1903:17:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;;;;;;;;;;;::::1;::::0;::::1;;;;;;;;;;1815:112:::0;:::o;1235:75::-;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1298:5:::1;1285:18:::0;;-1:-1:-1;;;;1285:18:0::1;::::0;;1235:75::o;1149:76::-;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1201:10:::1;:17:::0;;-1:-1:-1;;;;1201:17:0::1;-1:-1:-1::0;;;1201:17:0::1;::::0;;1149:76::o;2456:239::-;2573:4;2588:9;2632:5;2639:13;2654:7;2615:47;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2615:47:0;;;;;;2605:58;;2615:47;2605:58;;;;;2456:239;-1:-1:-1;;;;;2456:239:0:o;1710:100::-;153:12;;1765:14;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;1797:6:::1;1790:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1790:13:0;;;-1:-1:-1;;1790:13:0::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;;;;::::0;;;;;;;;;;;;;;;::::1;::::0;::::1;;;3561:160:::0;3649:10;;3611:18;;-1:-1:-1;;;3649:10:0;;;;3648:11;3640:47;;;;-1:-1:-1;;;3640:47:0;;11295:2:1;3640:47:0;;;11277:21:1;11334:2;11314:18;;;11307:30;11373:25;11353:18;;;11346:53;11416:18;;3640:47:0;11267:173:1;3640:47:0;3704:10;3697:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3697:17:0;;;-1:-1:-1;;3697:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:349;1469:15;;;;:10;:15;;;;;;1462:6;:23;;:6;;1469:15;1462:23;;;;-1:-1:-1;;;1462:23:0;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;1461:31;1453:76;;;;-1:-1:-1;;;1453:76:0;;11647:2:1;1453:76:0;;;11629:21:1;;;11666:18;;;11659:30;11725:34;11705:18;;;11698:62;11777:18;;1453:76:0;11619:182:1;1453:76:0;1551:44;;;;;;;;;;;;;;;;;;;;;;;;1539:6;1551:44;;;;;;;;;;;;1539:57;;;;;;;-1:-1:-1;1539:57:0;;;;;;;;1551:44;;1539:57;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1539:57:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1539:57:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1539:57:0;;;;;;;-1:-1:-1;;1539:57:0;;;;;;;;;;;1624:13;;:17;;1539:57;1624:17;:::i;:::-;1606:15;;;;:10;:15;;;;;;;:35;;;;1665:32;;;;;1676:5;;1683:13;;1665:32;:::i;:::-;;;;;;;;1355:349;;;:::o;2705:846::-;2840:20;;;;:10;:20;;;;;;2833:6;:28;;:6;;2840:20;2833:28;;;;-1:-1:-1;;;2833:28:0;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;2825:79;;;;-1:-1:-1;;;2825:79:0;;10178:2:1;2825:79:0;;;10160:21:1;10217:2;10197:18;;;10190:30;10256:33;10236:18;;;10229:61;10307:18;;2825:79:0;10150:181:1;2825:79:0;2922:10;;-1:-1:-1;;;2922:10:0;;;;2914:53;;;;-1:-1:-1;;;2914:53:0;;12008:2:1;2914:53:0;;;11990:21:1;12047:2;12027:18;;;12020:30;12086:32;12066:18;;;12059:60;12136:18;;2914:53:0;11980:180:1;2914:53:0;2992:20;;;;:10;:20;;;;;;2985:6;:28;;:6;;2992:20;2985:28;;;;-1:-1:-1;;;2985:28:0;;;;;;;;;;;;;;;;;:36;:28;;;;;:36;;;;2977:74;;;;-1:-1:-1;;;2977:74:0;;10538:2:1;2977:74:0;;;10520:21:1;10577:2;10557:18;;;10550:30;10616:27;10596:18;;;10589:55;10661:18;;2977:74:0;10510:175:1;2977:74:0;3061:11;3075:46;3089:7;3098:13;3113:7;3075:13;:46::i;:::-;3150:14;;;;:6;:14;;;;;;3139:10;:26;;3061:60;;-1:-1:-1;3139:10:0;:26;;;;-1:-1:-1;;;3139:26:0;;;;;;;;;;;;;;;;;:33;:26;;;;;:33;;;;3131:75;;;;-1:-1:-1;;;3131:75:0;;9462:2:1;3131:75:0;;;9444:21:1;9501:2;9481:18;;;9474:30;9540:31;9520:18;;;9513:59;9589:18;;3131:75:0;9434:179:1;3131:75:0;3330:20;;;;:10;:20;;;;;;3323:6;:28;;:6;;3330:20;3323:28;;;;-1:-1:-1;;;3323:28:0;;;;;;;;;;;;;;;;;;;:41;;3306:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;3296:70;;;;;;3251:10;3262:6;:14;3269:6;3262:14;;;;;;;;;;;;3251:26;;;;;;-1:-1:-1;;;3251:26:0;;;;;;;;;;;;;;;;;;;:39;;3234:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;3224:68;;;;;;:142;3216:225;;;;-1:-1:-1;;;3216:225:0;;12367:2:1;3216:225:0;;;12349:21:1;12406:2;12386:18;;;12379:30;12445:34;12425:18;;;12418:62;12516:34;12496:18;;;12489:62;-1:-1:-1;;;12567:19:1;;;12560:37;12614:19;;3216:225:0;12339:300:1;3216:225:0;3462:14;;;;:6;:14;;;;;;3451:10;:26;;:10;;3462:14;3451:26;;;;-1:-1:-1;;;3451:26:0;;;;;;;;;;;;;;;;:36;:26;;;;;:36;:38;;;;;;:::i;:::-;;;;-1:-1:-1;;3539:5:0;3507:20;;;:10;:20;;;;;;3500:6;:28;;:6;;3507:20;3500:28;;;;-1:-1:-1;;;3500:28:0;;;;;;;;;;;;;;;;;;;;;;:36;;:44;;-1:-1:-1;;3500:44:0;;;;;;;;;;-1:-1:-1;;;;;2705:846:0:o;3731:98::-;3790:4;153:12;;-1:-1:-1;;;;;153:12:0;139:10;:26;131:68;;;;-1:-1:-1;;;131:68:0;;;;;;;:::i;:::-;-1:-1:-1;3812:10:0::1;::::0;-1:-1:-1;;;3812:10:0;::::1;;;::::0;3731:98::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:739:1;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;132:5;125;118:20;77:2;172:6;159:20;198:18;235:2;231;228:10;225:2;;;241:18;;:::i;:::-;316:2;310:9;284:2;370:13;;-1:-1:-1;;366:22:1;;;390:2;362:31;358:40;346:53;;;414:18;;;434:22;;;411:46;408:2;;;460:18;;:::i;:::-;500:10;496:2;489:22;535:2;527:6;520:18;581:3;574:4;569:2;561:6;557:15;553:26;550:35;547:2;;;602:5;595;588:20;547:2;670;663:4;655:6;651:17;644:4;636:6;632:17;619:54;693:15;;;710:4;689:26;682:41;;;;-1:-1:-1;697:6:1;67:686;-1:-1:-1;;;67:686:1:o;758:783::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;955:6;947;940:22;902:2;1000:9;987:23;1029:18;1070:2;1062:6;1059:14;1056:2;;;1091:6;1083;1076:22;1056:2;1119:50;1161:7;1152:6;1141:9;1137:22;1119:50;:::i;:::-;1109:60;;1222:2;1211:9;1207:18;1194:32;1178:48;;1251:2;1241:8;1238:16;1235:2;;;1272:6;1264;1257:22;1235:2;1300:52;1344:7;1333:8;1322:9;1318:24;1300:52;:::i;:::-;1290:62;;1405:2;1394:9;1390:18;1377:32;1361:48;;1434:2;1424:8;1421:16;1418:2;;;1455:6;1447;1440:22;1418:2;;1483:52;1527:7;1516:8;1505:9;1501:24;1483:52;:::i;:::-;1473:62;;;892:649;;;;;:::o;1546:641::-;1643:6;1651;1659;1712:2;1700:9;1691:7;1687:23;1683:32;1680:2;;;1733:6;1725;1718:22;1680:2;1778:9;1765:23;1807:18;1848:2;1840:6;1837:14;1834:2;;;1869:6;1861;1854:22;1834:2;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1994:2;1983:9;1979:18;1966:32;1956:42;;2051:2;2040:9;2036:18;2023:32;2007:48;;2080:2;2070:8;2067:16;2064:2;;;2101:6;2093;2086:22;2192:852;2308:6;2316;2324;2332;2385:3;2373:9;2364:7;2360:23;2356:33;2353:2;;;2407:6;2399;2392:22;2353:2;2448:9;2435:23;2425:33;;2509:2;2498:9;2494:18;2481:32;2532:18;2573:2;2565:6;2562:14;2559:2;;;2594:6;2586;2579:22;2559:2;2622:50;2664:7;2655:6;2644:9;2640:22;2622:50;:::i;:::-;2612:60;;2725:2;2714:9;2710:18;2697:32;2681:48;;2754:2;2744:8;2741:16;2738:2;;;2775:6;2767;2760:22;2738:2;2803:52;2847:7;2836:8;2825:9;2821:24;2803:52;:::i;:::-;2793:62;;2908:2;2897:9;2893:18;2880:32;2864:48;;2937:2;2927:8;2924:16;2921:2;;;2958:6;2950;2943:22;2921:2;;2986:52;3030:7;3019:8;3008:9;3004:24;2986:52;:::i;:::-;2976:62;;;2343:701;;;;;;;:::o;3049:258::-;3091:3;3129:5;3123:12;3156:6;3151:3;3144:19;3172:63;3228:6;3221:4;3216:3;3212:14;3205:4;3198:5;3194:16;3172:63;:::i;:::-;3289:2;3268:15;-1:-1:-1;;3264:29:1;3255:39;;;;3296:4;3251:50;;3099:208;-1:-1:-1;;3099:208:1:o;3312:664::-;3539:3;3577:6;3571:13;3593:53;3639:6;3634:3;3627:4;3619:6;3615:17;3593:53;:::i;:::-;3709:13;;3668:16;;;;3731:57;3709:13;3668:16;3765:4;3753:17;;3731:57;:::i;:::-;3855:13;;3810:20;;;3877:57;3855:13;3810:20;3911:4;3899:17;;3877:57;:::i;:::-;3950:20;;3547:429;-1:-1:-1;;;;;3547:429:1:o;3981:1103::-;4109:3;4138;4173:6;4167:13;4203:3;4225:1;4253:9;4249:2;4245:18;4235:28;;4313:2;4302:9;4298:18;4335;4325:2;;4379:4;4371:6;4367:17;4357:27;;4325:2;4405;4453;4445:6;4442:14;4422:18;4419:38;4416:2;;;-1:-1:-1;;;4480:33:1;;4536:4;4533:1;4526:15;4566:4;4487:3;4554:17;4416:2;4597:18;4624:104;;;;4742:1;4737:322;;;;4590:469;;4624:104;-1:-1:-1;;4657:24:1;;4645:37;;4702:16;;;;-1:-1:-1;4624:104:1;;4737:322;12873:4;12892:17;;;12942:4;12926:21;;4832:3;4848:165;4862:6;4859:1;4856:13;4848:165;;;4940:14;;4927:11;;;4920:35;4983:16;;;;4877:10;;4848:165;;;4852:3;;5042:6;5037:3;5033:16;5026:23;;4590:469;-1:-1:-1;5075:3:1;;4117:967;-1:-1:-1;;;;;;;;4117:967:1:o;5089:1572::-;5281:4;5310:2;5350;5339:9;5335:18;5380:2;5369:9;5362:21;5403:6;5438;5432:13;5469:6;5461;5454:22;5495:2;5485:12;;5528:2;5517:9;5513:18;5506:25;;5590:2;5580:6;5577:1;5573:14;5562:9;5558:30;5554:39;5628:2;5620:6;5616:15;5649:4;5662:970;5676:6;5673:1;5670:13;5662:970;;;5769:2;5765:7;5753:9;5745:6;5741:22;5737:36;5732:3;5725:49;5803:6;5797:13;5833:4;5876:2;5870:9;5907:2;5899:6;5892:18;5937:48;5981:2;5973:6;5969:15;5955:12;5937:48;:::i;:::-;5923:62;;;6034:2;6030;6026:11;6020:18;6087:6;6079;6075:19;6070:2;6062:6;6058:15;6051:44;6122:41;6156:6;6140:14;6122:41;:::i;:::-;6108:55;;;6212:2;6208;6204:11;6198:18;6265:6;6257;6253:19;6248:2;6240:6;6236:15;6229:44;6300:41;6334:6;6318:14;6300:41;:::i;:::-;6364:4;6411:11;;;6405:18;6388:15;;;6381:43;6447:4;6508:11;;;6502:18;6495:26;6488:34;6471:15;;;;6464:59;;;;-1:-1:-1;;6610:12:1;;;;6575:15;;;;5698:1;5691:9;5662:970;;;-1:-1:-1;6649:6:1;;5290:1371;-1:-1:-1;;;;;;;;5290:1371:1:o;6666:1458::-;6850:4;6879:2;6919;6908:9;6904:18;6949:2;6938:9;6931:21;6972:6;7007;7001:13;7038:6;7030;7023:22;7064:2;7054:12;;7097:2;7086:9;7082:18;7075:25;;7159:2;7149:6;7146:1;7142:14;7131:9;7127:30;7123:39;7197:2;7189:6;7185:15;7218:4;7231:864;7245:6;7242:1;7239:13;7231:864;;;7338:2;7334:7;7322:9;7314:6;7310:22;7306:36;7301:3;7294:49;7372:6;7366:13;7402:4;7445:2;7439:9;7476:2;7468:6;7461:18;7506:48;7550:2;7542:6;7538:15;7524:12;7506:48;:::i;:::-;7492:62;;;7605:2;7601;7597:11;7591:18;7586:2;7578:6;7574:15;7567:43;7659:2;7655;7651:11;7645:18;7712:6;7704;7700:19;7695:2;7687:6;7683:15;7676:44;7747:41;7781:6;7765:14;7747:41;:::i;:::-;7811:4;7872:11;;;7866:18;7859:26;7852:34;7835:15;;;7828:59;7910:4;7971:11;;;7965:18;7958:26;7951:34;7934:15;;;;7927:59;;;;-1:-1:-1;;8073:12:1;;;;8038:15;;;;7267:1;7260:9;7231:864;;8321:383;8518:2;8507:9;8500:21;8481:4;8544:45;8585:2;8574:9;8570:18;8562:6;8544:45;:::i;:::-;8637:9;8629:6;8625:22;8620:2;8609:9;8605:18;8598:50;8665:33;8691:6;8683;8665:33;:::i;:::-;8657:41;8490:214;-1:-1:-1;;;;;8490:214:1:o;8709:546::-;8954:2;8943:9;8936:21;8917:4;8980:45;9021:2;9010:9;9006:18;8998:6;8980:45;:::i;:::-;9073:9;9065:6;9061:22;9056:2;9045:9;9041:18;9034:50;9107:33;9133:6;9125;9107:33;:::i;:::-;9093:47;;9188:9;9180:6;9176:22;9171:2;9160:9;9156:18;9149:50;9216:33;9242:6;9234;9216:33;:::i;:::-;9208:41;8926:329;-1:-1:-1;;;;;;8926:329:1:o;9618:353::-;9820:2;9802:21;;;9859:2;9839:18;;;9832:30;9898:31;9893:2;9878:18;;9871:59;9962:2;9947:18;;9792:179::o;12958:125::-;12998:4;13026:1;13023;13020:8;13017:2;;;13031:18;;:::i;:::-;-1:-1:-1;13068:9:1;;13007:76::o;13088:258::-;13160:1;13170:113;13184:6;13181:1;13178:13;13170:113;;;13260:11;;;13254:18;13241:11;;;13234:39;13206:2;13199:10;13170:113;;;13301:6;13298:1;13295:13;13292:2;;;13336:1;13327:6;13322:3;13318:16;13311:27;13292:2;;13141:205;;;:::o;13351:380::-;13430:1;13426:12;;;;13473;;;13494:2;;13548:4;13540:6;13536:17;13526:27;;13494:2;13601;13593:6;13590:14;13570:18;13567:38;13564:2;;;13647:10;13642:3;13638:20;13635:1;13628:31;13682:4;13679:1;13672:15;13710:4;13707:1;13700:15;13564:2;;13406:325;;;:::o;13736:135::-;13775:3;-1:-1:-1;;13796:17:1;;13793:2;;;13816:18;;:::i;:::-;-1:-1:-1;13863:1:1;13852:13;;13783:88::o;13876:127::-;13937:10;13932:3;13928:20;13925:1;13918:31;13968:4;13965:1;13958:15;13992:4;13989:1;13982:15;14008:127;14069:10;14064:3;14060:20;14057:1;14050:31;14100:4;14097:1;14090:15;14124:4;14121:1;14114:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    3831
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC86F385 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC86F385 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xCA3EB443 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xD373F8D4 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xDD4159C0 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF869809C EQ PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D823D32 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4ABA5F34 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x59F78468 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x62D73EB8 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x79AE584D EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x123A JUMP JUMPDEST PUSH2 0x162 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x60F JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x123A JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x10F PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0xC0 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x152 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A2 DUP5 DUP5 DUP5 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0x1D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1097 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x5 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP3 PUSH2 0x2B8 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x111A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x2D1 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x111A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x2ED SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x111A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD PUSH2 0x323 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF SWAP1 PUSH2 0x369 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x1627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5CD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x3F9 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x425 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x472 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x447 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x472 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x455 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x504 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x504 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x51D SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x549 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x596 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x596 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x579 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5CD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x709 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x735 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x782 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x757 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x782 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x765 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x7A5 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D1 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x801 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5CD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x911 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93D SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x9A3 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9CF SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA35 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA61 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAAE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA83 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAAE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA91 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xB17 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220696420697320616C72656164792072656769737465726564212E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x4 SWAP1 SWAP3 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP3 PUSH2 0xBF6 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x111A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC19 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x111A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A SWAP1 PUSH2 0xC9D SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xCDC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xDD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xE35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE42 DUP5 DUP5 DUP5 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0xE75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xF0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x3AB2B731BC97 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1060 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x107E DUP4 PUSH2 0x1723 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x10B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1109 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x166A JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1126 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1148 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1161 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x118E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x118E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x118E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1173 JUMP JUMPDEST POP PUSH2 0x119A SWAP3 SWAP2 POP PUSH2 0x119E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x119F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11C3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1206 PUSH2 0x1754 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x121E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x124E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1265 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1271 DUP8 DUP4 DUP9 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1286 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1292 DUP8 DUP4 DUP9 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x12B4 DUP7 DUP3 DUP8 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D2 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12E9 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x12F5 DUP8 DUP4 DUP9 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1326 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1344 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1350 DUP9 DUP4 DUP10 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1365 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1371 DUP9 DUP4 DUP10 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1386 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1393 DUP8 DUP3 DUP9 ADD PUSH2 0x11B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x13B7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x13DD DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x16B8 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x13F1 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x16B8 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1404 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x16B8 JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x142A JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x144A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x145E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x146F JUMPI PUSH2 0x149B JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x149B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1493 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x147A JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x14F5 DUP3 DUP8 ADD DUP3 PUSH2 0x139F JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP11 DUP8 ADD MSTORE PUSH2 0x150D DUP3 DUP3 PUSH2 0x139F JUMP JUMPDEST SWAP2 POP POP DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x1525 DUP3 DUP3 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14CF JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x15AB DUP3 DUP8 ADD DUP3 PUSH2 0x139F JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x15CB DUP3 DUP3 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x160C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x139F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x161E DUP2 DUP6 PUSH2 0x139F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x163A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x139F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x164C DUP2 DUP7 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1660 DUP2 DUP6 PUSH2 0x139F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742062652061646D696E20746F20646F20746869732E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x16B3 PUSH2 0x173E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16BB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x171D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1737 PUSH2 0x173E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH30 0xE682D2B2FF17E92DEB442E13B2D6A931467433FE60DE8FF7C9CB57158FB6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA3EB443"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD373F8D4"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD4159C0"
    },
    "82": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137"
    },
    "86": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF869809C"
    },
    "93": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "97": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1D823D32"
    },
    "109": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4ABA5F34"
    },
    "120": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "124": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59F78468"
    },
    "131": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "135": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62D73EB8"
    },
    "142": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "146": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79AE584D"
    },
    "153": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6"
    },
    "157": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        3831
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "167": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1"
    },
    "170": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "171": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "173": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123A"
    },
    "176": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "177": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "178": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "181": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "STOP",
      "path": "0"
    },
    "184": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "188": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x377"
    },
    "191": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "196": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "199": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "200": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "201": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A9"
    },
    "204": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "211": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SUB",
      "path": "0"
    },
    "212": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "213": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "RETURN",
      "path": "0"
    },
    "214": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "218": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "221": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "222": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "226": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60F"
    },
    "229": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "230": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "231": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "234": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "237": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "238": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "240": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123A"
    },
    "243": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "244": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "248": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "249": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "252": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "253": {
      "op": "SWAP1"
    },
    "254": {
      "op": "DUP2"
    },
    "255": {
      "op": "MSTORE"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "258": {
      "op": "ADD"
    },
    "259": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "262": {
      "op": "JUMP"
    },
    "263": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "264": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "267": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "270": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "271": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "274": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "275": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "278": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "279": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "280": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155F"
    },
    "283": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMP",
      "path": "0"
    },
    "284": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3561,
        3721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3561,
        3721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "288": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3561,
        3721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85F"
    },
    "291": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3561,
        3721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "296": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "299": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "300": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "302": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12BE"
    },
    "305": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE5"
    },
    "310": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "311": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "312": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "315": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "318": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "319": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "321": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1311"
    },
    "324": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2705,
        3551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAA"
    },
    "329": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2705,
        3551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "334": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DE"
    },
    "337": {
      "fn": "Voting.getElectionState",
      "jump": "i",
      "offset": [
        3731,
        3829
      ],
      "op": "JUMP",
      "path": "0"
    },
    "338": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "341": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "342": {
      "op": "SWAP1"
    },
    "343": {
      "op": "ISZERO"
    },
    "344": {
      "op": "ISZERO"
    },
    "345": {
      "op": "DUP2"
    },
    "346": {
      "op": "MSTORE"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "349": {
      "op": "ADD"
    },
    "350": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "353": {
      "op": "JUMP"
    },
    "354": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "355": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "357": {
      "fn": "Voting.createCandidate",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "SUB"
    },
    "366": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "367": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "368": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "369": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "372": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "373": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "384": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "385": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "387": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "388": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "391": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "392": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166A"
    },
    "395": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "396": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "399": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "400": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "DUP1",
      "path": "0"
    },
    "401": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "402": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SUB",
      "path": "0"
    },
    "403": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "404": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "405": {
      "fn": "Voting.createCandidate",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "408": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "411": {
      "fn": "Voting.createCandidate",
      "offset": [
        2134,
        2139
      ],
      "op": "DUP5",
      "path": "0"
    },
    "412": {
      "fn": "Voting.createCandidate",
      "offset": [
        2141,
        2154
      ],
      "op": "DUP5",
      "path": "0"
    },
    "413": {
      "fn": "Voting.createCandidate",
      "offset": [
        2156,
        2163
      ],
      "op": "DUP5",
      "path": "0"
    },
    "414": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "417": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2120,
        2164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "421": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "422": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "423": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "424": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "426": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "428": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "429": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "431": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "432": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "433": {
      "fn": "Voting.createCandidate",
      "offset": [
        2194,
        2208
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "434": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "436": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "437": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "438": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "439": {
      "fn": "Voting.createCandidate",
      "offset": [
        2105,
        2164
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "440": {
      "op": "POP"
    },
    "441": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "442": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "443": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "LT",
      "path": "0"
    },
    "444": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5"
    },
    "447": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "448": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "455": {
      "op": "SHL"
    },
    "456": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "458": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "459": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "461": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "463": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "464": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "466": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "468": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "REVERT",
      "path": "0"
    },
    "469": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "470": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "472": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "473": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "474": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "475": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "477": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "479": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "480": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "482": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "484": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "486": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "MUL",
      "path": "0"
    },
    "487": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2209
      ],
      "op": "ADD",
      "path": "0"
    },
    "488": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2216
      ],
      "op": "ADD",
      "path": "0"
    },
    "489": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2216
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "490": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "492": {
      "fn": "Voting.createCandidate",
      "offset": [
        2183,
        2216
      ],
      "op": "AND",
      "path": "0"
    },
    "493": {
      "branch": 22,
      "fn": "Voting.createCandidate",
      "offset": [
        2182,
        2216
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "494": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "497": {
      "branch": 22,
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "498": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "500": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "507": {
      "op": "SHL"
    },
    "508": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "509": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "512": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "514": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "DUP3",
      "path": "0"
    },
    "515": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "ADD",
      "path": "0"
    },
    "516": {
      "op": "MSTORE"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "521": {
      "op": "DUP3"
    },
    "522": {
      "op": "ADD"
    },
    "523": {
      "op": "MSTORE"
    },
    "524": {
      "op": "PUSH32",
      "value": "0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "559": {
      "op": "DUP3"
    },
    "560": {
      "op": "ADD"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "565": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "567": {
      "op": "SHL"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "570": {
      "op": "DUP3"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "579": {
      "op": "JUMP"
    },
    "580": {
      "fn": "Voting.createCandidate",
      "offset": [
        2174,
        2255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "581": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "583": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "584": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "585": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "587": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "ADD",
      "path": "0"
    },
    "589": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "590": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "591": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP6",
      "path": "0"
    },
    "592": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "593": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "594": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "596": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP1",
      "path": "0"
    },
    "597": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "598": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "ADD",
      "path": "0"
    },
    "599": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP7",
      "path": "0"
    },
    "600": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "601": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "602": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "603": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "604": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "ADD",
      "path": "0"
    },
    "605": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP5",
      "path": "0"
    },
    "606": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "607": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "610": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "612": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "613": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "ADD",
      "path": "0"
    },
    "614": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "615": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "616": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "617": {
      "fn": "Voting.createCandidate",
      "offset": [
        2325,
        2329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "619": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "621": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP4",
      "path": "0"
    },
    "622": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "ADD",
      "path": "0"
    },
    "623": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "624": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "625": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "626": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "628": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "629": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "630": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "631": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "632": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "633": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "634": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "635": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "636": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "637": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "639": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "640": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "641": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "642": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "643": {
      "fn": "Voting.createCandidate",
      "offset": [
        2281,
        2330
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "644": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "646": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "647": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "648": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MUL",
      "path": "0"
    },
    "649": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "682": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "683": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "684": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "687": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "688": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP5",
      "path": "0"
    },
    "689": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "690": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "691": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "692": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "695": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2265,
        2331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "700": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "701": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "702": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "703": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "704": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "705": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "706": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "709": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "710": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "712": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP6",
      "path": "0"
    },
    "713": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "714": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "715": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "716": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "717": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "720": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2265,
        2331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "721": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "725": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "726": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "727": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "728": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "729": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "730": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED"
    },
    "733": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "734": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "736": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP5",
      "path": "0"
    },
    "737": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "738": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "739": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "741": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "742": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "743": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "744": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "748": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2265,
        2331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "749": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "750": {
      "op": "POP"
    },
    "751": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "753": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "754": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "755": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "756": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "758": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "759": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "760": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "761": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "762": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "763": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "764": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "765": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "767": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "768": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "769": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "770": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "771": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "773": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "774": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "775": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ADD",
      "path": "0"
    },
    "776": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "777": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "780": {
      "op": "NOT"
    },
    "781": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "AND",
      "path": "0"
    },
    "782": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "783": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "784": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "785": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "786": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "787": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "788": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "OR",
      "path": "0"
    },
    "789": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "790": {
      "fn": "Voting.createCandidate",
      "offset": [
        2265,
        2331
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "791": {
      "fn": "Voting.createCandidate",
      "offset": [
        2358,
        2375
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "792": {
      "fn": "Voting.createCandidate",
      "offset": [
        2358,
        2379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "795": {
      "fn": "Voting.createCandidate",
      "offset": [
        2358,
        2379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "SWAP1"
    },
    "799": {
      "fn": "Voting.createCandidate",
      "offset": [
        2358,
        2379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A1"
    },
    "802": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2358,
        2379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "803": {
      "fn": "Voting.createCandidate",
      "offset": [
        2358,
        2379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "806": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "DUP3",
      "path": "0"
    },
    "807": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "808": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "809": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "811": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "813": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "814": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "816": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "817": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "818": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "819": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2355
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "820": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "821": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2379
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "823": {
      "fn": "Voting.createCandidate",
      "offset": [
        2341,
        2379
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "824": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 3
    },
    "825": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF"
    },
    "858": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "859": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "862": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "863": {
      "fn": "Voting.createCandidate",
      "offset": [
        2409,
        2414
      ],
      "op": "DUP7",
      "path": "0"
    },
    "864": {
      "fn": "Voting.createCandidate",
      "offset": [
        2409,
        2414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "865": {
      "fn": "Voting.createCandidate",
      "offset": [
        2416,
        2429
      ],
      "op": "DUP7",
      "path": "0"
    },
    "866": {
      "fn": "Voting.createCandidate",
      "offset": [
        2416,
        2429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "867": {
      "fn": "Voting.createCandidate",
      "offset": [
        2431,
        2438
      ],
      "op": "DUP7",
      "path": "0"
    },
    "868": {
      "fn": "Voting.createCandidate",
      "offset": [
        2431,
        2438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1627"
    },
    "872": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2394,
        2439
      ],
      "op": "JUMP",
      "path": "0"
    },
    "873": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "874": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "876": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "877": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "DUP1",
      "path": "0"
    },
    "878": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "879": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "SUB",
      "path": "0"
    },
    "880": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "Voting.createCandidate",
      "offset": [
        2394,
        2439
      ],
      "op": "LOG1",
      "path": "0"
    },
    "882": {
      "offset": [
        209,
        210
      ],
      "op": "POP",
      "path": "0"
    },
    "883": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "POP",
      "path": "0"
    },
    "884": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "POP",
      "path": "0"
    },
    "885": {
      "fn": "Voting.createCandidate",
      "offset": [
        1980,
        2446
      ],
      "op": "POP",
      "path": "0"
    },
    "886": {
      "fn": "Voting.createCandidate",
      "jump": "o",
      "offset": [
        1980,
        2446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "887": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "890": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "891": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1874,
        1892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "893": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1874,
        1892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "903": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "904": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "905": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "908": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "909": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "911": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "920": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "921": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "923": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "924": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "927": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166A"
    },
    "931": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "932": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "933": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1910,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "935": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "936": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "937": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "938": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "940": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "941": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "943": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "944": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "946": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "947": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "948": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "949": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "950": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "952": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "953": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "954": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "955": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "956": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "957": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "958": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "959": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "960": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "962": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "963": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "965": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "966": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "967": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "968": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "969": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "970": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "971": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CD"
    },
    "974": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "975": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "976": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "977": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "978": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "980": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "981": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "983": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "985": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "986": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "989": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "990": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "991": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "993": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "994": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "995": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "997": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "998": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1000": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1001": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1003": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1005": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1006": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1007": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1008": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1009": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1013": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1016": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1017": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1019": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1021": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1022": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1024": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1025": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1026": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1027": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1028": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1030": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1031": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1033": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1034": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1035": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1036": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1037": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1039": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1040": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1042": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1043": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1044": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1045": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1046": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1047": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1049": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1050": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1051": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1052": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1053": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x425"
    },
    "1056": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1057": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1060": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1061": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1062": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1063": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1064": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "1067": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1068": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1069": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1071": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1072": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x447"
    },
    "1075": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1076": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1079": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1080": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1081": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1082": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1083": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1084": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1085": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1086": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1087": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1089": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1090": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1091": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "1094": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1095": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1096": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1097": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1098": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1099": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1100": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1102": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1105": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1107": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1108": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1109": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1110": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1111": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1112": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1113": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1114": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1115": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1117": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1118": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1119": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1121": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1122": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1124": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "GT",
      "path": "0"
    },
    "1125": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455"
    },
    "1128": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1129": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1130": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1131": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1132": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1134": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1135": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1136": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1137": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1138": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1139": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1140": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1141": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1142": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1143": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1144": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1145": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1146": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1148": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1149": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1151": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1152": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1153": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1154": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1155": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48B"
    },
    "1158": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1159": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1162": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1163": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1164": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1165": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1167": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1168": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1170": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1171": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1172": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1173": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1174": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1176": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1177": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1179": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1180": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1181": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1182": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1183": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1185": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1186": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1188": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1189": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1190": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1191": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1192": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1193": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1195": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1196": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1197": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1198": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1199": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B7"
    },
    "1202": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1203": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1206": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1207": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1208": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1209": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1210": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1213": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1214": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1215": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1217": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1218": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D9"
    },
    "1221": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1222": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1225": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1226": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1227": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1228": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1229": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1230": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1231": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1233": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1235": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1236": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1237": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1240": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1241": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1242": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1243": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1244": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1245": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1248": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1249": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1251": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1253": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1254": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1255": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1256": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1257": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1258": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1259": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1260": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1261": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1263": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1264": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1265": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1267": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1268": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1269": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1270": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "GT",
      "path": "0"
    },
    "1271": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E7"
    },
    "1274": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1275": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1276": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1277": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1278": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1280": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1281": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1282": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1283": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1284": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1286": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1287": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1288": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1289": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1291": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1292": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1294": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1295": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1297": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1298": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1299": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1300": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1301": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D"
    },
    "1304": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1308": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1309": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1310": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1311": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1313": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1314": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1316": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1317": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1318": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1319": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1320": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1322": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1323": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1325": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1326": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1328": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1329": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1331": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1332": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1333": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1334": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1335": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1336": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1338": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1339": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1341": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1342": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1343": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1344": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1345": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x549"
    },
    "1348": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1349": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1352": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1353": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1354": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1355": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1356": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x596"
    },
    "1359": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1360": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1361": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1363": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "LT",
      "path": "0"
    },
    "1364": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56B"
    },
    "1367": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1368": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1371": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1372": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1373": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1374": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DIV",
      "path": "0"
    },
    "1375": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MUL",
      "path": "0"
    },
    "1376": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1377": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1378": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1379": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1381": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1382": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1383": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x596"
    },
    "1386": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1387": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1388": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1389": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1390": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1391": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1392": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1394": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1395": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1397": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1399": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1400": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1401": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1402": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1403": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1404": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1406": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1407": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1409": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1410": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1411": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1413": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1414": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1415": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1416": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "GT",
      "path": "0"
    },
    "1417": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x579"
    },
    "1420": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1421": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1422": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1423": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SUB",
      "path": "0"
    },
    "1424": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1426": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1427": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1428": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1429": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1430": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1436": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1441": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1442": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1443": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1444": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1446": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1447": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1448": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1449": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1450": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1451": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1452": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1453": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1455": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1456": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1457": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1458": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1459": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1461": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "AND",
      "path": "0"
    },
    "1462": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1463": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1464": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1466": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1467": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1468": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1469": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1470": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1471": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1472": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1473": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1475": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1476": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1477": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1478": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1479": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1480": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "ADD",
      "path": "0"
    },
    "1481": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C6"
    },
    "1484": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1485": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1486": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1487": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1488": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1489": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1490": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1491": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1903,
        1920
      ],
      "op": "POP",
      "path": "0"
    },
    "1492": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1815,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1493": {
      "fn": "Voting.getCandidatesList",
      "jump": "o",
      "offset": [
        1815,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "Voting.endElection",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1497": {
      "fn": "Voting.endElection",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1504": {
      "op": "SHL"
    },
    "1505": {
      "op": "SUB"
    },
    "1506": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1507": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1508": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1509": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x600"
    },
    "1512": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1513": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1515": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1524": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1525": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1527": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1528": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1531": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1532": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166A"
    },
    "1535": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1536": {
      "fn": "Voting.endElection",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1537": {
      "fn": "Voting.endElection",
      "offset": [
        1298,
        1303
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "1539": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1540": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "NOT"
    },
    "1547": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "AND",
      "path": "0"
    },
    "1548": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1549": {
      "fn": "Voting.endElection",
      "offset": [
        1285,
        1303
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1550": {
      "fn": "Voting.endElection",
      "jump": "o",
      "offset": [
        1235,
        1310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1551": {
      "fn": "Voting.startElection",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1552": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1554": {
      "fn": "Voting.startElection",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1564": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1565": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1566": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x639"
    },
    "1569": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1570": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1572": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1581": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1582": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1584": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1585": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1588": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166A"
    },
    "1592": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1593": {
      "fn": "Voting.startElection",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1594": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1211
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1596": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1597": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "op": "NOT"
    },
    "1604": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "AND",
      "path": "0"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "OR",
      "path": "0"
    },
    "1611": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1612": {
      "fn": "Voting.startElection",
      "offset": [
        1201,
        1218
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1613": {
      "fn": "Voting.startElection",
      "jump": "o",
      "offset": [
        1149,
        1225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1614": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1615": {
      "fn": "Voting._generateHash",
      "offset": [
        2573,
        2577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1617": {
      "fn": "Voting._generateHash",
      "offset": [
        2588,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1618": {
      "fn": "Voting._generateHash",
      "offset": [
        2632,
        2637
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1619": {
      "fn": "Voting._generateHash",
      "offset": [
        2639,
        2652
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1620": {
      "fn": "Voting._generateHash",
      "offset": [
        2654,
        2661
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1621": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1623": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1624": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1626": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "ADD",
      "path": "0"
    },
    "1627": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x666"
    },
    "1630": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1631": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1632": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1633": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1634": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CB"
    },
    "1637": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2615,
        2662
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1638": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1639": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1641": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1642": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1643": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1644": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1645": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SUB",
      "path": "0"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1648": {
      "op": "NOT"
    },
    "1649": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "ADD",
      "path": "0"
    },
    "1650": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1651": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1652": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1653": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1654": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1655": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1656": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1657": {
      "fn": "Voting._generateHash",
      "offset": [
        2615,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1659": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1660": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1661": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "ADD",
      "path": "0"
    },
    "1662": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1663": {
      "fn": "Voting._generateHash",
      "offset": [
        2605,
        2663
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1664": {
      "fn": "Voting._generateHash",
      "offset": [
        2456,
        2695
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "Voting._generateHash",
      "jump": "o",
      "offset": [
        2456,
        2695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1671": {
      "fn": "Voting.getVotersList",
      "offset": [
        1710,
        1810
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "offset": [
        153,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1674": {
      "fn": "Voting.getVotersList",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1675": {
      "fn": "Voting.getVotersList",
      "offset": [
        1765,
        1779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1677": {
      "fn": "Voting.getVotersList",
      "offset": [
        1765,
        1779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "op": "SUB"
    },
    "1686": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "1687": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1688": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "1689": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B4"
    },
    "1692": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1693": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1695": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1704": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1705": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1707": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1708": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "1711": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1712": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166A"
    },
    "1715": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1716": {
      "fn": "Voting.getVotersList",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1717": {
      "fn": "Voting.getVotersList",
      "offset": [
        1797,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1719": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1720": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1721": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1722": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1724": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1725": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1727": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1728": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1730": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1732": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1733": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1734": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1736": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1737": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1738": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1739": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1740": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1741": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1742": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1743": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1744": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1746": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1747": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1749": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1750": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1751": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1752": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1753": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "LT",
      "path": "0"
    },
    "1754": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1755": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CD"
    },
    "1758": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1759": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1760": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1761": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1762": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1764": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1765": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1767": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1769": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1770": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1771": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1773": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1774": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1775": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1777": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1778": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1779": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1781": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1782": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1784": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1785": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1787": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1789": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1790": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1791": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1792": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1793": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x709"
    },
    "1796": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1797": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1800": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1801": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1802": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1803": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1805": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1806": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1808": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1809": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1810": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "1811": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1812": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1814": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1815": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1817": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1818": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1819": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1820": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1821": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1823": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1825": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1826": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1827": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1828": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1829": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1830": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1831": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1833": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1834": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1835": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1836": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1837": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x735"
    },
    "1840": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1841": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1844": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1845": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1846": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1847": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1848": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x782"
    },
    "1851": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1852": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1853": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1855": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "LT",
      "path": "0"
    },
    "1856": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x757"
    },
    "1859": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1860": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1863": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1864": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1865": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1866": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "1867": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1868": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1869": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1870": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1871": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1873": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1874": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1875": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x782"
    },
    "1878": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1879": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1880": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1881": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1882": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1883": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1884": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1886": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1887": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1889": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1891": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1892": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1893": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1894": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1895": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1896": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1897": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1898": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1899": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1901": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1902": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1903": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1905": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1906": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1907": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1908": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "GT",
      "path": "0"
    },
    "1909": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x765"
    },
    "1912": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1913": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1914": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1915": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SUB",
      "path": "0"
    },
    "1916": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1918": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "1919": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1920": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1921": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1922": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1923": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "1924": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "1925": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "1926": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "1927": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "1928": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1929": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1930": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1932": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1933": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1935": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1936": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1937": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1938": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1939": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1940": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1942": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1943": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1945": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1946": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1947": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1948": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1949": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A5"
    },
    "1952": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1953": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "1956": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1957": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1958": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1959": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1961": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1962": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1964": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1965": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1966": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "1967": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "1968": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1970": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1971": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1973": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1974": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1975": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1976": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1977": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1979": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1980": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1981": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1982": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1983": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1984": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1985": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1986": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1987": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1989": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "1990": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1991": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1992": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1993": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D1"
    },
    "1996": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1997": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2000": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2001": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2002": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2003": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2004": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81E"
    },
    "2007": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2008": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2009": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2011": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "LT",
      "path": "0"
    },
    "2012": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F3"
    },
    "2015": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2016": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2019": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2020": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2021": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2022": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "2023": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MUL",
      "path": "0"
    },
    "2024": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2025": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2026": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2027": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2029": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2030": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2031": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81E"
    },
    "2034": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2035": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2036": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2037": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2038": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2039": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2040": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2042": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2043": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2045": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2047": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2048": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2049": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2050": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2051": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2052": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2053": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2054": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2055": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2057": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2058": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2061": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2062": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2063": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2064": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "GT",
      "path": "0"
    },
    "2065": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x801"
    },
    "2068": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2069": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2070": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2071": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SUB",
      "path": "0"
    },
    "2072": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2074": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2075": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2076": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2077": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2078": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2083": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2084": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2089": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2090": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2091": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2092": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2093": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2094": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2096": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2097": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2098": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2099": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2100": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2101": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2103": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2104": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2105": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2106": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2107": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2108": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2109": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2110": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2113": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2115": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DIV",
      "path": "0"
    },
    "2116": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "2117": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2118": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2119": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2121": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2122": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2123": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2124": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2125": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2127": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2128": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2129": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2130": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2131": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2133": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2134": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2135": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2136": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2137": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2138": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "2139": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D6"
    },
    "2142": {
      "fn": "Voting.getVotersList",
      "offset": [
        1790,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2143": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3561,
        3721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2144": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3649,
        3659
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x0"
    },
    "2146": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3649,
        3659
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2147": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3611,
        3629
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2149": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3611,
        3629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3649,
        3659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2156": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3649,
        3659
      ],
      "op": "DIV",
      "path": "0"
    },
    "2157": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3649,
        3659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2159": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3649,
        3659
      ],
      "op": "AND",
      "path": "0"
    },
    "2160": {
      "branch": 23,
      "fn": "Voting.getElectionResult",
      "offset": [
        3648,
        3659
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2161": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BC"
    },
    "2164": {
      "branch": 23,
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2165": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2167": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2176": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2179": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2181": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2182": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "ADD",
      "path": "0"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "PUSH32",
      "value": "0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2226": {
      "op": "DUP3"
    },
    "2227": {
      "op": "ADD"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "2235": {
      "op": "JUMP"
    },
    "2236": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3640,
        3687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2237": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3704,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x3"
    },
    "2239": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2240": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2241": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2242": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2244": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2245": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2247": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2248": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2250": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2251": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2252": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2253": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2254": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2256": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2257": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2258": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2259": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2260": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2261": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2262": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2263": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2264": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2266": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2267": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2269": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2270": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2271": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2272": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2273": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "LT",
      "path": "0"
    },
    "2274": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2275": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CD"
    },
    "2278": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2279": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2280": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2281": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2282": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2284": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2287": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2289": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2290": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2291": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2293": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2294": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2295": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2297": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2298": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2299": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2301": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2302": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2304": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2305": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2306": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2307": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2309": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2310": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2311": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2312": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2313": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x911"
    },
    "2316": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2317": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2320": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2321": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2322": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2323": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2325": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2326": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2328": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2329": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2330": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DIV",
      "path": "0"
    },
    "2331": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2332": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2334": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2335": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2337": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2338": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2339": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2340": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2341": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2343": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2344": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2345": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2346": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2347": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2348": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2349": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2350": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2351": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2353": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2354": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2355": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2356": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2357": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93D"
    },
    "2360": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2361": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2364": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2365": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2366": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2367": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2368": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "2371": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2372": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2373": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2375": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "LT",
      "path": "0"
    },
    "2376": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95F"
    },
    "2379": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2380": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2383": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2384": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2385": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2386": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DIV",
      "path": "0"
    },
    "2387": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2388": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2389": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2390": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2391": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2393": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2394": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2395": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98A"
    },
    "2398": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2399": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2400": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2401": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2402": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2403": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2404": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2406": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2407": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2409": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2411": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2412": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2413": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2414": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2415": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2416": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2417": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2418": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2419": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2421": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2422": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2425": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2426": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2427": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2428": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "GT",
      "path": "0"
    },
    "2429": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96D"
    },
    "2432": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2433": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2434": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2435": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SUB",
      "path": "0"
    },
    "2436": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2438": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "AND",
      "path": "0"
    },
    "2439": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2440": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2441": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2442": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2443": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2444": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2445": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2446": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2447": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2448": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2449": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2450": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2452": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2453": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2455": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2456": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2457": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2458": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2459": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A3"
    },
    "2462": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2463": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2466": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2467": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2468": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2469": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2471": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2472": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2474": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2475": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2476": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DIV",
      "path": "0"
    },
    "2477": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2478": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2480": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2481": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2483": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2484": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2485": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2486": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2487": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2489": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2490": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2491": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2492": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2493": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2494": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2495": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2496": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2497": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2499": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2500": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2501": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2502": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2503": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CF"
    },
    "2506": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2507": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2510": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2511": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2512": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2513": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2514": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1C"
    },
    "2517": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2518": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2519": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2521": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "LT",
      "path": "0"
    },
    "2522": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F1"
    },
    "2525": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2526": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2529": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2530": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2531": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2532": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DIV",
      "path": "0"
    },
    "2533": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2534": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2535": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2536": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2537": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2539": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2540": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2541": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1C"
    },
    "2544": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2545": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2547": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2548": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2549": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2550": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2552": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2553": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2555": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2557": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2558": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2559": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2560": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2561": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2562": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2563": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2564": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2565": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2567": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2568": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2569": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2571": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2572": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2573": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2574": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "GT",
      "path": "0"
    },
    "2575": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FF"
    },
    "2578": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2579": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2580": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2581": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SUB",
      "path": "0"
    },
    "2582": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2584": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "AND",
      "path": "0"
    },
    "2585": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2586": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2587": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2588": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2589": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2590": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2591": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2592": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2593": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "POP",
      "path": "0"
    },
    "2594": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2595": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2596": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2598": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2599": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2601": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2602": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2603": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2604": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2605": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA35"
    },
    "2608": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2609": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2612": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2613": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2614": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2615": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2617": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2618": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2620": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2621": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2622": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DIV",
      "path": "0"
    },
    "2623": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2624": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2626": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2627": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2629": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2630": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2631": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2632": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2633": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2635": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2636": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2637": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2638": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2639": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2640": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2641": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2642": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2643": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2645": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2646": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2647": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2648": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2649": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA61"
    },
    "2652": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2653": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E8"
    },
    "2656": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2657": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2658": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2659": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2660": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAE"
    },
    "2663": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2664": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2665": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2667": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "LT",
      "path": "0"
    },
    "2668": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA83"
    },
    "2671": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2672": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2675": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2676": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2677": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2678": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DIV",
      "path": "0"
    },
    "2679": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MUL",
      "path": "0"
    },
    "2680": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2681": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2682": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2683": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2685": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2686": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2687": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAE"
    },
    "2690": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2691": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2692": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2693": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2694": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2695": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2696": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2698": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2699": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2701": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2703": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2704": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2705": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2706": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2707": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2708": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2709": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2710": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2711": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2713": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2714": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2715": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2717": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2718": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2719": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2720": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "GT",
      "path": "0"
    },
    "2721": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA91"
    },
    "2724": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2725": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2726": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2727": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SUB",
      "path": "0"
    },
    "2728": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2730": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "AND",
      "path": "0"
    },
    "2731": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2732": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2733": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2734": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2739": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2740": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2741": {
      "op": "POP"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2745": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2746": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2747": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2748": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2750": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2751": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2752": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2753": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2754": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2755": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2756": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2757": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2759": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2760": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2761": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2762": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2763": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2765": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "AND",
      "path": "0"
    },
    "2766": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2767": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2768": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2770": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2771": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2772": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2773": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2774": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2775": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2776": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2777": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2779": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2780": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2781": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2782": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2783": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2784": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "ADD",
      "path": "0"
    },
    "2785": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DE"
    },
    "2788": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3697,
        3714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2789": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2790": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "2792": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2793": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2794": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2795": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2797": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2799": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2800": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2802": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2803": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2804": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2805": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2807": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2808": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2809": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2810": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1468
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2811": {
      "fn": "Voting.createVoter",
      "offset": [
        1469,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2812": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2813": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "LT",
      "path": "0"
    },
    "2814": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB17"
    },
    "2817": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2818": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2828": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2829": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2831": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2833": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2834": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2836": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2838": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2839": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2840": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2841": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2843": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2844": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2846": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2848": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2849": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2850": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2852": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "MUL",
      "path": "0"
    },
    "2853": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1485
      ],
      "op": "ADD",
      "path": "0"
    },
    "2854": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2856": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "ADD",
      "path": "0"
    },
    "2857": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2859": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2860": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2861": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2862": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2865": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "EXP",
      "path": "0"
    },
    "2866": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2867": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "DIV",
      "path": "0"
    },
    "2868": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2870": {
      "fn": "Voting.createVoter",
      "offset": [
        1462,
        1492
      ],
      "op": "AND",
      "path": "0"
    },
    "2871": {
      "branch": 24,
      "fn": "Voting.createVoter",
      "offset": [
        1461,
        1492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2872": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB83"
    },
    "2875": {
      "branch": 24,
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2876": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2878": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2887": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2890": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2892": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2893": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "ADD",
      "path": "0"
    },
    "2894": {
      "op": "DUP2"
    },
    "2895": {
      "op": "SWAP1"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2899": {
      "op": "DUP3"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "op": "MSTORE"
    },
    "2902": {
      "op": "PUSH32",
      "value": "0x566F74657220696420697320616C72656164792072656769737465726564212E"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2937": {
      "op": "DUP3"
    },
    "2938": {
      "op": "ADD"
    },
    "2939": {
      "op": "MSTORE"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2942": {
      "op": "ADD"
    },
    "2943": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "2946": {
      "op": "JUMP"
    },
    "2947": {
      "fn": "Voting.createVoter",
      "offset": [
        1453,
        1529
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2948": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "2950": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2951": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2952": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2954": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2955": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "2956": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2957": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2958": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2959": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2960": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2961": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2963": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2964": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2965": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "2966": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2967": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2968": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2969": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2970": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2971": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "2972": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2973": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2974": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2975": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2977": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2979": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2980": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "2981": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2982": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2983": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2984": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2986": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2987": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "ADD",
      "path": "0"
    },
    "2988": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2989": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2990": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2991": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2992": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2993": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2994": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2995": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "2996": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2997": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3000": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3001": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3002": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3003": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3004": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3005": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3006": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3007": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3008": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3009": {
      "fn": "Voting.createVoter",
      "offset": [
        1551,
        1595
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3010": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3012": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3013": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3014": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MUL",
      "path": "0"
    },
    "3015": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "3048": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3049": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3050": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF6"
    },
    "3053": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3054": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3055": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3056": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3057": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3058": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "3061": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3062": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3066": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3067": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3068": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3069": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3070": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3072": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3073": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3074": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3075": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3077": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3078": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3079": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3080": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3081": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3082": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC19"
    },
    "3085": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3086": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3088": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3089": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3090": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3091": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3092": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3093": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111A"
    },
    "3096": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3097": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3098": {
      "op": "POP"
    },
    "3099": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3101": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3102": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3103": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3104": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3106": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3107": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3108": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3109": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3110": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3111": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3113": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3114": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3115": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ADD",
      "path": "0"
    },
    "3116": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3117": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3118": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3119": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3122": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "MUL",
      "path": "0"
    },
    "3123": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3126": {
      "op": "NOT"
    },
    "3127": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3128": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3129": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3130": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3131": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3132": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3133": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "AND",
      "path": "0"
    },
    "3134": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3137": {
      "op": "NOT"
    },
    "3138": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3139": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3140": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "AND",
      "path": "0"
    },
    "3141": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3142": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3143": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3144": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "OR",
      "path": "0"
    },
    "3145": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "OR",
      "path": "0"
    },
    "3146": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3147": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3148": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3150": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1637
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "3151": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1637
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3152": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC59"
    },
    "3155": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3156": {
      "fn": "Voting.createVoter",
      "offset": [
        1539,
        1596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3157": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A1"
    },
    "3160": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1624,
        1641
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3161": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3162": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3164": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3165": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3166": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3167": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3169": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3171": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3172": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3174": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3175": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3176": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3177": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1621
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3178": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3179": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3180": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3181": {
      "fn": "Voting.createVoter",
      "offset": [
        1606,
        1641
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3182": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 13
    },
    "3183": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A"
    },
    "3216": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3217": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9D"
    },
    "3220": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3221": {
      "fn": "Voting.createVoter",
      "offset": [
        1676,
        1681
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3222": {
      "fn": "Voting.createVoter",
      "offset": [
        1676,
        1681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3223": {
      "fn": "Voting.createVoter",
      "offset": [
        1683,
        1696
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3224": {
      "fn": "Voting.createVoter",
      "offset": [
        1683,
        1696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3225": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F9"
    },
    "3228": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1665,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3229": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3230": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3232": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3233": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3234": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3235": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SUB",
      "path": "0"
    },
    "3236": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3237": {
      "fn": "Voting.createVoter",
      "offset": [
        1665,
        1697
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3238": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "POP",
      "path": "0"
    },
    "3239": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "POP",
      "path": "0"
    },
    "3240": {
      "fn": "Voting.createVoter",
      "offset": [
        1355,
        1704
      ],
      "op": "POP",
      "path": "0"
    },
    "3241": {
      "fn": "Voting.createVoter",
      "jump": "o",
      "offset": [
        1355,
        1704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3242": {
      "fn": "Voting.vote",
      "offset": [
        2705,
        3551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3243": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "3245": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3246": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3247": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3248": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3250": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3252": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3253": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3255": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3256": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3257": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3258": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3260": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3261": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3262": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3263": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2839
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3264": {
      "fn": "Voting.vote",
      "offset": [
        2840,
        2860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3265": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3266": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "LT",
      "path": "0"
    },
    "3267": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDC"
    },
    "3270": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3271": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3278": {
      "op": "SHL"
    },
    "3279": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3281": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3282": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3284": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3286": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3287": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3289": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3291": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3292": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3293": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3294": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3296": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3297": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3299": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3301": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3302": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3303": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3305": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "MUL",
      "path": "0"
    },
    "3306": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2861
      ],
      "op": "ADD",
      "path": "0"
    },
    "3307": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3309": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "ADD",
      "path": "0"
    },
    "3310": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3312": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3313": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3314": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3315": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3318": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "EXP",
      "path": "0"
    },
    "3319": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3320": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "DIV",
      "path": "0"
    },
    "3321": {
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3323": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2833,
        2868
      ],
      "op": "AND",
      "path": "0"
    },
    "3324": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD47"
    },
    "3327": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3328": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3330": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3337": {
      "op": "SHL"
    },
    "3338": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3339": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3342": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3344": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3345": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "ADD",
      "path": "0"
    },
    "3346": {
      "op": "MSTORE"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3351": {
      "op": "DUP3"
    },
    "3352": {
      "op": "ADD"
    },
    "3353": {
      "op": "MSTORE"
    },
    "3354": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3394": {
      "op": "ADD"
    },
    "3395": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3398": {
      "op": "JUMP"
    },
    "3399": {
      "fn": "Voting.vote",
      "offset": [
        2825,
        2904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3400": {
      "fn": "Voting.vote",
      "offset": [
        2922,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "3402": {
      "fn": "Voting.vote",
      "offset": [
        2922,
        2932
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "fn": "Voting.vote",
      "offset": [
        2922,
        2932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3409": {
      "fn": "Voting.vote",
      "offset": [
        2922,
        2932
      ],
      "op": "DIV",
      "path": "0"
    },
    "3410": {
      "fn": "Voting.vote",
      "offset": [
        2922,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3412": {
      "branch": 26,
      "fn": "Voting.vote",
      "offset": [
        2922,
        2932
      ],
      "op": "AND",
      "path": "0"
    },
    "3413": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA0"
    },
    "3416": {
      "branch": 26,
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3417": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3419": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3428": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3431": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3433": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3434": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "ADD",
      "path": "0"
    },
    "3435": {
      "op": "MSTORE"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3440": {
      "op": "DUP3"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "MSTORE"
    },
    "3443": {
      "op": "PUSH32",
      "value": "0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3478": {
      "op": "DUP3"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3487": {
      "op": "JUMP"
    },
    "3488": {
      "fn": "Voting.vote",
      "offset": [
        2914,
        2967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3489": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "3491": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3492": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3493": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3494": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3496": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3498": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3499": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3501": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3502": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3503": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3504": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        2991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3506": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3507": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3508": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        2991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3509": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        2991
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3510": {
      "fn": "Voting.vote",
      "offset": [
        2992,
        3012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3511": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3512": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "LT",
      "path": "0"
    },
    "3513": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD2"
    },
    "3516": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3517": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3524": {
      "op": "SHL"
    },
    "3525": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3527": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3528": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3530": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3532": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3533": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3535": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3537": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3538": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3539": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3541": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3542": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3543": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3544": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3546": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3547": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3548": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3549": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3551": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3553": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3554": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3555": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "MUL",
      "path": "0"
    },
    "3556": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3013
      ],
      "op": "ADD",
      "path": "0"
    },
    "3557": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3021
      ],
      "op": "ADD",
      "path": "0"
    },
    "3558": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3559": {
      "fn": "Voting.vote",
      "offset": [
        2985,
        3021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3561": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        2985,
        3021
      ],
      "op": "AND",
      "path": "0"
    },
    "3562": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE35"
    },
    "3565": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3566": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3568": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3575": {
      "op": "SHL"
    },
    "3576": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3577": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3580": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3582": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3583": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "ADD",
      "path": "0"
    },
    "3584": {
      "op": "MSTORE"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3589": {
      "op": "DUP3"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "op": "MSTORE"
    },
    "3592": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3627": {
      "op": "DUP3"
    },
    "3628": {
      "op": "ADD"
    },
    "3629": {
      "op": "MSTORE"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3632": {
      "op": "ADD"
    },
    "3633": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3636": {
      "op": "JUMP"
    },
    "3637": {
      "fn": "Voting.vote",
      "offset": [
        2977,
        3051
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3638": {
      "fn": "Voting.vote",
      "offset": [
        3061,
        3072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3640": {
      "fn": "Voting.vote",
      "offset": [
        3075,
        3121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE42"
    },
    "3643": {
      "fn": "Voting.vote",
      "offset": [
        3089,
        3096
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3644": {
      "fn": "Voting.vote",
      "offset": [
        3098,
        3111
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3645": {
      "fn": "Voting.vote",
      "offset": [
        3113,
        3120
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3646": {
      "fn": "Voting.vote",
      "offset": [
        3075,
        3088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "3649": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3075,
        3121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3650": {
      "fn": "Voting.vote",
      "offset": [
        3075,
        3121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3651": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "3653": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3654": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3655": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3656": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3658": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3660": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3661": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3663": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3664": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3665": {
      "fn": "Voting.vote",
      "offset": [
        3150,
        3164
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3666": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3668": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3669": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3670": {
      "fn": "Voting.vote",
      "offset": [
        3061,
        3121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3671": {
      "fn": "Voting.vote",
      "offset": [
        3061,
        3121
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3672": {
      "op": "POP"
    },
    "3673": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3149
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3674": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3675": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "LT",
      "path": "0"
    },
    "3676": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE75"
    },
    "3679": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3680": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3690": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3691": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3693": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3695": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3696": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3698": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3700": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3701": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3702": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3704": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3705": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3706": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3707": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3709": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3710": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3711": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3712": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3714": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3716": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3717": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3718": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "MUL",
      "path": "0"
    },
    "3719": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3165
      ],
      "op": "ADD",
      "path": "0"
    },
    "3720": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3172
      ],
      "op": "ADD",
      "path": "0"
    },
    "3721": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3172
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3722": {
      "fn": "Voting.vote",
      "offset": [
        3139,
        3172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3724": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3139,
        3172
      ],
      "op": "AND",
      "path": "0"
    },
    "3725": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED8"
    },
    "3728": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3729": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3731": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3740": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3743": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3745": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3746": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "ADD",
      "path": "0"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3752": {
      "op": "DUP3"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "op": "PUSH32",
      "value": "0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3790": {
      "op": "DUP3"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3795": {
      "op": "ADD"
    },
    "3796": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "3799": {
      "op": "JUMP"
    },
    "3800": {
      "fn": "Voting.vote",
      "offset": [
        3131,
        3206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3801": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "3803": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3804": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3805": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3806": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3808": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3810": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3811": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3813": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3814": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3815": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3816": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3818": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3819": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3820": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3821": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3329
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3822": {
      "fn": "Voting.vote",
      "offset": [
        3330,
        3350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3823": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3824": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "LT",
      "path": "0"
    },
    "3825": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0A"
    },
    "3828": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3829": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3839": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3840": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3842": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3844": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3845": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3847": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3849": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3850": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3851": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3852": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3854": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3855": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3857": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3859": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3860": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3861": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3863": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "MUL",
      "path": "0"
    },
    "3864": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3351
      ],
      "op": "ADD",
      "path": "0"
    },
    "3865": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3867": {
      "fn": "Voting.vote",
      "offset": [
        3323,
        3364
      ],
      "op": "ADD",
      "path": "0"
    },
    "3868": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3870": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3871": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3873": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "ADD",
      "path": "0"
    },
    "3874": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2B"
    },
    "3877": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3878": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3879": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140E"
    },
    "3882": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3306,
        3365
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3883": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3884": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3886": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3887": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3889": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3890": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3891": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "SUB",
      "path": "0"
    },
    "3892": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "SUB",
      "path": "0"
    },
    "3893": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3894": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3895": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3896": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3898": {
      "fn": "Voting.vote",
      "offset": [
        3306,
        3365
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3899": {
      "fn": "Voting.vote",
      "offset": [
        3296,
        3366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3900": {
      "fn": "Voting.vote",
      "offset": [
        3296,
        3366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3901": {
      "fn": "Voting.vote",
      "offset": [
        3296,
        3366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3902": {
      "fn": "Voting.vote",
      "offset": [
        3296,
        3366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3904": {
      "fn": "Voting.vote",
      "offset": [
        3296,
        3366
      ],
      "op": "ADD",
      "path": "0"
    },
    "3905": {
      "fn": "Voting.vote",
      "offset": [
        3296,
        3366
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3906": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3908": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3910": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3912": {
      "fn": "Voting.vote",
      "offset": [
        3269,
        3275
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3913": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3914": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3915": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3917": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "ADD",
      "path": "0"
    },
    "3918": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3919": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3920": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3921": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3923": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "ADD",
      "path": "0"
    },
    "3924": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3926": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3927": {
      "fn": "Voting.vote",
      "offset": [
        3262,
        3276
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3928": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3929": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3930": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3931": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "LT",
      "path": "0"
    },
    "3932": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF75"
    },
    "3935": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3936": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3943": {
      "op": "SHL"
    },
    "3944": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3946": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3947": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3949": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3951": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3952": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3954": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3956": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3957": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3958": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3959": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3961": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3962": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3964": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3966": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3967": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3968": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3970": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "MUL",
      "path": "0"
    },
    "3971": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3277
      ],
      "op": "ADD",
      "path": "0"
    },
    "3972": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3974": {
      "fn": "Voting.vote",
      "offset": [
        3251,
        3290
      ],
      "op": "ADD",
      "path": "0"
    },
    "3975": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3977": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3978": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3980": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "ADD",
      "path": "0"
    },
    "3981": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF96"
    },
    "3984": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3985": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3986": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140E"
    },
    "3989": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3234,
        3291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3990": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3991": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3993": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3994": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3996": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3997": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3998": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "SUB",
      "path": "0"
    },
    "3999": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "SUB",
      "path": "0"
    },
    "4000": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4001": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4002": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4003": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4005": {
      "fn": "Voting.vote",
      "offset": [
        3234,
        3291
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4006": {
      "fn": "Voting.vote",
      "offset": [
        3224,
        3292
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4007": {
      "fn": "Voting.vote",
      "offset": [
        3224,
        3292
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4008": {
      "fn": "Voting.vote",
      "offset": [
        3224,
        3292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4009": {
      "fn": "Voting.vote",
      "offset": [
        3224,
        3292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4011": {
      "fn": "Voting.vote",
      "offset": [
        3224,
        3292
      ],
      "op": "ADD",
      "path": "0"
    },
    "4012": {
      "fn": "Voting.vote",
      "offset": [
        3224,
        3292
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4013": {
      "branch": 29,
      "fn": "Voting.vote",
      "offset": [
        3224,
        3366
      ],
      "op": "EQ",
      "path": "0"
    },
    "4014": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102E"
    },
    "4017": {
      "branch": 29,
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4018": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4020": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4027": {
      "op": "SHL"
    },
    "4028": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4029": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4032": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4034": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4035": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "ADD",
      "path": "0"
    },
    "4036": {
      "op": "MSTORE"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4041": {
      "op": "DUP3"
    },
    "4042": {
      "op": "ADD"
    },
    "4043": {
      "op": "MSTORE"
    },
    "4044": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4079": {
      "op": "DUP3"
    },
    "4080": {
      "op": "ADD"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH32",
      "value": "0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4117": {
      "op": "DUP3"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "MSTORE"
    },
    "4120": {
      "op": "PUSH6",
      "value": "0x3AB2B731BC97"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4132": {
      "op": "DUP3"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "MSTORE"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4137": {
      "op": "ADD"
    },
    "4138": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "4141": {
      "op": "JUMP"
    },
    "4142": {
      "fn": "Voting.vote",
      "offset": [
        3216,
        3441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4143": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "4145": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4146": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4147": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4148": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4150": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4152": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4153": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4155": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4156": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4157": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4158": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4160": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4161": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4162": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4163": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4164": {
      "fn": "Voting.vote",
      "offset": [
        3462,
        3476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4165": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4166": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "LT",
      "path": "0"
    },
    "4167": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1060"
    },
    "4170": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4171": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4181": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4182": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4184": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4186": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4187": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4189": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4191": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4192": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4193": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4195": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4196": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4197": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4198": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4200": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4201": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4202": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4204": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4206": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4207": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4208": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "MUL",
      "path": "0"
    },
    "4209": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3477
      ],
      "op": "ADD",
      "path": "0"
    },
    "4210": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3487
      ],
      "op": "ADD",
      "path": "0"
    },
    "4211": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4212": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4213": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4214": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107E"
    },
    "4217": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4218": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1723"
    },
    "4221": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3451,
        3489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4222": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4223": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4224": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4225": {
      "fn": "Voting.vote",
      "offset": [
        3451,
        3489
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "fn": "Voting.vote",
      "offset": [
        3539,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "4230": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4231": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4232": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4233": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4235": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4237": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4238": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4240": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4241": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4242": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4243": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4245": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4246": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4247": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4248": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4249": {
      "fn": "Voting.vote",
      "offset": [
        3507,
        3527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4250": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4251": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "LT",
      "path": "0"
    },
    "4252": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B5"
    },
    "4255": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4256": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4263": {
      "op": "SHL"
    },
    "4264": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4266": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4267": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4269": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4271": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4272": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4274": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4276": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4277": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4278": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4280": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4281": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4282": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4283": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4285": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4286": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4287": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4288": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4290": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4291": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4292": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "MUL",
      "path": "0"
    },
    "4293": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3528
      ],
      "op": "ADD",
      "path": "0"
    },
    "4294": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4296": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3536
      ],
      "op": "ADD",
      "path": "0"
    },
    "4297": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4298": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4301": {
      "op": "NOT"
    },
    "4302": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "AND",
      "path": "0"
    },
    "4303": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4304": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4305": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4306": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4307": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4308": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4309": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "OR",
      "path": "0"
    },
    "4310": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4311": {
      "fn": "Voting.vote",
      "offset": [
        3500,
        3544
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "fn": "Voting.vote",
      "jump": "o",
      "offset": [
        2705,
        3551
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4318": {
      "fn": "Voting.getElectionState",
      "offset": [
        3731,
        3829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4319": {
      "fn": "Voting.getElectionState",
      "offset": [
        3790,
        3794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4321": {
      "offset": [
        153,
        165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4322": {
      "fn": "Voting.getElectionState",
      "offset": [
        153,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "SUB"
    },
    "4331": {
      "offset": [
        153,
        165
      ],
      "op": "AND",
      "path": "0"
    },
    "4332": {
      "offset": [
        139,
        149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4333": {
      "offset": [
        139,
        165
      ],
      "op": "EQ",
      "path": "0"
    },
    "4334": {
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1109"
    },
    "4337": {
      "offset": [
        131,
        199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4338": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4340": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4347": {
      "op": "SHL"
    },
    "4348": {
      "offset": [
        131,
        199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4349": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4350": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4352": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "ADD",
      "path": "0"
    },
    "4353": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "4356": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4357": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166A"
    },
    "4360": {
      "fn": "Voting.getElectionState",
      "jump": "i",
      "offset": [
        131,
        199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4361": {
      "fn": "Voting.getElectionState",
      "offset": [
        131,
        199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "4365": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4370": {
      "op": "SHL"
    },
    "4371": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4372": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "DIV",
      "path": "0"
    },
    "4373": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4375": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "AND",
      "path": "0"
    },
    "4376": {
      "fn": "Voting.getElectionState",
      "offset": [
        3812,
        3822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4377": {
      "fn": "Voting.getElectionState",
      "jump": "o",
      "offset": [
        3731,
        3829
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4378": {
      "op": "JUMPDEST"
    },
    "4379": {
      "op": "DUP3"
    },
    "4380": {
      "op": "DUP1"
    },
    "4381": {
      "op": "SLOAD"
    },
    "4382": {
      "op": "PUSH2",
      "value": "0x1126"
    },
    "4385": {
      "op": "SWAP1"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0x16E8"
    },
    "4389": {
      "jump": "i",
      "op": "JUMP"
    },
    "4390": {
      "op": "JUMPDEST"
    },
    "4391": {
      "op": "SWAP1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4394": {
      "op": "MSTORE"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4399": {
      "op": "KECCAK256"
    },
    "4400": {
      "op": "SWAP1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4403": {
      "op": "ADD"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "SWAP1"
    },
    "4407": {
      "op": "DIV"
    },
    "4408": {
      "op": "DUP2"
    },
    "4409": {
      "op": "ADD"
    },
    "4410": {
      "op": "SWAP3"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "PUSH2",
      "value": "0x1148"
    },
    "4415": {
      "op": "JUMPI"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4418": {
      "op": "DUP6"
    },
    "4419": {
      "op": "SSTORE"
    },
    "4420": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4423": {
      "op": "JUMP"
    },
    "4424": {
      "op": "JUMPDEST"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4428": {
      "op": "LT"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x1161"
    },
    "4432": {
      "op": "JUMPI"
    },
    "4433": {
      "op": "DUP1"
    },
    "4434": {
      "op": "MLOAD"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4437": {
      "op": "NOT"
    },
    "4438": {
      "op": "AND"
    },
    "4439": {
      "op": "DUP4"
    },
    "4440": {
      "op": "DUP1"
    },
    "4441": {
      "op": "ADD"
    },
    "4442": {
      "op": "OR"
    },
    "4443": {
      "op": "DUP6"
    },
    "4444": {
      "op": "SSTORE"
    },
    "4445": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4448": {
      "op": "JUMP"
    },
    "4449": {
      "op": "JUMPDEST"
    },
    "4450": {
      "op": "DUP3"
    },
    "4451": {
      "op": "DUP1"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4455": {
      "op": "ADD"
    },
    "4456": {
      "op": "DUP6"
    },
    "4457": {
      "op": "SSTORE"
    },
    "4458": {
      "op": "DUP3"
    },
    "4459": {
      "op": "ISZERO"
    },
    "4460": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4463": {
      "op": "JUMPI"
    },
    "4464": {
      "op": "SWAP2"
    },
    "4465": {
      "op": "DUP3"
    },
    "4466": {
      "op": "ADD"
    },
    "4467": {
      "op": "JUMPDEST"
    },
    "4468": {
      "op": "DUP3"
    },
    "4469": {
      "op": "DUP2"
    },
    "4470": {
      "op": "GT"
    },
    "4471": {
      "op": "ISZERO"
    },
    "4472": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4475": {
      "op": "JUMPI"
    },
    "4476": {
      "op": "DUP3"
    },
    "4477": {
      "op": "MLOAD"
    },
    "4478": {
      "op": "DUP3"
    },
    "4479": {
      "op": "SSTORE"
    },
    "4480": {
      "op": "SWAP2"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4483": {
      "op": "ADD"
    },
    "4484": {
      "op": "SWAP2"
    },
    "4485": {
      "op": "SWAP1"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "SWAP1"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0x1173"
    },
    "4493": {
      "op": "JUMP"
    },
    "4494": {
      "op": "JUMPDEST"
    },
    "4495": {
      "op": "POP"
    },
    "4496": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4499": {
      "op": "SWAP3"
    },
    "4500": {
      "op": "SWAP2"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x119E"
    },
    "4505": {
      "jump": "i",
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "SWAP1"
    },
    "4509": {
      "jump": "o",
      "op": "JUMP"
    },
    "4510": {
      "op": "JUMPDEST"
    },
    "4511": {
      "op": "JUMPDEST"
    },
    "4512": {
      "op": "DUP1"
    },
    "4513": {
      "op": "DUP3"
    },
    "4514": {
      "op": "GT"
    },
    "4515": {
      "op": "ISZERO"
    },
    "4516": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4519": {
      "op": "JUMPI"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4522": {
      "op": "DUP2"
    },
    "4523": {
      "op": "SSTORE"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4526": {
      "op": "ADD"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "4530": {
      "op": "JUMP"
    },
    "4531": {
      "op": "JUMPDEST"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4534": {
      "op": "DUP3"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4537": {
      "op": "DUP4"
    },
    "4538": {
      "op": "ADD"
    },
    "4539": {
      "op": "SLT"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "4543": {
      "op": "JUMPI"
    },
    "4544": {
      "op": "DUP1"
    },
    "4545": {
      "op": "DUP2"
    },
    "4546": {
      "op": "REVERT"
    },
    "4547": {
      "op": "JUMPDEST"
    },
    "4548": {
      "op": "DUP2"
    },
    "4549": {
      "op": "CALLDATALOAD"
    },
    "4550": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4559": {
      "op": "DUP1"
    },
    "4560": {
      "op": "DUP3"
    },
    "4561": {
      "op": "GT"
    },
    "4562": {
      "op": "ISZERO"
    },
    "4563": {
      "op": "PUSH2",
      "value": "0x11DE"
    },
    "4566": {
      "op": "JUMPI"
    },
    "4567": {
      "op": "PUSH2",
      "value": "0x11DE"
    },
    "4570": {
      "op": "PUSH2",
      "value": "0x1754"
    },
    "4573": {
      "jump": "i",
      "op": "JUMP"
    },
    "4574": {
      "op": "JUMPDEST"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4577": {
      "op": "MLOAD"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4580": {
      "op": "DUP4"
    },
    "4581": {
      "op": "ADD"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4584": {
      "op": "NOT"
    },
    "4585": {
      "op": "SWAP1"
    },
    "4586": {
      "op": "DUP2"
    },
    "4587": {
      "op": "AND"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4590": {
      "op": "ADD"
    },
    "4591": {
      "op": "AND"
    },
    "4592": {
      "op": "DUP2"
    },
    "4593": {
      "op": "ADD"
    },
    "4594": {
      "op": "SWAP1"
    },
    "4595": {
      "op": "DUP3"
    },
    "4596": {
      "op": "DUP3"
    },
    "4597": {
      "op": "GT"
    },
    "4598": {
      "op": "DUP2"
    },
    "4599": {
      "op": "DUP4"
    },
    "4600": {
      "op": "LT"
    },
    "4601": {
      "op": "OR"
    },
    "4602": {
      "op": "ISZERO"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4606": {
      "op": "JUMPI"
    },
    "4607": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4610": {
      "op": "PUSH2",
      "value": "0x1754"
    },
    "4613": {
      "jump": "i",
      "op": "JUMP"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "op": "DUP2"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4618": {
      "op": "MSTORE"
    },
    "4619": {
      "op": "DUP4"
    },
    "4620": {
      "op": "DUP2"
    },
    "4621": {
      "op": "MSTORE"
    },
    "4622": {
      "op": "DUP7"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4625": {
      "op": "DUP6"
    },
    "4626": {
      "op": "DUP9"
    },
    "4627": {
      "op": "ADD"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "op": "GT"
    },
    "4630": {
      "op": "ISZERO"
    },
    "4631": {
      "op": "PUSH2",
      "value": "0x121E"
    },
    "4634": {
      "op": "JUMPI"
    },
    "4635": {
      "op": "DUP5"
    },
    "4636": {
      "op": "DUP6"
    },
    "4637": {
      "op": "REVERT"
    },
    "4638": {
      "op": "JUMPDEST"
    },
    "4639": {
      "op": "DUP4"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4642": {
      "op": "DUP8"
    },
    "4643": {
      "op": "ADD"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4646": {
      "op": "DUP4"
    },
    "4647": {
      "op": "ADD"
    },
    "4648": {
      "op": "CALLDATACOPY"
    },
    "4649": {
      "op": "SWAP3"
    },
    "4650": {
      "op": "DUP4"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4654": {
      "op": "ADD"
    },
    "4655": {
      "op": "SWAP4"
    },
    "4656": {
      "op": "SWAP1"
    },
    "4657": {
      "op": "SWAP4"
    },
    "4658": {
      "op": "MSTORE"
    },
    "4659": {
      "op": "POP"
    },
    "4660": {
      "op": "SWAP4"
    },
    "4661": {
      "op": "SWAP3"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "jump": "o",
      "op": "JUMP"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4669": {
      "op": "DUP1"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4674": {
      "op": "DUP5"
    },
    "4675": {
      "op": "DUP7"
    },
    "4676": {
      "op": "SUB"
    },
    "4677": {
      "op": "SLT"
    },
    "4678": {
      "op": "ISZERO"
    },
    "4679": {
      "op": "PUSH2",
      "value": "0x124E"
    },
    "4682": {
      "op": "JUMPI"
    },
    "4683": {
      "op": "DUP3"
    },
    "4684": {
      "op": "DUP4"
    },
    "4685": {
      "op": "REVERT"
    },
    "4686": {
      "op": "JUMPDEST"
    },
    "4687": {
      "op": "DUP4"
    },
    "4688": {
      "op": "CALLDATALOAD"
    },
    "4689": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4698": {
      "op": "DUP1"
    },
    "4699": {
      "op": "DUP3"
    },
    "4700": {
      "op": "GT"
    },
    "4701": {
      "op": "ISZERO"
    },
    "4702": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4705": {
      "op": "JUMPI"
    },
    "4706": {
      "op": "DUP5"
    },
    "4707": {
      "op": "DUP6"
    },
    "4708": {
      "op": "REVERT"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4713": {
      "op": "DUP8"
    },
    "4714": {
      "op": "DUP4"
    },
    "4715": {
      "op": "DUP9"
    },
    "4716": {
      "op": "ADD"
    },
    "4717": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4720": {
      "jump": "i",
      "op": "JUMP"
    },
    "4721": {
      "op": "JUMPDEST"
    },
    "4722": {
      "op": "SWAP5"
    },
    "4723": {
      "op": "POP"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4726": {
      "op": "DUP7"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "op": "CALLDATALOAD"
    },
    "4729": {
      "op": "SWAP2"
    },
    "4730": {
      "op": "POP"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "GT"
    },
    "4734": {
      "op": "ISZERO"
    },
    "4735": {
      "op": "PUSH2",
      "value": "0x1286"
    },
    "4738": {
      "op": "JUMPI"
    },
    "4739": {
      "op": "DUP4"
    },
    "4740": {
      "op": "DUP5"
    },
    "4741": {
      "op": "REVERT"
    },
    "4742": {
      "op": "JUMPDEST"
    },
    "4743": {
      "op": "PUSH2",
      "value": "0x1292"
    },
    "4746": {
      "op": "DUP8"
    },
    "4747": {
      "op": "DUP4"
    },
    "4748": {
      "op": "DUP9"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4753": {
      "jump": "i",
      "op": "JUMP"
    },
    "4754": {
      "op": "JUMPDEST"
    },
    "4755": {
      "op": "SWAP4"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4759": {
      "op": "DUP7"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "CALLDATALOAD"
    },
    "4762": {
      "op": "SWAP2"
    },
    "4763": {
      "op": "POP"
    },
    "4764": {
      "op": "DUP1"
    },
    "4765": {
      "op": "DUP3"
    },
    "4766": {
      "op": "GT"
    },
    "4767": {
      "op": "ISZERO"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x12A7"
    },
    "4771": {
      "op": "JUMPI"
    },
    "4772": {
      "op": "DUP3"
    },
    "4773": {
      "op": "DUP4"
    },
    "4774": {
      "op": "REVERT"
    },
    "4775": {
      "op": "JUMPDEST"
    },
    "4776": {
      "op": "POP"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x12B4"
    },
    "4780": {
      "op": "DUP7"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "DUP8"
    },
    "4783": {
      "op": "ADD"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4787": {
      "jump": "i",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "SWAP2"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "op": "POP"
    },
    "4792": {
      "op": "SWAP3"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "op": "SWAP3"
    },
    "4795": {
      "op": "POP"
    },
    "4796": {
      "op": "SWAP3"
    },
    "4797": {
      "jump": "o",
      "op": "JUMP"
    },
    "4798": {
      "op": "JUMPDEST"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4801": {
      "op": "DUP1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4806": {
      "op": "DUP5"
    },
    "4807": {
      "op": "DUP7"
    },
    "4808": {
      "op": "SUB"
    },
    "4809": {
      "op": "SLT"
    },
    "4810": {
      "op": "ISZERO"
    },
    "4811": {
      "op": "PUSH2",
      "value": "0x12D2"
    },
    "4814": {
      "op": "JUMPI"
    },
    "4815": {
      "op": "DUP3"
    },
    "4816": {
      "op": "DUP4"
    },
    "4817": {
      "op": "REVERT"
    },
    "4818": {
      "op": "JUMPDEST"
    },
    "4819": {
      "op": "DUP4"
    },
    "4820": {
      "op": "CALLDATALOAD"
    },
    "4821": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4830": {
      "op": "DUP1"
    },
    "4831": {
      "op": "DUP3"
    },
    "4832": {
      "op": "GT"
    },
    "4833": {
      "op": "ISZERO"
    },
    "4834": {
      "op": "PUSH2",
      "value": "0x12E9"
    },
    "4837": {
      "op": "JUMPI"
    },
    "4838": {
      "op": "DUP5"
    },
    "4839": {
      "op": "DUP6"
    },
    "4840": {
      "op": "REVERT"
    },
    "4841": {
      "op": "JUMPDEST"
    },
    "4842": {
      "op": "PUSH2",
      "value": "0x12F5"
    },
    "4845": {
      "op": "DUP8"
    },
    "4846": {
      "op": "DUP4"
    },
    "4847": {
      "op": "DUP9"
    },
    "4848": {
      "op": "ADD"
    },
    "4849": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4852": {
      "jump": "i",
      "op": "JUMP"
    },
    "4853": {
      "op": "JUMPDEST"
    },
    "4854": {
      "op": "SWAP5"
    },
    "4855": {
      "op": "POP"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4858": {
      "op": "DUP7"
    },
    "4859": {
      "op": "ADD"
    },
    "4860": {
      "op": "CALLDATALOAD"
    },
    "4861": {
      "op": "SWAP4"
    },
    "4862": {
      "op": "POP"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4865": {
      "op": "DUP7"
    },
    "4866": {
      "op": "ADD"
    },
    "4867": {
      "op": "CALLDATALOAD"
    },
    "4868": {
      "op": "SWAP2"
    },
    "4869": {
      "op": "POP"
    },
    "4870": {
      "op": "DUP1"
    },
    "4871": {
      "op": "DUP3"
    },
    "4872": {
      "op": "GT"
    },
    "4873": {
      "op": "ISZERO"
    },
    "4874": {
      "op": "PUSH2",
      "value": "0x12A7"
    },
    "4877": {
      "op": "JUMPI"
    },
    "4878": {
      "op": "DUP3"
    },
    "4879": {
      "op": "DUP4"
    },
    "4880": {
      "op": "REVERT"
    },
    "4881": {
      "op": "JUMPDEST"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4884": {
      "op": "DUP1"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4887": {
      "op": "DUP1"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4890": {
      "op": "DUP6"
    },
    "4891": {
      "op": "DUP8"
    },
    "4892": {
      "op": "SUB"
    },
    "4893": {
      "op": "SLT"
    },
    "4894": {
      "op": "ISZERO"
    },
    "4895": {
      "op": "PUSH2",
      "value": "0x1326"
    },
    "4898": {
      "op": "JUMPI"
    },
    "4899": {
      "op": "DUP1"
    },
    "4900": {
      "op": "DUP2"
    },
    "4901": {
      "op": "REVERT"
    },
    "4902": {
      "op": "JUMPDEST"
    },
    "4903": {
      "op": "DUP5"
    },
    "4904": {
      "op": "CALLDATALOAD"
    },
    "4905": {
      "op": "SWAP4"
    },
    "4906": {
      "op": "POP"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4909": {
      "op": "DUP6"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "CALLDATALOAD"
    },
    "4912": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4921": {
      "op": "DUP1"
    },
    "4922": {
      "op": "DUP3"
    },
    "4923": {
      "op": "GT"
    },
    "4924": {
      "op": "ISZERO"
    },
    "4925": {
      "op": "PUSH2",
      "value": "0x1344"
    },
    "4928": {
      "op": "JUMPI"
    },
    "4929": {
      "op": "DUP3"
    },
    "4930": {
      "op": "DUP4"
    },
    "4931": {
      "op": "REVERT"
    },
    "4932": {
      "op": "JUMPDEST"
    },
    "4933": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "4936": {
      "op": "DUP9"
    },
    "4937": {
      "op": "DUP4"
    },
    "4938": {
      "op": "DUP10"
    },
    "4939": {
      "op": "ADD"
    },
    "4940": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4943": {
      "jump": "i",
      "op": "JUMP"
    },
    "4944": {
      "op": "JUMPDEST"
    },
    "4945": {
      "op": "SWAP5"
    },
    "4946": {
      "op": "POP"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4949": {
      "op": "DUP8"
    },
    "4950": {
      "op": "ADD"
    },
    "4951": {
      "op": "CALLDATALOAD"
    },
    "4952": {
      "op": "SWAP2"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "DUP1"
    },
    "4955": {
      "op": "DUP3"
    },
    "4956": {
      "op": "GT"
    },
    "4957": {
      "op": "ISZERO"
    },
    "4958": {
      "op": "PUSH2",
      "value": "0x1365"
    },
    "4961": {
      "op": "JUMPI"
    },
    "4962": {
      "op": "DUP3"
    },
    "4963": {
      "op": "DUP4"
    },
    "4964": {
      "op": "REVERT"
    },
    "4965": {
      "op": "JUMPDEST"
    },
    "4966": {
      "op": "PUSH2",
      "value": "0x1371"
    },
    "4969": {
      "op": "DUP9"
    },
    "4970": {
      "op": "DUP4"
    },
    "4971": {
      "op": "DUP10"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4976": {
      "jump": "i",
      "op": "JUMP"
    },
    "4977": {
      "op": "JUMPDEST"
    },
    "4978": {
      "op": "SWAP4"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4982": {
      "op": "DUP8"
    },
    "4983": {
      "op": "ADD"
    },
    "4984": {
      "op": "CALLDATALOAD"
    },
    "4985": {
      "op": "SWAP2"
    },
    "4986": {
      "op": "POP"
    },
    "4987": {
      "op": "DUP1"
    },
    "4988": {
      "op": "DUP3"
    },
    "4989": {
      "op": "GT"
    },
    "4990": {
      "op": "ISZERO"
    },
    "4991": {
      "op": "PUSH2",
      "value": "0x1386"
    },
    "4994": {
      "op": "JUMPI"
    },
    "4995": {
      "op": "DUP3"
    },
    "4996": {
      "op": "DUP4"
    },
    "4997": {
      "op": "REVERT"
    },
    "4998": {
      "op": "JUMPDEST"
    },
    "4999": {
      "op": "POP"
    },
    "5000": {
      "op": "PUSH2",
      "value": "0x1393"
    },
    "5003": {
      "op": "DUP8"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "DUP9"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "5010": {
      "jump": "i",
      "op": "JUMP"
    },
    "5011": {
      "op": "JUMPDEST"
    },
    "5012": {
      "op": "SWAP2"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "SWAP3"
    },
    "5016": {
      "op": "SWAP6"
    },
    "5017": {
      "op": "SWAP2"
    },
    "5018": {
      "op": "SWAP5"
    },
    "5019": {
      "op": "POP"
    },
    "5020": {
      "op": "SWAP3"
    },
    "5021": {
      "op": "POP"
    },
    "5022": {
      "jump": "o",
      "op": "JUMP"
    },
    "5023": {
      "op": "JUMPDEST"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5026": {
      "op": "DUP2"
    },
    "5027": {
      "op": "MLOAD"
    },
    "5028": {
      "op": "DUP1"
    },
    "5029": {
      "op": "DUP5"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "PUSH2",
      "value": "0x13B7"
    },
    "5034": {
      "op": "DUP2"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5037": {
      "op": "DUP7"
    },
    "5038": {
      "op": "ADD"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5041": {
      "op": "DUP7"
    },
    "5042": {
      "op": "ADD"
    },
    "5043": {
      "op": "PUSH2",
      "value": "0x16B8"
    },
    "5046": {
      "jump": "i",
      "op": "JUMP"
    },
    "5047": {
      "op": "JUMPDEST"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5053": {
      "op": "NOT"
    },
    "5054": {
      "op": "AND"
    },
    "5055": {
      "op": "SWAP3"
    },
    "5056": {
      "op": "SWAP1"
    },
    "5057": {
      "op": "SWAP3"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5061": {
      "op": "ADD"
    },
    "5062": {
      "op": "SWAP3"
    },
    "5063": {
      "op": "SWAP2"
    },
    "5064": {
      "op": "POP"
    },
    "5065": {
      "op": "POP"
    },
    "5066": {
      "jump": "o",
      "op": "JUMP"
    },
    "5067": {
      "op": "JUMPDEST"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5070": {
      "op": "DUP5"
    },
    "5071": {
      "op": "MLOAD"
    },
    "5072": {
      "op": "PUSH2",
      "value": "0x13DD"
    },
    "5075": {
      "op": "DUP2"
    },
    "5076": {
      "op": "DUP5"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5079": {
      "op": "DUP10"
    },
    "5080": {
      "op": "ADD"
    },
    "5081": {
      "op": "PUSH2",
      "value": "0x16B8"
    },
    "5084": {
      "jump": "i",
      "op": "JUMP"
    },
    "5085": {
      "op": "JUMPDEST"
    },
    "5086": {
      "op": "DUP5"
    },
    "5087": {
      "op": "MLOAD"
    },
    "5088": {
      "op": "SWAP1"
    },
    "5089": {
      "op": "DUP4"
    },
    "5090": {
      "op": "ADD"
    },
    "5091": {
      "op": "SWAP1"
    },
    "5092": {
      "op": "PUSH2",
      "value": "0x13F1"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "DUP4"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5099": {
      "op": "DUP10"
    },
    "5100": {
      "op": "ADD"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x16B8"
    },
    "5104": {
      "jump": "i",
      "op": "JUMP"
    },
    "5105": {
      "op": "JUMPDEST"
    },
    "5106": {
      "op": "DUP5"
    },
    "5107": {
      "op": "MLOAD"
    },
    "5108": {
      "op": "SWAP2"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "op": "PUSH2",
      "value": "0x1404"
    },
    "5114": {
      "op": "DUP2"
    },
    "5115": {
      "op": "DUP4"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5118": {
      "op": "DUP9"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "PUSH2",
      "value": "0x16B8"
    },
    "5123": {
      "jump": "i",
      "op": "JUMP"
    },
    "5124": {
      "op": "JUMPDEST"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "SWAP6"
    },
    "5127": {
      "op": "SWAP5"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "POP"
    },
    "5130": {
      "op": "POP"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "op": "POP"
    },
    "5133": {
      "jump": "o",
      "op": "JUMP"
    },
    "5134": {
      "op": "JUMPDEST"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5137": {
      "op": "DUP1"
    },
    "5138": {
      "op": "DUP4"
    },
    "5139": {
      "op": "SLOAD"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5143": {
      "op": "DUP3"
    },
    "5144": {
      "op": "DUP2"
    },
    "5145": {
      "op": "SHR"
    },
    "5146": {
      "op": "SWAP2"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "DUP1"
    },
    "5149": {
      "op": "DUP4"
    },
    "5150": {
      "op": "AND"
    },
    "5151": {
      "op": "DUP1"
    },
    "5152": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5155": {
      "op": "JUMPI"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5158": {
      "op": "DUP4"
    },
    "5159": {
      "op": "AND"
    },
    "5160": {
      "op": "SWAP3"
    },
    "5161": {
      "op": "POP"
    },
    "5162": {
      "op": "JUMPDEST"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5165": {
      "op": "DUP1"
    },
    "5166": {
      "op": "DUP5"
    },
    "5167": {
      "op": "LT"
    },
    "5168": {
      "op": "DUP3"
    },
    "5169": {
      "op": "EQ"
    },
    "5170": {
      "op": "ISZERO"
    },
    "5171": {
      "op": "PUSH2",
      "value": "0x144A"
    },
    "5174": {
      "op": "JUMPI"
    },
    "5175": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "op": "DUP8"
    },
    "5184": {
      "op": "MSTORE"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5189": {
      "op": "MSTORE"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5192": {
      "op": "DUP8"
    },
    "5193": {
      "op": "REVERT"
    },
    "5194": {
      "op": "JUMPDEST"
    },
    "5195": {
      "op": "DUP2"
    },
    "5196": {
      "op": "DUP1"
    },
    "5197": {
      "op": "ISZERO"
    },
    "5198": {
      "op": "PUSH2",
      "value": "0x145E"
    },
    "5201": {
      "op": "JUMPI"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5204": {
      "op": "DUP2"
    },
    "5205": {
      "op": "EQ"
    },
    "5206": {
      "op": "PUSH2",
      "value": "0x146F"
    },
    "5209": {
      "op": "JUMPI"
    },
    "5210": {
      "op": "PUSH2",
      "value": "0x149B"
    },
    "5213": {
      "op": "JUMP"
    },
    "5214": {
      "op": "JUMPDEST"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5217": {
      "op": "NOT"
    },
    "5218": {
      "op": "DUP7"
    },
    "5219": {
      "op": "AND"
    },
    "5220": {
      "op": "DUP10"
    },
    "5221": {
      "op": "MSTORE"
    },
    "5222": {
      "op": "DUP5"
    },
    "5223": {
      "op": "DUP10"
    },
    "5224": {
      "op": "ADD"
    },
    "5225": {
      "op": "SWAP7"
    },
    "5226": {
      "op": "POP"
    },
    "5227": {
      "op": "PUSH2",
      "value": "0x149B"
    },
    "5230": {
      "op": "JUMP"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5234": {
      "op": "DUP11"
    },
    "5235": {
      "op": "DUP2"
    },
    "5236": {
      "op": "MSTORE"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5239": {
      "op": "SWAP1"
    },
    "5240": {
      "op": "KECCAK256"
    },
    "5241": {
      "op": "DUP9"
    },
    "5242": {
      "op": "JUMPDEST"
    },
    "5243": {
      "op": "DUP7"
    },
    "5244": {
      "op": "DUP2"
    },
    "5245": {
      "op": "LT"
    },
    "5246": {
      "op": "ISZERO"
    },
    "5247": {
      "op": "PUSH2",
      "value": "0x1493"
    },
    "5250": {
      "op": "JUMPI"
    },
    "5251": {
      "op": "DUP2"
    },
    "5252": {
      "op": "SLOAD"
    },
    "5253": {
      "op": "DUP12"
    },
    "5254": {
      "op": "DUP3"
    },
    "5255": {
      "op": "ADD"
    },
    "5256": {
      "op": "MSTORE"
    },
    "5257": {
      "op": "SWAP1"
    },
    "5258": {
      "op": "DUP6"
    },
    "5259": {
      "op": "ADD"
    },
    "5260": {
      "op": "SWAP1"
    },
    "5261": {
      "op": "DUP4"
    },
    "5262": {
      "op": "ADD"
    },
    "5263": {
      "op": "PUSH2",
      "value": "0x147A"
    },
    "5266": {
      "op": "JUMP"
    },
    "5267": {
      "op": "JUMPDEST"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "op": "DUP5"
    },
    "5271": {
      "op": "DUP10"
    },
    "5272": {
      "op": "ADD"
    },
    "5273": {
      "op": "SWAP7"
    },
    "5274": {
      "op": "POP"
    },
    "5275": {
      "op": "JUMPDEST"
    },
    "5276": {
      "op": "POP"
    },
    "5277": {
      "op": "SWAP5"
    },
    "5278": {
      "op": "SWAP9"
    },
    "5279": {
      "op": "SWAP8"
    },
    "5280": {
      "op": "POP"
    },
    "5281": {
      "op": "POP"
    },
    "5282": {
      "op": "POP"
    },
    "5283": {
      "op": "POP"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "op": "POP"
    },
    "5286": {
      "op": "POP"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "jump": "o",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5294": {
      "op": "DUP1"
    },
    "5295": {
      "op": "DUP4"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "op": "DUP2"
    },
    "5298": {
      "op": "DUP5"
    },
    "5299": {
      "op": "MSTORE"
    },
    "5300": {
      "op": "DUP1"
    },
    "5301": {
      "op": "DUP6"
    },
    "5302": {
      "op": "MLOAD"
    },
    "5303": {
      "op": "DUP1"
    },
    "5304": {
      "op": "DUP4"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5308": {
      "op": "SWAP3"
    },
    "5309": {
      "op": "POP"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "DUP7"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "SWAP2"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "DUP3"
    },
    "5316": {
      "op": "DUP2"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5319": {
      "op": "SHL"
    },
    "5320": {
      "op": "DUP8"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "ADD"
    },
    "5323": {
      "op": "DUP5"
    },
    "5324": {
      "op": "DUP9"
    },
    "5325": {
      "op": "ADD"
    },
    "5326": {
      "op": "DUP7"
    },
    "5327": {
      "op": "JUMPDEST"
    },
    "5328": {
      "op": "DUP4"
    },
    "5329": {
      "op": "DUP2"
    },
    "5330": {
      "op": "LT"
    },
    "5331": {
      "op": "ISZERO"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x1551"
    },
    "5335": {
      "op": "JUMPI"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5338": {
      "op": "NOT"
    },
    "5339": {
      "op": "DUP10"
    },
    "5340": {
      "op": "DUP5"
    },
    "5341": {
      "op": "SUB"
    },
    "5342": {
      "op": "ADD"
    },
    "5343": {
      "op": "DUP6"
    },
    "5344": {
      "op": "MSTORE"
    },
    "5345": {
      "op": "DUP2"
    },
    "5346": {
      "op": "MLOAD"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5349": {
      "op": "DUP2"
    },
    "5350": {
      "op": "MLOAD"
    },
    "5351": {
      "op": "DUP2"
    },
    "5352": {
      "op": "DUP7"
    },
    "5353": {
      "op": "MSTORE"
    },
    "5354": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5357": {
      "op": "DUP3"
    },
    "5358": {
      "op": "DUP8"
    },
    "5359": {
      "op": "ADD"
    },
    "5360": {
      "op": "DUP3"
    },
    "5361": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5364": {
      "jump": "i",
      "op": "JUMP"
    },
    "5365": {
      "op": "JUMPDEST"
    },
    "5366": {
      "op": "SWAP2"
    },
    "5367": {
      "op": "POP"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "op": "DUP9"
    },
    "5370": {
      "op": "DUP3"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "MLOAD"
    },
    "5373": {
      "op": "DUP6"
    },
    "5374": {
      "op": "DUP3"
    },
    "5375": {
      "op": "SUB"
    },
    "5376": {
      "op": "DUP11"
    },
    "5377": {
      "op": "DUP8"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "MSTORE"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x150D"
    },
    "5383": {
      "op": "DUP3"
    },
    "5384": {
      "op": "DUP3"
    },
    "5385": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5388": {
      "jump": "i",
      "op": "JUMP"
    },
    "5389": {
      "op": "JUMPDEST"
    },
    "5390": {
      "op": "SWAP2"
    },
    "5391": {
      "op": "POP"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "op": "DUP8"
    },
    "5394": {
      "op": "DUP3"
    },
    "5395": {
      "op": "ADD"
    },
    "5396": {
      "op": "MLOAD"
    },
    "5397": {
      "op": "DUP6"
    },
    "5398": {
      "op": "DUP3"
    },
    "5399": {
      "op": "SUB"
    },
    "5400": {
      "op": "DUP10"
    },
    "5401": {
      "op": "DUP8"
    },
    "5402": {
      "op": "ADD"
    },
    "5403": {
      "op": "MSTORE"
    },
    "5404": {
      "op": "PUSH2",
      "value": "0x1525"
    },
    "5407": {
      "op": "DUP3"
    },
    "5408": {
      "op": "DUP3"
    },
    "5409": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5412": {
      "jump": "i",
      "op": "JUMP"
    },
    "5413": {
      "op": "JUMPDEST"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5416": {
      "op": "DUP5"
    },
    "5417": {
      "op": "DUP2"
    },
    "5418": {
      "op": "ADD"
    },
    "5419": {
      "op": "MLOAD"
    },
    "5420": {
      "op": "SWAP1"
    },
    "5421": {
      "op": "DUP9"
    },
    "5422": {
      "op": "ADD"
    },
    "5423": {
      "op": "MSTORE"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5426": {
      "op": "SWAP4"
    },
    "5427": {
      "op": "DUP5"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "MLOAD"
    },
    "5430": {
      "op": "ISZERO"
    },
    "5431": {
      "op": "ISZERO"
    },
    "5432": {
      "op": "SWAP4"
    },
    "5433": {
      "op": "SWAP1"
    },
    "5434": {
      "op": "SWAP7"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "op": "SWAP3"
    },
    "5437": {
      "op": "SWAP1"
    },
    "5438": {
      "op": "SWAP3"
    },
    "5439": {
      "op": "MSTORE"
    },
    "5440": {
      "op": "POP"
    },
    "5441": {
      "op": "POP"
    },
    "5442": {
      "op": "SWAP4"
    },
    "5443": {
      "op": "DUP7"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "SWAP4"
    },
    "5446": {
      "op": "SWAP1"
    },
    "5447": {
      "op": "DUP7"
    },
    "5448": {
      "op": "ADD"
    },
    "5449": {
      "op": "SWAP1"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "5456": {
      "op": "JUMP"
    },
    "5457": {
      "op": "JUMPDEST"
    },
    "5458": {
      "op": "POP"
    },
    "5459": {
      "op": "SWAP1"
    },
    "5460": {
      "op": "SWAP9"
    },
    "5461": {
      "op": "SWAP8"
    },
    "5462": {
      "op": "POP"
    },
    "5463": {
      "op": "POP"
    },
    "5464": {
      "op": "POP"
    },
    "5465": {
      "op": "POP"
    },
    "5466": {
      "op": "POP"
    },
    "5467": {
      "op": "POP"
    },
    "5468": {
      "op": "POP"
    },
    "5469": {
      "op": "POP"
    },
    "5470": {
      "jump": "o",
      "op": "JUMP"
    },
    "5471": {
      "op": "JUMPDEST"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5476": {
      "op": "DUP1"
    },
    "5477": {
      "op": "DUP4"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "DUP2"
    },
    "5480": {
      "op": "DUP5"
    },
    "5481": {
      "op": "MSTORE"
    },
    "5482": {
      "op": "DUP1"
    },
    "5483": {
      "op": "DUP6"
    },
    "5484": {
      "op": "MLOAD"
    },
    "5485": {
      "op": "DUP1"
    },
    "5486": {
      "op": "DUP4"
    },
    "5487": {
      "op": "MSTORE"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5490": {
      "op": "SWAP3"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "op": "DUP3"
    },
    "5493": {
      "op": "DUP7"
    },
    "5494": {
      "op": "ADD"
    },
    "5495": {
      "op": "SWAP2"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "op": "DUP3"
    },
    "5498": {
      "op": "DUP2"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5501": {
      "op": "SHL"
    },
    "5502": {
      "op": "DUP8"
    },
    "5503": {
      "op": "ADD"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "DUP5"
    },
    "5506": {
      "op": "DUP9"
    },
    "5507": {
      "op": "ADD"
    },
    "5508": {
      "op": "DUP7"
    },
    "5509": {
      "op": "JUMPDEST"
    },
    "5510": {
      "op": "DUP4"
    },
    "5511": {
      "op": "DUP2"
    },
    "5512": {
      "op": "LT"
    },
    "5513": {
      "op": "ISZERO"
    },
    "5514": {
      "op": "PUSH2",
      "value": "0x1551"
    },
    "5517": {
      "op": "JUMPI"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5520": {
      "op": "NOT"
    },
    "5521": {
      "op": "DUP10"
    },
    "5522": {
      "op": "DUP5"
    },
    "5523": {
      "op": "SUB"
    },
    "5524": {
      "op": "ADD"
    },
    "5525": {
      "op": "DUP6"
    },
    "5526": {
      "op": "MSTORE"
    },
    "5527": {
      "op": "DUP2"
    },
    "5528": {
      "op": "MLOAD"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5531": {
      "op": "DUP2"
    },
    "5532": {
      "op": "MLOAD"
    },
    "5533": {
      "op": "DUP2"
    },
    "5534": {
      "op": "DUP7"
    },
    "5535": {
      "op": "MSTORE"
    },
    "5536": {
      "op": "PUSH2",
      "value": "0x15AB"
    },
    "5539": {
      "op": "DUP3"
    },
    "5540": {
      "op": "DUP8"
    },
    "5541": {
      "op": "ADD"
    },
    "5542": {
      "op": "DUP3"
    },
    "5543": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5546": {
      "jump": "i",
      "op": "JUMP"
    },
    "5547": {
      "op": "JUMPDEST"
    },
    "5548": {
      "op": "SWAP2"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "op": "DUP9"
    },
    "5552": {
      "op": "DUP3"
    },
    "5553": {
      "op": "ADD"
    },
    "5554": {
      "op": "MLOAD"
    },
    "5555": {
      "op": "DUP10"
    },
    "5556": {
      "op": "DUP7"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "MSTORE"
    },
    "5559": {
      "op": "DUP8"
    },
    "5560": {
      "op": "DUP3"
    },
    "5561": {
      "op": "ADD"
    },
    "5562": {
      "op": "MLOAD"
    },
    "5563": {
      "op": "DUP6"
    },
    "5564": {
      "op": "DUP3"
    },
    "5565": {
      "op": "SUB"
    },
    "5566": {
      "op": "DUP10"
    },
    "5567": {
      "op": "DUP8"
    },
    "5568": {
      "op": "ADD"
    },
    "5569": {
      "op": "MSTORE"
    },
    "5570": {
      "op": "PUSH2",
      "value": "0x15CB"
    },
    "5573": {
      "op": "DUP3"
    },
    "5574": {
      "op": "DUP3"
    },
    "5575": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5578": {
      "jump": "i",
      "op": "JUMP"
    },
    "5579": {
      "op": "JUMPDEST"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5582": {
      "op": "DUP5"
    },
    "5583": {
      "op": "DUP2"
    },
    "5584": {
      "op": "ADD"
    },
    "5585": {
      "op": "MLOAD"
    },
    "5586": {
      "op": "ISZERO"
    },
    "5587": {
      "op": "ISZERO"
    },
    "5588": {
      "op": "SWAP1"
    },
    "5589": {
      "op": "DUP9"
    },
    "5590": {
      "op": "ADD"
    },
    "5591": {
      "op": "MSTORE"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5594": {
      "op": "SWAP4"
    },
    "5595": {
      "op": "DUP5"
    },
    "5596": {
      "op": "ADD"
    },
    "5597": {
      "op": "MLOAD"
    },
    "5598": {
      "op": "ISZERO"
    },
    "5599": {
      "op": "ISZERO"
    },
    "5600": {
      "op": "SWAP4"
    },
    "5601": {
      "op": "SWAP1"
    },
    "5602": {
      "op": "SWAP7"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "SWAP3"
    },
    "5605": {
      "op": "SWAP1"
    },
    "5606": {
      "op": "SWAP3"
    },
    "5607": {
      "op": "MSTORE"
    },
    "5608": {
      "op": "POP"
    },
    "5609": {
      "op": "POP"
    },
    "5610": {
      "op": "SWAP4"
    },
    "5611": {
      "op": "DUP7"
    },
    "5612": {
      "op": "ADD"
    },
    "5613": {
      "op": "SWAP4"
    },
    "5614": {
      "op": "SWAP1"
    },
    "5615": {
      "op": "DUP7"
    },
    "5616": {
      "op": "ADD"
    },
    "5617": {
      "op": "SWAP1"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "ADD"
    },
    "5621": {
      "op": "PUSH2",
      "value": "0x1585"
    },
    "5624": {
      "op": "JUMP"
    },
    "5625": {
      "op": "JUMPDEST"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5628": {
      "op": "DUP2"
    },
    "5629": {
      "op": "MSTORE"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5632": {
      "op": "PUSH2",
      "value": "0x160C"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5637": {
      "op": "DUP4"
    },
    "5638": {
      "op": "ADD"
    },
    "5639": {
      "op": "DUP6"
    },
    "5640": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5643": {
      "jump": "i",
      "op": "JUMP"
    },
    "5644": {
      "op": "JUMPDEST"
    },
    "5645": {
      "op": "DUP3"
    },
    "5646": {
      "op": "DUP2"
    },
    "5647": {
      "op": "SUB"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5650": {
      "op": "DUP5"
    },
    "5651": {
      "op": "ADD"
    },
    "5652": {
      "op": "MSTORE"
    },
    "5653": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "5656": {
      "op": "DUP2"
    },
    "5657": {
      "op": "DUP6"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5661": {
      "jump": "i",
      "op": "JUMP"
    },
    "5662": {
      "op": "JUMPDEST"
    },
    "5663": {
      "op": "SWAP6"
    },
    "5664": {
      "op": "SWAP5"
    },
    "5665": {
      "op": "POP"
    },
    "5666": {
      "op": "POP"
    },
    "5667": {
      "op": "POP"
    },
    "5668": {
      "op": "POP"
    },
    "5669": {
      "op": "POP"
    },
    "5670": {
      "jump": "o",
      "op": "JUMP"
    },
    "5671": {
      "op": "JUMPDEST"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5678": {
      "op": "PUSH2",
      "value": "0x163A"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5683": {
      "op": "DUP4"
    },
    "5684": {
      "op": "ADD"
    },
    "5685": {
      "op": "DUP7"
    },
    "5686": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5689": {
      "jump": "i",
      "op": "JUMP"
    },
    "5690": {
      "op": "JUMPDEST"
    },
    "5691": {
      "op": "DUP3"
    },
    "5692": {
      "op": "DUP2"
    },
    "5693": {
      "op": "SUB"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5696": {
      "op": "DUP5"
    },
    "5697": {
      "op": "ADD"
    },
    "5698": {
      "op": "MSTORE"
    },
    "5699": {
      "op": "PUSH2",
      "value": "0x164C"
    },
    "5702": {
      "op": "DUP2"
    },
    "5703": {
      "op": "DUP7"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5707": {
      "jump": "i",
      "op": "JUMP"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "SWAP1"
    },
    "5710": {
      "op": "POP"
    },
    "5711": {
      "op": "DUP3"
    },
    "5712": {
      "op": "DUP2"
    },
    "5713": {
      "op": "SUB"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5716": {
      "op": "DUP5"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "MSTORE"
    },
    "5719": {
      "op": "PUSH2",
      "value": "0x1660"
    },
    "5722": {
      "op": "DUP2"
    },
    "5723": {
      "op": "DUP6"
    },
    "5724": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5727": {
      "jump": "i",
      "op": "JUMP"
    },
    "5728": {
      "op": "JUMPDEST"
    },
    "5729": {
      "op": "SWAP7"
    },
    "5730": {
      "op": "SWAP6"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "op": "POP"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "op": "POP"
    },
    "5737": {
      "jump": "o",
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5741": {
      "op": "DUP1"
    },
    "5742": {
      "op": "DUP3"
    },
    "5743": {
      "op": "MSTORE"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5746": {
      "op": "SWAP1"
    },
    "5747": {
      "op": "DUP3"
    },
    "5748": {
      "op": "ADD"
    },
    "5749": {
      "op": "MSTORE"
    },
    "5750": {
      "op": "PUSH32",
      "value": "0x596F75206D7573742062652061646D696E20746F20646F20746869732E000000"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5785": {
      "op": "DUP3"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5790": {
      "op": "ADD"
    },
    "5791": {
      "op": "SWAP1"
    },
    "5792": {
      "jump": "o",
      "op": "JUMP"
    },
    "5793": {
      "op": "JUMPDEST"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "DUP3"
    },
    "5798": {
      "op": "LT"
    },
    "5799": {
      "op": "ISZERO"
    },
    "5800": {
      "op": "PUSH2",
      "value": "0x16B3"
    },
    "5803": {
      "op": "JUMPI"
    },
    "5804": {
      "op": "PUSH2",
      "value": "0x16B3"
    },
    "5807": {
      "op": "PUSH2",
      "value": "0x173E"
    },
    "5810": {
      "jump": "i",
      "op": "JUMP"
    },
    "5811": {
      "op": "JUMPDEST"
    },
    "5812": {
      "op": "POP"
    },
    "5813": {
      "op": "SUB"
    },
    "5814": {
      "op": "SWAP1"
    },
    "5815": {
      "jump": "o",
      "op": "JUMP"
    },
    "5816": {
      "op": "JUMPDEST"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "DUP4"
    },
    "5821": {
      "op": "DUP2"
    },
    "5822": {
      "op": "LT"
    },
    "5823": {
      "op": "ISZERO"
    },
    "5824": {
      "op": "PUSH2",
      "value": "0x16D3"
    },
    "5827": {
      "op": "JUMPI"
    },
    "5828": {
      "op": "DUP2"
    },
    "5829": {
      "op": "DUP2"
    },
    "5830": {
      "op": "ADD"
    },
    "5831": {
      "op": "MLOAD"
    },
    "5832": {
      "op": "DUP4"
    },
    "5833": {
      "op": "DUP3"
    },
    "5834": {
      "op": "ADD"
    },
    "5835": {
      "op": "MSTORE"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5838": {
      "op": "ADD"
    },
    "5839": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "5842": {
      "op": "JUMP"
    },
    "5843": {
      "op": "JUMPDEST"
    },
    "5844": {
      "op": "DUP4"
    },
    "5845": {
      "op": "DUP2"
    },
    "5846": {
      "op": "GT"
    },
    "5847": {
      "op": "ISZERO"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x16E2"
    },
    "5851": {
      "op": "JUMPI"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5854": {
      "op": "DUP5"
    },
    "5855": {
      "op": "DUP5"
    },
    "5856": {
      "op": "ADD"
    },
    "5857": {
      "op": "MSTORE"
    },
    "5858": {
      "op": "JUMPDEST"
    },
    "5859": {
      "op": "POP"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "op": "POP"
    },
    "5863": {
      "jump": "o",
      "op": "JUMP"
    },
    "5864": {
      "op": "JUMPDEST"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5867": {
      "op": "DUP2"
    },
    "5868": {
      "op": "DUP2"
    },
    "5869": {
      "op": "SHR"
    },
    "5870": {
      "op": "SWAP1"
    },
    "5871": {
      "op": "DUP3"
    },
    "5872": {
      "op": "AND"
    },
    "5873": {
      "op": "DUP1"
    },
    "5874": {
      "op": "PUSH2",
      "value": "0x16FC"
    },
    "5877": {
      "op": "JUMPI"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5880": {
      "op": "DUP3"
    },
    "5881": {
      "op": "AND"
    },
    "5882": {
      "op": "SWAP2"
    },
    "5883": {
      "op": "POP"
    },
    "5884": {
      "op": "JUMPDEST"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5887": {
      "op": "DUP3"
    },
    "5888": {
      "op": "LT"
    },
    "5889": {
      "op": "DUP2"
    },
    "5890": {
      "op": "EQ"
    },
    "5891": {
      "op": "ISZERO"
    },
    "5892": {
      "op": "PUSH2",
      "value": "0x171D"
    },
    "5895": {
      "op": "JUMPI"
    },
    "5896": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5903": {
      "op": "SHL"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5906": {
      "op": "MSTORE"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5911": {
      "op": "MSTORE"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5916": {
      "op": "REVERT"
    },
    "5917": {
      "op": "JUMPDEST"
    },
    "5918": {
      "op": "POP"
    },
    "5919": {
      "op": "SWAP2"
    },
    "5920": {
      "op": "SWAP1"
    },
    "5921": {
      "op": "POP"
    },
    "5922": {
      "jump": "o",
      "op": "JUMP"
    },
    "5923": {
      "op": "JUMPDEST"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5928": {
      "op": "NOT"
    },
    "5929": {
      "op": "DUP3"
    },
    "5930": {
      "op": "EQ"
    },
    "5931": {
      "op": "ISZERO"
    },
    "5932": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "5935": {
      "op": "JUMPI"
    },
    "5936": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x173E"
    },
    "5942": {
      "jump": "i",
      "op": "JUMP"
    },
    "5943": {
      "op": "JUMPDEST"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5947": {
      "op": "ADD"
    },
    "5948": {
      "op": "SWAP1"
    },
    "5949": {
      "jump": "o",
      "op": "JUMP"
    },
    "5950": {
      "op": "JUMPDEST"
    },
    "5951": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5958": {
      "op": "SHL"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5966": {
      "op": "MSTORE"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5971": {
      "op": "REVERT"
    },
    "5972": {
      "op": "JUMPDEST"
    },
    "5973": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5980": {
      "op": "SHL"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5983": {
      "op": "MSTORE"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5988": {
      "op": "MSTORE"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5993": {
      "op": "REVERT"
    }
  },
  "sha1": "20808d14ff36d21510773021d7952c3f83178797",
  "source": "pragma solidity ^0.8.1;\n\ncontract Voting {\n    address adminAddress;\n    bool electionOn = false;\n    modifier onlyOwner {\n        require(msg.sender == adminAddress, \"You must be admin to do this.\");\n        _;\n    }\n \n    event voterAdded(string name, string constituency);\n    event candidateAdded(string name, string constituency, string symbol);\n    // event voteEvent();\n    struct Voter {\n        // name, id, constituency, canVote \n        string name;\n        uint idNo;\n        string constituency;\n        bool canVote;\n        bool exists;\n    }\n    struct Candidate {\n        // name, constituency, noofvotes, address\n        string name;\n        string constituency;\n        string symbol;\n        uint noOfVotes;\n        bool exists;\n    }\n    \n    Voter[] voters;\n    mapping(uint => uint) ballot; //hash to candidate mapping\n    Candidate[] candidates;\n    mapping(uint => uint) votersList; // voters id to voter mapping\n    \n    constructor(){\n        adminAddress = msg.sender;\n        candidates.push(Candidate(\"nonce\", \"nonce\", \"nonce\", 0,  false));\n        voters.push(Voter(\"nonce\", 0, \"nonce\", false, false));\n    }\n    \n    function startElection() public onlyOwner {\n        electionOn = true;\n    }\n    \n    function endElection() public onlyOwner {\n        electionOn = false;\n    }\n    // add right to vote facility later\n    function createVoter(string memory _name, uint _id, string memory _constituency) public {\n        require(!voters[votersList[_id]].exists, \"Voter id is already registered!.\");\n        voters.push(Voter(_name, _id, _constituency, true, true));\n        votersList[_id] = voters.length - 1;\n        \n        emit voterAdded(_name, _constituency);\n    } \n    function getVotersList() onlyOwner public view returns(Voter[] memory){\n        return voters;\n    }\n    function getCandidatesList() onlyOwner public view returns(Candidate[] memory){\n        return candidates;\n    }\n    // handle duplicate candidate problem later\n    function createCandidate(string memory _name, string memory _constituency, string memory _symbol) onlyOwner public {\n        uint candId =  _generateHash(_name, _constituency, _symbol);\n        require(!candidates[ballot[candId]].exists, \"Candidate already in ballot list!.\");\n        candidates.push(Candidate(_name, _constituency, _symbol, 0, true));\n        ballot[candId] = candidates.length - 1;\n        emit candidateAdded(_name, _constituency, _symbol);\n    }\n    \n    function _generateHash(string memory _name, string memory _constituency, string memory _symbol) public pure returns (uint){\n        uint hash = uint(keccak256(abi.encodePacked(_name, _constituency, _symbol)));   \n        return hash;\n    }\n    \n    function vote(uint _voterId, string memory _voteTo, string memory _constituency, string memory _symbol) public{\n        require(voters[votersList[_voterId]].exists, \"You are not registered to vote.\");\n        require(electionOn, \"Sorry. The election has ended.\");\n        require(voters[votersList[_voterId]].canVote, \"Sorry. You already voted.\");\n        uint candId = _generateHash(_voteTo, _constituency, _symbol);\n        require(candidates[ballot[candId]].exists, \"Selected candidate not found.\");\n        require(keccak256(abi.encodePacked(candidates[ballot[candId]].constituency)) == keccak256(abi.encodePacked(voters[votersList[_voterId]].constituency)), \"Sorry. You are voting for a candidate who is not in your constituency.\");\n        candidates[ballot[candId]].noOfVotes++; \n        voters[votersList[_voterId]].canVote = false;\n    }\n    \n    function getElectionResult() public view returns (Candidate[] memory){\n        require(!electionOn, \"Election has not ended.\");\n        return candidates;\n    }\n    \n    function getElectionState() public onlyOwner view returns (bool){\n        return electionOn;\n    }\n}",
  "sourceMap": "25:3806:0:-:0;;;91:5;73:23;;-1:-1:-1;;;;73:23:0;;;947:192;;;;;;;;;-1:-1:-1;970:12:0;:25;;-1:-1:-1;;;;;;970:25:0;985:10;970:25;;;1021:47;;;;;;;;;;;;;;;-1:-1:-1;;;1021:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1021:47:0;;;-1:-1:-1;;;1021:47:0;;;1005:10;:64;;970:25;1005:64;;;;;;;;;;1021:47;;1005:64;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:64:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:64:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:64:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1005:64:0;;;;;;;;;1091:40;;;;;;;;;;;;;;;-1:-1:-1;;;1091:40:0;;;;;;;;;1005:64;-1:-1:-1;1091:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1091:40:0;;;-1:-1:-1;;;1091:40:0;;;1005:64;1079:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1079:53:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1079:53:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1079:53:0;;;;;;;-1:-1:-1;;1079:53:0;;;;;;;;;;25:3806;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25:3806:0;;;-1:-1:-1;25:3806:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;25:3806:0;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}