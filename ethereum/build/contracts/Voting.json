{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "candidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        }
      ],
      "name": "voterAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "_generateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ballot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        }
      ],
      "name": "createVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionOn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidatesList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotersList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "idNo",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "canVote",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Voter[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_voteTo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        396
      ]
    },
    "id": 397,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 396,
        "linearizedBaseContracts": [
          396
        ],
        "name": "Voting",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc6f9468",
            "id": 3,
            "mutability": "mutable",
            "name": "adminAddress",
            "nameLocation": "62:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "47:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "47:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "137edd98",
            "id": 6,
            "mutability": "mutable",
            "name": "electionOn",
            "nameLocation": "92:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "80:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "80:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "105:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "135:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "153:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "153:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11,
                          "name": "adminAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "167:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "153:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742062652061646d696e20746f20646f20746869732e",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "181:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4576645ad51b4521cb4d352297a95e08b68535df714c3278d050f291b06d9645",
                          "typeString": "literal_string \"You must be admin to do this.\""
                        },
                        "value": "You must be admin to do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4576645ad51b4521cb4d352297a95e08b68535df714c3278d050f291b06d9645",
                          "typeString": "literal_string \"You must be admin to do this.\""
                        }
                      ],
                      "id": 8,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "145:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "145:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "145:68:0"
                },
                {
                  "id": 16,
                  "nodeType": "PlaceholderStatement",
                  "src": "223:1:0"
                }
              ]
            },
            "id": 18,
            "name": "onlyOwner",
            "nameLocation": "125:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:0:0"
            },
            "src": "116:115:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 24,
            "name": "voterAdded",
            "nameLocation": "244:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "262:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "255:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "275:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "268:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "254:34:0"
            },
            "src": "238:51:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "candidateAdded",
            "nameLocation": "300:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "322:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "315:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "335:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "328:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "356:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "349:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "314:49:0"
            },
            "src": "294:70:0"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "469:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "462:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 33,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "462:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "idNo",
                "nameLocation": "488:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "483:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "483:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "509:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "502:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 37,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "502:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "canVote",
                "nameLocation": "536:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "531:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 39,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "531:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "558:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 43,
                "src": "553:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "553:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "402:5:0",
            "nodeType": "StructDefinition",
            "scope": 396,
            "src": "395:176:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Candidate",
            "id": 54,
            "members": [
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "660:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "653:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 44,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "653:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "681:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "674:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 46,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "710:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "703:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 48,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "703:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "noOfVotes",
                "nameLocation": "731:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "726:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 50,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "726:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "755:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 54,
                "src": "750:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 52,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "750:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "583:9:0",
            "nodeType": "StructDefinition",
            "scope": 396,
            "src": "576:192:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "786:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "778:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
              "typeString": "struct Voting.Voter[]"
            },
            "typeName": {
              "baseType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43,
                  "src": "778:5:0"
                },
                "referencedDeclaration": 43,
                "src": "778:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$43_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              },
              "id": 57,
              "nodeType": "ArrayTypeName",
              "src": "778:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Voter[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e7942734",
            "id": 62,
            "mutability": "mutable",
            "name": "ballot",
            "nameLocation": "827:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "798:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "806:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "798:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "814:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "879:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "867:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 64,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54,
                  "src": "867:9:0"
                },
                "referencedDeclaration": 54,
                "src": "867:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 65,
              "nodeType": "ArrayTypeName",
              "src": "867:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "votersList",
            "nameLocation": "917:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "895:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 67,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "903:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "895:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 68,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "911:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "981:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "adminAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "991:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1006:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1006:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "991:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "991:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1052:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1061:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1070:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1079:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1083:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 81,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1042:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$54_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1042:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 78,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1026:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1026:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$54_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1118:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1127:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1130:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1139:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1146:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 93,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1112:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$43_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1112:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1100:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1100:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$_t_struct$_Voter_$43_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1100:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:53:0"
                }
              ]
            },
            "id": 103,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:0:0"
            },
            "scope": 396,
            "src": "968:192:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1212:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1222:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1235:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1222:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:17:0"
                }
              ]
            },
            "functionSelector": "62d73eb8",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1202:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1202:9:0"
              }
            ],
            "name": "startElection",
            "nameLocation": "1179:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:0:0"
            },
            "scope": 396,
            "src": "1170:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1296:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1306:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1319:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1306:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:18:0"
                }
              ]
            },
            "functionSelector": "59f78468",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 115,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1286:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:9:0"
              }
            ],
            "name": "endElection",
            "nameLocation": "1265:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1296:0:0"
            },
            "scope": 396,
            "src": "1256:75:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1464:261:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1482:31:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 133,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1483:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                                "typeString": "struct Voting.Voter storage ref[] storage ref"
                              }
                            },
                            "id": 137,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 134,
                                "name": "votersList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "1490:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 136,
                              "indexExpression": {
                                "id": 135,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "1501:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1490:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1483:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$43_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "1483:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220696420697320616c72656164792072656769737465726564212e",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1515:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        },
                        "value": "Voter id is already registered!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1474:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1474:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 147,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1578:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "1585:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 149,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "1590:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1605:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1611:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 146,
                          "name": "Voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1572:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Voter_$43_storage_ptr_$",
                            "typeString": "type(struct Voting.Voter storage pointer)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1572:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voter_$43_memory_ptr",
                          "typeString": "struct Voting.Voter memory"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1560:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                          "typeString": "struct Voting.Voter storage ref[] storage ref"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1560:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$_t_struct$_Voter_$43_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Voter storage ref[] storage pointer,struct Voting.Voter storage ref)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:57:0"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 155,
                        "name": "votersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1627:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 157,
                      "indexExpression": {
                        "id": 156,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1638:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1627:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 158,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1645:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1645:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1661:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1645:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1627:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1697:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 166,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1704:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 164,
                      "name": "voterAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1686:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "EmitStatement",
                  "src": "1681:37:0"
                }
              ]
            },
            "functionSelector": "d373f8d4",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVoter",
            "nameLocation": "1385:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1411:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1397:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1423:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1418:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "1442:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1428:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1396:60:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1464:0:0"
            },
            "scope": 396,
            "src": "1376:349:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "1801:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 179,
                    "name": "voters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "1818:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                      "typeString": "struct Voting.Voter storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "1811:13:0"
                }
              ]
            },
            "functionSelector": "bc86f385",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1756:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1756:9:0"
              }
            ],
            "name": "getVotersList",
            "nameLocation": "1740:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1753:2:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "1786:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Voter_$43_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Voter[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 175,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 174,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43,
                        "src": "1786:5:0"
                      },
                      "referencedDeclaration": 43,
                      "src": "1786:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$43_storage_ptr",
                        "typeString": "struct Voting.Voter"
                      }
                    },
                    "id": 176,
                    "nodeType": "ArrayTypeName",
                    "src": "1786:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Voter[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1785:16:0"
            },
            "scope": 396,
            "src": "1731:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "1914:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 191,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1931:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "1924:17:0"
                }
              ]
            },
            "functionSelector": "4aba5f34",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "1865:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1865:9:0"
              }
            ],
            "name": "getCandidatesList",
            "nameLocation": "1845:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1862:2:0"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1895:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$54_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 187,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 186,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "1895:9:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "1895:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 188,
                    "nodeType": "ArrayTypeName",
                    "src": "1895:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:20:0"
            },
            "scope": 396,
            "src": "1836:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2116:351:0",
              "statements": [
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "2131:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2126:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2126:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 208,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2155:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 209,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2162:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 210,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2177:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 207,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "2141:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2126:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2203:34:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 214,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "2204:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                                "typeString": "struct Voting.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 218,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 215,
                                "name": "ballot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "2215:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 217,
                              "indexExpression": {
                                "id": 216,
                                "name": "candId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "2222:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2215:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2204:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$54_storage",
                              "typeString": "struct Voting.Candidate storage ref"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "2204:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e64696461746520616c726561647920696e2062616c6c6f74206c697374212e",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2239:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        },
                        "value": "Candidate already in ballot list!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2195:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2312:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 229,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "2319:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 230,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "2334:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2343:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2346:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 227,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "2302:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$54_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$54_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "2286:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2286:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$54_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:66:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 236,
                        "name": "ballot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "2362:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 238,
                      "indexExpression": {
                        "id": 237,
                        "name": "candId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "2369:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2362:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 239,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "2379:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2379:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2399:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2379:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2362:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2430:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 247,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2437:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 248,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2452:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 245,
                      "name": "candidateAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2415:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2415:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "EmitStatement",
                  "src": "2410:50:0"
                }
              ]
            },
            "functionSelector": "1d823d32",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 203,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 202,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "2099:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2099:9:0"
              }
            ],
            "name": "createCandidate",
            "nameLocation": "2010:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2040:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2026:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2061:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2047:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2047:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2090:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2076:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:73:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2116:0:0"
            },
            "scope": 396,
            "src": "2001:466:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "2599:117:0",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2614:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2609:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2609:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 276,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 270,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "2653:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 271,
                                "name": "_constituency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "2660:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 272,
                                "name": "_symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 258,
                                "src": "2675:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 268,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2636:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2636:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2636:47:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 267,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2626:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2626:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2621:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2621:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2621:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2609:76:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "name": "hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 264,
                    "src": "2705:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 262,
                  "id": 278,
                  "nodeType": "Return",
                  "src": "2698:11:0"
                }
              ]
            },
            "functionSelector": "79ae584d",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateHash",
            "nameLocation": "2486:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2514:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2500:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2535:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2521:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2564:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2550:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:73:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "2594:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:6:0"
            },
            "scope": 396,
            "src": "2477:239:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "2836:736:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "electionOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2854:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e2054686520656c656374696f6e2068617320656e6465642e",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2866:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        },
                        "value": "Sorry. The election has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2846:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 297,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2917:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 301,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 298,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "2924:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 300,
                            "indexExpression": {
                              "id": 299,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "2935:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2924:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2917:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$43_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "2917:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f74207265676973746572656420746f20766f74652e",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2954:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        },
                        "value": "You are not registered to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2909:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 307,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3006:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                              "typeString": "struct Voting.Voter storage ref[] storage ref"
                            }
                          },
                          "id": 311,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 308,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "3013:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "id": 309,
                              "name": "_voterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "3024:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3013:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3006:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$43_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "3006:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f7520616c726561647920766f7465642e",
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        },
                        "value": "Sorry. You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2998:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:74:0"
                },
                {
                  "assignments": [
                    317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "3087:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "3082:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3082:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 323,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "_voteTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "3110:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 320,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3119:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 321,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "3134:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 318,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "3096:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3082:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 325,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3160:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                              "typeString": "struct Voting.Candidate storage ref[] storage ref"
                            }
                          },
                          "id": 329,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 326,
                              "name": "ballot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "3171:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 328,
                            "indexExpression": {
                              "id": 327,
                              "name": "candId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 317,
                              "src": "3178:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3171:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3160:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$54_storage",
                            "typeString": "struct Voting.Candidate storage ref"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53,
                        "src": "3160:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c65637465642063616e646964617465206e6f7420666f756e642e",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3195:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        },
                        "value": "Selected candidate not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3152:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3152:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3152:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 338,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66,
                                      "src": "3272:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                                        "typeString": "struct Voting.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 342,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 339,
                                        "name": "ballot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62,
                                        "src": "3283:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 341,
                                      "indexExpression": {
                                        "id": 340,
                                        "name": "candId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 317,
                                        "src": "3290:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3283:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3272:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$54_storage",
                                      "typeString": "struct Voting.Candidate storage ref"
                                    }
                                  },
                                  "id": 343,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47,
                                  "src": "3272:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 336,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3255:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3255:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3255:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 335,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3245:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3245:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 349,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58,
                                      "src": "3344:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                                        "typeString": "struct Voting.Voter storage ref[] storage ref"
                                      }
                                    },
                                    "id": 353,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 350,
                                        "name": "votersList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 70,
                                        "src": "3351:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 352,
                                      "indexExpression": {
                                        "id": 351,
                                        "name": "_voterId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "3362:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3351:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3344:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$43_storage",
                                      "typeString": "struct Voting.Voter storage ref"
                                    }
                                  },
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38,
                                  "src": "3344:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 347,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3327:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3327:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3327:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 346,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3317:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3317:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3245:142:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f752061726520766f74696e6720666f7220612063616e6469646174652077686f206973206e6f7420696e20796f757220636f6e7374697475656e63792e",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3389:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        },
                        "value": "Sorry. You are voting for a candidate who is not in your constituency."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3237:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:225:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:225:0"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3472:38:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 361,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "3472:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 365,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 362,
                            "name": "ballot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "3483:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "id": 363,
                            "name": "candId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "3490:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3483:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3472:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$54_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "3472:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:38:0"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 369,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3521:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$43_storage_$dyn_storage",
                            "typeString": "struct Voting.Voter storage ref[] storage ref"
                          }
                        },
                        "id": 373,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 370,
                            "name": "votersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3528:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 372,
                          "indexExpression": {
                            "id": 371,
                            "name": "_voterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3539:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3528:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3521:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$43_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "3521:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3560:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3521:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:44:0"
                }
              ]
            },
            "functionSelector": "dd4159c0",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2735:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_voterId",
                  "nameLocation": "2745:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2740:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_voteTo",
                  "nameLocation": "2769:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2755:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2792:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2778:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2778:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2821:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2807:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2739:90:0"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2836:0:0"
            },
            "scope": 396,
            "src": "2726:846:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "3651:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3669:11:0",
                        "subExpression": {
                          "id": 387,
                          "name": "electionOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3670:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e20686173206e6f7420656e6465642e",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3682:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        },
                        "value": "Election has not ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3661:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "3661:47:0"
                },
                {
                  "expression": {
                    "id": 392,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "3725:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 385,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "3718:17:0"
                }
              ]
            },
            "functionSelector": "ca3eb443",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getElectionResult",
            "nameLocation": "3591:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:2:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3632:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$54_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 382,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 381,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "3632:9:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "3632:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$54_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 383,
                    "nodeType": "ArrayTypeName",
                    "src": "3632:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$54_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3631:20:0"
            },
            "scope": 396,
            "src": "3582:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 397,
        "src": "25:3719:0",
        "usedErrors": []
      }
    ],
    "src": "0:3744:0"
  },
  "bytecode": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b50600080546001600160a01b031916331781556040805160e081018252600560a08201818152646e6f6e636560d81b60c084018190529083528351808501855282815260208181018390528085019190915284518086018652838152808201929092529383015260608201849052608082018490526003805460018101825594528151805192949091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0192620000dc9284929091019062000234565b506020828101518051620000f7926001850192019062000234565b50604082015180516200011591600284019160209091019062000234565b5060608281015160038301556080928301516004928301805491151560ff199092169190911790556040805160e081018252600560a08201818152646e6f6e636560d81b60c0840181905290835260006020808501829052855180870187529384528381019290925293830191909152928101829052938401819052600180548082018255915283518051919093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192620001d792849291019062000234565b50602082810151600183015560408301518051620001fc926002850192019062000234565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905562000317565b8280546200024290620002da565b90600052602060002090601f016020900481019282620002665760008555620002b1565b82601f106200028157805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b157825182559160200191906001019062000294565b50620002bf929150620002c3565b5090565b5b80821115620002bf5760008155600101620002c4565b600181811c90821680620002ef57607f821691505b602082108114156200031157634e487b7160e01b600052602260045260246000fd5b50919050565b6117e580620003276000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc86f38511610071578063bc86f3851461013d578063ca3eb44314610152578063d373f8d41461015a578063dd4159c01461016d578063e794273414610180578063fc6f9468146101a057600080fd5b8063137edd98146100b95780631d823d32146100e25780634aba5f34146100f757806359f784681461010c57806362d73eb81461011457806379ae584d1461011c575b600080fd5b6000546100cd90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6100f56100f0366004611267565b6101cb565b005b6100ff6103e0565b6040516100d991906114ee565b6100f561063f565b6100f5610678565b61012f61012a366004611267565b6106b7565b6040519081526020016100d9565b6101456106f0565b6040516100d991906115a4565b6100ff6108c8565b6100f56101683660046112eb565b610b4e565b6100f561017b366004611356565b610d13565b61012f61018e36600461133e565b60026020526000908152604090205481565b6000546101b3906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b6000546001600160a01b031633146101fe5760405162461bcd60e51b81526004016101f5906116af565b60405180910390fd5b600061020b8484846106b7565b6000818152600260205260409020546003805492935091811061023e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102ad5760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b60648201526084016101f5565b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01926103219284920190611147565b50602082810151805161033a9260018501920190611147565b5060408201518051610356916002840191602090910190611147565b5060608201516003828101919091556080909201516004909101805460ff19169115159190911790555461038c906001906116e6565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef906103d29086908690869061166c565b60405180910390a150505050565b6000546060906001600160a01b0316331461040d5760405162461bcd60e51b81526004016101f5906116af565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561063657838290600052602060002090600502016040518060a00160405290816000820180546104629061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461048e9061172d565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b505050505081526020016001820180546104f49061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546105209061172d565b801561056d5780601f106105425761010080835404028352916020019161056d565b820191906000526020600020905b81548152906001019060200180831161055057829003601f168201915b505050505081526020016002820180546105869061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546105b29061172d565b80156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604090910152908252600192909201910161042f565b50505050905090565b6000546001600160a01b031633146106695760405162461bcd60e51b81526004016101f5906116af565b6000805460ff60a01b19169055565b6000546001600160a01b031633146106a25760405162461bcd60e51b81526004016101f5906116af565b6000805460ff60a01b1916600160a01b179055565b6000808484846040516020016106cf93929190611410565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b0316331461071d5760405162461bcd60e51b81526004016101f5906116af565b6001805480602002602001604051908101604052809291908181526020016000905b8282101561063657838290600052602060002090600402016040518060a00160405290816000820180546107729061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461079e9061172d565b80156107eb5780601f106107c0576101008083540402835291602001916107eb565b820191906000526020600020905b8154815290600101906020018083116107ce57829003601f168201915b505050505081526020016001820154815260200160028201805461080e9061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461083a9061172d565b80156108875780601f1061085c57610100808354040283529160200191610887565b820191906000526020600020905b81548152906001019060200180831161086a57829003601f168201915b50505091835250506003919091015460ff8082161515602080850191909152610100909204161515604090920191909152908252600192909201910161073f565b600054606090600160a01b900460ff16156109255760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e00000000000000000060448201526064016101f5565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561063657838290600052602060002090600502016040518060a001604052908160008201805461097a9061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546109a69061172d565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b50505050508152602001600182018054610a0c9061172d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a389061172d565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050508152602001600282018054610a9e9061172d565b80601f0160208091040260200160405190810160405280929190818152602001828054610aca9061172d565b8015610b175780601f10610aec57610100808354040283529160200191610b17565b820191906000526020600020905b815481529060010190602001808311610afa57829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040909101529082526001929092019101610947565b600082815260046020526040902054600180549091908110610b8057634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610bec5760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e60448201526064016101f5565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610c5f9284920190611147565b50602082810151600183015560408301518051610c829260028501920190611147565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610cc291906116e6565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610d06908590849061163e565b60405180910390a1505050565b600054600160a01b900460ff16610d6c5760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e000060448201526064016101f5565b600084815260046020526040902054600180549091908110610d9e57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610e095760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e0060448201526064016101f5565b600084815260046020526040902054600180549091908110610e3b57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610e9e5760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e0000000000000060448201526064016101f5565b6000610eab8484846106b7565b60008181526002602052604090205460038054929350918110610ede57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610f415760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e00000060448201526064016101f5565b600085815260046020526040902054600180549091908110610f7357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610f949190611453565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610fde57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610fff9190611453565b60405160208183030381529060405280519060200120146110975760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a4016101f5565b6000818152600260205260409020546003805490919081106110c957634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600590920201018054916110e783611768565b909155505060008581526004602052604081205460018054909190811061111e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b8280546111539061172d565b90600052602060002090601f01602090048101928261117557600085556111bb565b82601f1061118e57805160ff19168380011785556111bb565b828001600101855582156111bb579182015b828111156111bb5782518255916020019190600101906111a0565b506111c79291506111cb565b5090565b5b808211156111c757600081556001016111cc565b600082601f8301126111f0578081fd5b813567ffffffffffffffff8082111561120b5761120b611799565b604051601f8301601f19908116603f0116810190828211818310171561123357611233611799565b8160405283815286602085880101111561124b578485fd5b8360208701602083013792830160200193909352509392505050565b60008060006060848603121561127b578283fd5b833567ffffffffffffffff80821115611292578485fd5b61129e878388016111e0565b945060208601359150808211156112b3578384fd5b6112bf878388016111e0565b935060408601359150808211156112d4578283fd5b506112e1868287016111e0565b9150509250925092565b6000806000606084860312156112ff578283fd5b833567ffffffffffffffff80821115611316578485fd5b611322878388016111e0565b94506020860135935060408601359150808211156112d4578283fd5b60006020828403121561134f578081fd5b5035919050565b6000806000806080858703121561136b578081fd5b84359350602085013567ffffffffffffffff80821115611389578283fd5b611395888389016111e0565b945060408701359150808211156113aa578283fd5b6113b6888389016111e0565b935060608701359150808211156113cb578283fd5b506113d8878288016111e0565b91505092959194509250565b600081518084526113fc8160208601602086016116fd565b601f01601f19169290920160200192915050565b600084516114228184602089016116fd565b8451908301906114368183602089016116fd565b84519101906114498183602088016116fd565b0195945050505050565b600080835482600182811c91508083168061146f57607f831692505b602080841082141561148f57634e487b7160e01b87526022600452602487fd5b8180156114a357600181146114b4576114e0565b60ff198616895284890196506114e0565b60008a815260209020885b868110156114d85781548b8201529085019083016114bf565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561159657603f19898403018552815160a0815181865261153a828701826113e4565b915050888201518582038a87015261155282826113e4565b915050878201518582038987015261156a82826113e4565b606084810151908801526080938401511515939096019290925250509386019390860190600101611514565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561159657603f19898403018552815160a081518186526115f0828701826113e4565b9150508882015189860152878201518582038987015261161082826113e4565b60608481015115159088015260809384015115159390960192909252505093860193908601906001016115ca565b60408152600061165160408301856113e4565b828103602084015261166381856113e4565b95945050505050565b60608152600061167f60608301866113e4565b828103602084015261169181866113e4565b905082810360408401526116a581856113e4565b9695505050505050565b6020808252601d908201527f596f75206d7573742062652061646d696e20746f20646f20746869732e000000604082015260600190565b6000828210156116f8576116f8611783565b500390565b60005b83811015611718578181015183820152602001611700565b83811115611727576000848401525b50505050565b600181811c9082168061174157607f821691505b6020821081141561176257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561177c5761177c611783565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204daa82cd1c2b075a5ab3060a728d6041700b44b6aad580bd3598afb3b98c477b64736f6c63430008040033",
  "bytecodeSha1": "df8dead8d0346626996a4bb499d6d1fde0f6a62c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Voting",
  "coverageMap": {
    "branches": {
      "0": {
        "Voting.createCandidate": {
          "21": [
            2203,
            2237,
            true
          ]
        },
        "Voting.createVoter": {
          "23": [
            1482,
            1513,
            true
          ]
        },
        "Voting.getElectionResult": {
          "22": [
            3669,
            3680,
            true
          ]
        },
        "Voting.vote": {
          "24": [
            2854,
            2864,
            true
          ],
          "25": [
            2917,
            2952,
            true
          ],
          "26": [
            3006,
            3042,
            true
          ],
          "27": [
            3160,
            3193,
            true
          ],
          "28": [
            3245,
            3387,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Voting.createCandidate": {
          "0": [
            2195,
            2276
          ],
          "1": [
            2286,
            2352
          ],
          "2": [
            2362,
            2400
          ],
          "3": [
            2410,
            2460
          ]
        },
        "Voting.createVoter": {
          "10": [
            1474,
            1550
          ],
          "11": [
            1560,
            1617
          ],
          "12": [
            1627,
            1662
          ],
          "13": [
            1681,
            1718
          ]
        },
        "Voting.endElection": {
          "5": [
            1306,
            1324
          ]
        },
        "Voting.getCandidatesList": {
          "4": [
            1924,
            1941
          ]
        },
        "Voting.getElectionResult": {
          "8": [
            3661,
            3708
          ],
          "9": [
            3718,
            3735
          ]
        },
        "Voting.getVotersList": {
          "7": [
            1811,
            1824
          ]
        },
        "Voting.startElection": {
          "6": [
            1222,
            1239
          ]
        },
        "Voting.vote": {
          "14": [
            2846,
            2899
          ],
          "15": [
            2909,
            2988
          ],
          "16": [
            2998,
            3072
          ],
          "17": [
            3152,
            3227
          ],
          "18": [
            3237,
            3462
          ],
          "19": [
            3472,
            3510
          ],
          "20": [
            3521,
            3565
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc86f38511610071578063bc86f3851461013d578063ca3eb44314610152578063d373f8d41461015a578063dd4159c01461016d578063e794273414610180578063fc6f9468146101a057600080fd5b8063137edd98146100b95780631d823d32146100e25780634aba5f34146100f757806359f784681461010c57806362d73eb81461011457806379ae584d1461011c575b600080fd5b6000546100cd90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6100f56100f0366004611267565b6101cb565b005b6100ff6103e0565b6040516100d991906114ee565b6100f561063f565b6100f5610678565b61012f61012a366004611267565b6106b7565b6040519081526020016100d9565b6101456106f0565b6040516100d991906115a4565b6100ff6108c8565b6100f56101683660046112eb565b610b4e565b6100f561017b366004611356565b610d13565b61012f61018e36600461133e565b60026020526000908152604090205481565b6000546101b3906001600160a01b031681565b6040516001600160a01b0390911681526020016100d9565b6000546001600160a01b031633146101fe5760405162461bcd60e51b81526004016101f5906116af565b60405180910390fd5b600061020b8484846106b7565b6000818152600260205260409020546003805492935091811061023e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102ad5760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b60648201526084016101f5565b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01926103219284920190611147565b50602082810151805161033a9260018501920190611147565b5060408201518051610356916002840191602090910190611147565b5060608201516003828101919091556080909201516004909101805460ff19169115159190911790555461038c906001906116e6565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef906103d29086908690869061166c565b60405180910390a150505050565b6000546060906001600160a01b0316331461040d5760405162461bcd60e51b81526004016101f5906116af565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561063657838290600052602060002090600502016040518060a00160405290816000820180546104629061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461048e9061172d565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b505050505081526020016001820180546104f49061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546105209061172d565b801561056d5780601f106105425761010080835404028352916020019161056d565b820191906000526020600020905b81548152906001019060200180831161055057829003601f168201915b505050505081526020016002820180546105869061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546105b29061172d565b80156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604090910152908252600192909201910161042f565b50505050905090565b6000546001600160a01b031633146106695760405162461bcd60e51b81526004016101f5906116af565b6000805460ff60a01b19169055565b6000546001600160a01b031633146106a25760405162461bcd60e51b81526004016101f5906116af565b6000805460ff60a01b1916600160a01b179055565b6000808484846040516020016106cf93929190611410565b60408051808303601f19018152919052805160209091012095945050505050565b6000546060906001600160a01b0316331461071d5760405162461bcd60e51b81526004016101f5906116af565b6001805480602002602001604051908101604052809291908181526020016000905b8282101561063657838290600052602060002090600402016040518060a00160405290816000820180546107729061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461079e9061172d565b80156107eb5780601f106107c0576101008083540402835291602001916107eb565b820191906000526020600020905b8154815290600101906020018083116107ce57829003601f168201915b505050505081526020016001820154815260200160028201805461080e9061172d565b80601f016020809104026020016040519081016040528092919081815260200182805461083a9061172d565b80156108875780601f1061085c57610100808354040283529160200191610887565b820191906000526020600020905b81548152906001019060200180831161086a57829003601f168201915b50505091835250506003919091015460ff8082161515602080850191909152610100909204161515604090920191909152908252600192909201910161073f565b600054606090600160a01b900460ff16156109255760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e00000000000000000060448201526064016101f5565b6003805480602002602001604051908101604052809291908181526020016000905b8282101561063657838290600052602060002090600502016040518060a001604052908160008201805461097a9061172d565b80601f01602080910402602001604051908101604052809291908181526020018280546109a69061172d565b80156109f35780601f106109c8576101008083540402835291602001916109f3565b820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b50505050508152602001600182018054610a0c9061172d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a389061172d565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050508152602001600282018054610a9e9061172d565b80601f0160208091040260200160405190810160405280929190818152602001828054610aca9061172d565b8015610b175780601f10610aec57610100808354040283529160200191610b17565b820191906000526020600020905b815481529060010190602001808311610afa57829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040909101529082526001929092019101610947565b600082815260046020526040902054600180549091908110610b8057634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff1615610bec5760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e60448201526064016101f5565b6040805160a0810182528481526020808201859052918101839052600160608201819052608082018190528054808201825560009190915281518051929360049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610c5f9284920190611147565b50602082810151600183015560408301518051610c829260028501920190611147565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff199093169290921717905560018054610cc291906116e6565b6000838152600460205260409081902091909155517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a90610d06908590849061163e565b60405180910390a1505050565b600054600160a01b900460ff16610d6c5760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e000060448201526064016101f5565b600084815260046020526040902054600180549091908110610d9e57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160019054906101000a900460ff16610e095760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e0060448201526064016101f5565b600084815260046020526040902054600180549091908110610e3b57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600490920201015460ff16610e9e5760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e0000000000000060448201526064016101f5565b6000610eab8484846106b7565b60008181526002602052604090205460038054929350918110610ede57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16610f415760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e00000060448201526064016101f5565b600085815260046020526040902054600180549091908110610f7357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600201604051602001610f949190611453565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610fde57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610fff9190611453565b60405160208183030381529060405280519060200120146110975760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a4016101f5565b6000818152600260205260409020546003805490919081106110c957634e487b7160e01b600052603260045260246000fd5b6000918252602082206003600590920201018054916110e783611768565b909155505060008581526004602052604081205460018054909190811061111e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201600301805460ff19169115159190911790555050505050565b8280546111539061172d565b90600052602060002090601f01602090048101928261117557600085556111bb565b82601f1061118e57805160ff19168380011785556111bb565b828001600101855582156111bb579182015b828111156111bb5782518255916020019190600101906111a0565b506111c79291506111cb565b5090565b5b808211156111c757600081556001016111cc565b600082601f8301126111f0578081fd5b813567ffffffffffffffff8082111561120b5761120b611799565b604051601f8301601f19908116603f0116810190828211818310171561123357611233611799565b8160405283815286602085880101111561124b578485fd5b8360208701602083013792830160200193909352509392505050565b60008060006060848603121561127b578283fd5b833567ffffffffffffffff80821115611292578485fd5b61129e878388016111e0565b945060208601359150808211156112b3578384fd5b6112bf878388016111e0565b935060408601359150808211156112d4578283fd5b506112e1868287016111e0565b9150509250925092565b6000806000606084860312156112ff578283fd5b833567ffffffffffffffff80821115611316578485fd5b611322878388016111e0565b94506020860135935060408601359150808211156112d4578283fd5b60006020828403121561134f578081fd5b5035919050565b6000806000806080858703121561136b578081fd5b84359350602085013567ffffffffffffffff80821115611389578283fd5b611395888389016111e0565b945060408701359150808211156113aa578283fd5b6113b6888389016111e0565b935060608701359150808211156113cb578283fd5b506113d8878288016111e0565b91505092959194509250565b600081518084526113fc8160208601602086016116fd565b601f01601f19169290920160200192915050565b600084516114228184602089016116fd565b8451908301906114368183602089016116fd565b84519101906114498183602088016116fd565b0195945050505050565b600080835482600182811c91508083168061146f57607f831692505b602080841082141561148f57634e487b7160e01b87526022600452602487fd5b8180156114a357600181146114b4576114e0565b60ff198616895284890196506114e0565b60008a815260209020885b868110156114d85781548b8201529085019083016114bf565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561159657603f19898403018552815160a0815181865261153a828701826113e4565b915050888201518582038a87015261155282826113e4565b915050878201518582038987015261156a82826113e4565b606084810151908801526080938401511515939096019290925250509386019390860190600101611514565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561159657603f19898403018552815160a081518186526115f0828701826113e4565b9150508882015189860152878201518582038987015261161082826113e4565b60608481015115159088015260809384015115159390960192909252505093860193908601906001016115ca565b60408152600061165160408301856113e4565b828103602084015261166381856113e4565b95945050505050565b60608152600061167f60608301866113e4565b828103602084015261169181866113e4565b905082810360408401526116a581856113e4565b9695505050505050565b6020808252601d908201527f596f75206d7573742062652061646d696e20746f20646f20746869732e000000604082015260600190565b6000828210156116f8576116f8611783565b500390565b60005b83811015611718578181015183820152602001611700565b83811115611727576000848401525b50505050565b600181811c9082168061174157607f821691505b6020821081141561176257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561177c5761177c611783565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204daa82cd1c2b075a5ab3060a728d6041700b44b6aad580bd3598afb3b98c477b64736f6c63430008040033",
  "deployedSourceMap": "25:3719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80:30;;;;;-1:-1:-1;;;80:30:0;;;;;;;;;8697:14:1;;8690:22;8672:41;;8660:2;8645:18;80:30:0;;;;;;;;2001:466;;;;;;:::i;:::-;;:::i;:::-;;1836:112;;;:::i;:::-;;;;;;;:::i;1256:75::-;;;:::i;1170:76::-;;;:::i;2477:239::-;;;;;;:::i;:::-;;:::i;:::-;;;13193:25:1;;;13181:2;13166:18;2477:239:0;13148:76:1;1731:100:0;;;:::i;:::-;;;;;;;:::i;3582:160::-;;;:::i;1376:349::-;;;;;;:::i;:::-;;:::i;2726:846::-;;;;;;:::i;:::-;;:::i;798:35::-;;;;;;:::i;:::-;;;;;;;;;;;;;;47:27;;;;;-1:-1:-1;;;;;47:27:0;;;;;;-1:-1:-1;;;;;5448:32:1;;;5430:51;;5418:2;5403:18;47:27:0;5385:102:1;2001:466:0;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:68;;;;-1:-1:-1;;;145:68:0;;;;;;;:::i;:::-;;;;;;;;;2126:11:::1;2141:44;2155:5;2162:13;2177:7;2141:13;:44::i;:::-;2215:14;::::0;;;:6:::1;:14;::::0;;;;;2204:10:::1;:26:::0;;2126:59;;-1:-1:-1;2204:10:0;:26;::::1;;;-1:-1:-1::0;;;2204:26:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:33:::1;:26;::::0;;::::1;;:33;::::0;::::1;;2203:34;2195:81;;;::::0;-1:-1:-1;;;2195:81:0;;11295:2:1;2195:81:0::1;::::0;::::1;11277:21:1::0;11334:2;11314:18;;;11307:30;11373:34;11353:18;;;11346:62;-1:-1:-1;;;11424:18:1;;;11417:32;11466:19;;2195:81:0::1;11267:224:1::0;2195:81:0::1;2302:49;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;2302:49:0;;;;;;2346:4:::1;2302:49:::0;;;;;;2286:10:::1;:66:::0;;;;::::1;::::0;;;;;;;;;2302:49;;2286:66:::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2286:66:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2286:66:0::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2286:66:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2286:66:0::1;::::0;::::1;;::::0;;;::::1;::::0;;2379:17;:21:::1;::::0;-1:-1:-1;;2379:21:0::1;:::i;:::-;2362:14;::::0;;;:6:::1;:14;::::0;;;;;;:38;;;;2415:45;::::1;::::0;::::1;::::0;2430:5;;2437:13;;2452:7;;2415:45:::1;:::i;:::-;;;;;;;;223:1;2001:466:::0;;;:::o;1836:112::-;167:12;;1895:18;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:68;;;;-1:-1:-1;;;145:68:0;;;;;;;:::i;:::-;1931:10:::1;1924:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1924:17:0;;;-1:-1:-1;;1924:17:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;;;;;;;;;;;::::1;::::0;::::1;;;;;;;;;;1836:112:::0;:::o;1256:75::-;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:68;;;;-1:-1:-1;;;145:68:0;;;;;;;:::i;:::-;1319:5:::1;1306:18:::0;;-1:-1:-1;;;;1306:18:0::1;::::0;;1256:75::o;1170:76::-;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:68;;;;-1:-1:-1;;;145:68:0;;;;;;;:::i;:::-;1222:10:::1;:17:::0;;-1:-1:-1;;;;1222:17:0::1;-1:-1:-1::0;;;1222:17:0::1;::::0;;1170:76::o;2477:239::-;2594:4;2609:9;2653:5;2660:13;2675:7;2636:47;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2636:47:0;;;;;;2626:58;;2636:47;2626:58;;;;;2477:239;-1:-1:-1;;;;;2477:239:0:o;1731:100::-;167:12;;1786:14;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:68;;;;-1:-1:-1;;;145:68:0;;;;;;;:::i;:::-;1818:6:::1;1811:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1811:13:0;;;-1:-1:-1;;1811:13:0::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;;;;::::0;;;;;;;;;;;;;;;::::1;::::0;::::1;;;3582:160:::0;3670:10;;3632:18;;-1:-1:-1;;;3670:10:0;;;;3669:11;3661:47;;;;-1:-1:-1;;;3661:47:0;;11698:2:1;3661:47:0;;;11680:21:1;11737:2;11717:18;;;11710:30;11776:25;11756:18;;;11749:53;11819:18;;3661:47:0;11670:173:1;3661:47:0;3725:10;3718:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3718:17:0;;;-1:-1:-1;;3718:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:349;1490:15;;;;:10;:15;;;;;;1483:6;:23;;:6;;1490:15;1483:23;;;;-1:-1:-1;;;1483:23:0;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;1482:31;1474:76;;;;-1:-1:-1;;;1474:76:0;;12050:2:1;1474:76:0;;;12032:21:1;;;12069:18;;;12062:30;12128:34;12108:18;;;12101:62;12180:18;;1474:76:0;12022:182:1;1474:76:0;1572:44;;;;;;;;;;;;;;;;;;;;;;;;1560:6;1572:44;;;;;;;;;;;;1560:57;;;;;;;-1:-1:-1;1560:57:0;;;;;;;;1572:44;;1560:57;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1560:57:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1560:57:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1560:57:0;;;;;;;-1:-1:-1;;1560:57:0;;;;;;;;;;;1645:13;;:17;;1560:57;1645:17;:::i;:::-;1627:15;;;;:10;:15;;;;;;;:35;;;;1686:32;;;;;1697:5;;1704:13;;1686:32;:::i;:::-;;;;;;;;1376:349;;;:::o;2726:846::-;2854:10;;-1:-1:-1;;;2854:10:0;;;;2846:53;;;;-1:-1:-1;;;2846:53:0;;12411:2:1;2846:53:0;;;12393:21:1;12450:2;12430:18;;;12423:30;12489:32;12469:18;;;12462:60;12539:18;;2846:53:0;12383:180:1;2846:53:0;2924:20;;;;:10;:20;;;;;;2917:6;:28;;:6;;2924:20;2917:28;;;;-1:-1:-1;;;2917:28:0;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;2909:79;;;;-1:-1:-1;;;2909:79:0;;10581:2:1;2909:79:0;;;10563:21:1;10620:2;10600:18;;;10593:30;10659:33;10639:18;;;10632:61;10710:18;;2909:79:0;10553:181:1;2909:79:0;3013:20;;;;:10;:20;;;;;;3006:6;:28;;:6;;3013:20;3006:28;;;;-1:-1:-1;;;3006:28:0;;;;;;;;;;;;;;;;;:36;:28;;;;;:36;;;;2998:74;;;;-1:-1:-1;;;2998:74:0;;10941:2:1;2998:74:0;;;10923:21:1;10980:2;10960:18;;;10953:30;11019:27;10999:18;;;10992:55;11064:18;;2998:74:0;10913:175:1;2998:74:0;3082:11;3096:46;3110:7;3119:13;3134:7;3096:13;:46::i;:::-;3171:14;;;;:6;:14;;;;;;3160:10;:26;;3082:60;;-1:-1:-1;3160:10:0;:26;;;;-1:-1:-1;;;3160:26:0;;;;;;;;;;;;;;;;;:33;:26;;;;;:33;;;;3152:75;;;;-1:-1:-1;;;3152:75:0;;9865:2:1;3152:75:0;;;9847:21:1;9904:2;9884:18;;;9877:30;9943:31;9923:18;;;9916:59;9992:18;;3152:75:0;9837:179:1;3152:75:0;3351:20;;;;:10;:20;;;;;;3344:6;:28;;:6;;3351:20;3344:28;;;;-1:-1:-1;;;3344:28:0;;;;;;;;;;;;;;;;;;;:41;;3327:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;3317:70;;;;;;3272:10;3283:6;:14;3290:6;3283:14;;;;;;;;;;;;3272:26;;;;;;-1:-1:-1;;;3272:26:0;;;;;;;;;;;;;;;;;;;:39;;3255:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;3245:68;;;;;;:142;3237:225;;;;-1:-1:-1;;;3237:225:0;;12770:2:1;3237:225:0;;;12752:21:1;12809:2;12789:18;;;12782:30;12848:34;12828:18;;;12821:62;12919:34;12899:18;;;12892:62;-1:-1:-1;;;12970:19:1;;;12963:37;13017:19;;3237:225:0;12742:300:1;3237:225:0;3483:14;;;;:6;:14;;;;;;3472:10;:26;;:10;;3483:14;3472:26;;;;-1:-1:-1;;;3472:26:0;;;;;;;;;;;;;;;;:36;:26;;;;;:36;:38;;;;;;:::i;:::-;;;;-1:-1:-1;;3560:5:0;3528:20;;;:10;:20;;;;;;3521:6;:28;;:6;;3528:20;3521:28;;;;-1:-1:-1;;;3521:28:0;;;;;;;;;;;;;;;;;;;;;;:36;;:44;;-1:-1:-1;;3521:44:0;;;;;;;;;;-1:-1:-1;;;;;2726:846:0:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:739:1;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;132:5;125;118:20;77:2;172:6;159:20;198:18;235:2;231;228:10;225:2;;;241:18;;:::i;:::-;316:2;310:9;284:2;370:13;;-1:-1:-1;;366:22:1;;;390:2;362:31;358:40;346:53;;;414:18;;;434:22;;;411:46;408:2;;;460:18;;:::i;:::-;500:10;496:2;489:22;535:2;527:6;520:18;581:3;574:4;569:2;561:6;557:15;553:26;550:35;547:2;;;602:5;595;588:20;547:2;670;663:4;655:6;651:17;644:4;636:6;632:17;619:54;693:15;;;710:4;689:26;682:41;;;;-1:-1:-1;697:6:1;67:686;-1:-1:-1;;;67:686:1:o;758:783::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;955:6;947;940:22;902:2;1000:9;987:23;1029:18;1070:2;1062:6;1059:14;1056:2;;;1091:6;1083;1076:22;1056:2;1119:50;1161:7;1152:6;1141:9;1137:22;1119:50;:::i;:::-;1109:60;;1222:2;1211:9;1207:18;1194:32;1178:48;;1251:2;1241:8;1238:16;1235:2;;;1272:6;1264;1257:22;1235:2;1300:52;1344:7;1333:8;1322:9;1318:24;1300:52;:::i;:::-;1290:62;;1405:2;1394:9;1390:18;1377:32;1361:48;;1434:2;1424:8;1421:16;1418:2;;;1455:6;1447;1440:22;1418:2;;1483:52;1527:7;1516:8;1505:9;1501:24;1483:52;:::i;:::-;1473:62;;;892:649;;;;;:::o;1546:641::-;1643:6;1651;1659;1712:2;1700:9;1691:7;1687:23;1683:32;1680:2;;;1733:6;1725;1718:22;1680:2;1778:9;1765:23;1807:18;1848:2;1840:6;1837:14;1834:2;;;1869:6;1861;1854:22;1834:2;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1994:2;1983:9;1979:18;1966:32;1956:42;;2051:2;2040:9;2036:18;2023:32;2007:48;;2080:2;2070:8;2067:16;2064:2;;;2101:6;2093;2086:22;2192:190;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:2;;;2325:6;2317;2310:22;2272:2;-1:-1:-1;2353:23:1;;2262:120;-1:-1:-1;2262:120:1:o;2387:852::-;2503:6;2511;2519;2527;2580:3;2568:9;2559:7;2555:23;2551:33;2548:2;;;2602:6;2594;2587:22;2548:2;2643:9;2630:23;2620:33;;2704:2;2693:9;2689:18;2676:32;2727:18;2768:2;2760:6;2757:14;2754:2;;;2789:6;2781;2774:22;2754:2;2817:50;2859:7;2850:6;2839:9;2835:22;2817:50;:::i;:::-;2807:60;;2920:2;2909:9;2905:18;2892:32;2876:48;;2949:2;2939:8;2936:16;2933:2;;;2970:6;2962;2955:22;2933:2;2998:52;3042:7;3031:8;3020:9;3016:24;2998:52;:::i;:::-;2988:62;;3103:2;3092:9;3088:18;3075:32;3059:48;;3132:2;3122:8;3119:16;3116:2;;;3153:6;3145;3138:22;3116:2;;3181:52;3225:7;3214:8;3203:9;3199:24;3181:52;:::i;:::-;3171:62;;;2538:701;;;;;;;:::o;3244:258::-;3286:3;3324:5;3318:12;3351:6;3346:3;3339:19;3367:63;3423:6;3416:4;3411:3;3407:14;3400:4;3393:5;3389:16;3367:63;:::i;:::-;3484:2;3463:15;-1:-1:-1;;3459:29:1;3450:39;;;;3491:4;3446:50;;3294:208;-1:-1:-1;;3294:208:1:o;3507:664::-;3734:3;3772:6;3766:13;3788:53;3834:6;3829:3;3822:4;3814:6;3810:17;3788:53;:::i;:::-;3904:13;;3863:16;;;;3926:57;3904:13;3863:16;3960:4;3948:17;;3926:57;:::i;:::-;4050:13;;4005:20;;;4072:57;4050:13;4005:20;4106:4;4094:17;;4072:57;:::i;:::-;4145:20;;3742:429;-1:-1:-1;;;;;3742:429:1:o;4176:1103::-;4304:3;4333;4368:6;4362:13;4398:3;4420:1;4448:9;4444:2;4440:18;4430:28;;4508:2;4497:9;4493:18;4530;4520:2;;4574:4;4566:6;4562:17;4552:27;;4520:2;4600;4648;4640:6;4637:14;4617:18;4614:38;4611:2;;;-1:-1:-1;;;4675:33:1;;4731:4;4728:1;4721:15;4761:4;4682:3;4749:17;4611:2;4792:18;4819:104;;;;4937:1;4932:322;;;;4785:469;;4819:104;-1:-1:-1;;4852:24:1;;4840:37;;4897:16;;;;-1:-1:-1;4819:104:1;;4932:322;13276:4;13295:17;;;13345:4;13329:21;;5027:3;5043:165;5057:6;5054:1;5051:13;5043:165;;;5135:14;;5122:11;;;5115:35;5178:16;;;;5072:10;;5043:165;;;5047:3;;5237:6;5232:3;5228:16;5221:23;;4785:469;-1:-1:-1;5270:3:1;;4312:967;-1:-1:-1;;;;;;;;4312:967:1:o;5492:1572::-;5684:4;5713:2;5753;5742:9;5738:18;5783:2;5772:9;5765:21;5806:6;5841;5835:13;5872:6;5864;5857:22;5898:2;5888:12;;5931:2;5920:9;5916:18;5909:25;;5993:2;5983:6;5980:1;5976:14;5965:9;5961:30;5957:39;6031:2;6023:6;6019:15;6052:4;6065:970;6079:6;6076:1;6073:13;6065:970;;;6172:2;6168:7;6156:9;6148:6;6144:22;6140:36;6135:3;6128:49;6206:6;6200:13;6236:4;6279:2;6273:9;6310:2;6302:6;6295:18;6340:48;6384:2;6376:6;6372:15;6358:12;6340:48;:::i;:::-;6326:62;;;6437:2;6433;6429:11;6423:18;6490:6;6482;6478:19;6473:2;6465:6;6461:15;6454:44;6525:41;6559:6;6543:14;6525:41;:::i;:::-;6511:55;;;6615:2;6611;6607:11;6601:18;6668:6;6660;6656:19;6651:2;6643:6;6639:15;6632:44;6703:41;6737:6;6721:14;6703:41;:::i;:::-;6767:4;6814:11;;;6808:18;6791:15;;;6784:43;6850:4;6911:11;;;6905:18;6898:26;6891:34;6874:15;;;;6867:59;;;;-1:-1:-1;;7013:12:1;;;;6978:15;;;;6101:1;6094:9;6065:970;;;-1:-1:-1;7052:6:1;;5693:1371;-1:-1:-1;;;;;;;;5693:1371:1:o;7069:1458::-;7253:4;7282:2;7322;7311:9;7307:18;7352:2;7341:9;7334:21;7375:6;7410;7404:13;7441:6;7433;7426:22;7467:2;7457:12;;7500:2;7489:9;7485:18;7478:25;;7562:2;7552:6;7549:1;7545:14;7534:9;7530:30;7526:39;7600:2;7592:6;7588:15;7621:4;7634:864;7648:6;7645:1;7642:13;7634:864;;;7741:2;7737:7;7725:9;7717:6;7713:22;7709:36;7704:3;7697:49;7775:6;7769:13;7805:4;7848:2;7842:9;7879:2;7871:6;7864:18;7909:48;7953:2;7945:6;7941:15;7927:12;7909:48;:::i;:::-;7895:62;;;8008:2;8004;8000:11;7994:18;7989:2;7981:6;7977:15;7970:43;8062:2;8058;8054:11;8048:18;8115:6;8107;8103:19;8098:2;8090:6;8086:15;8079:44;8150:41;8184:6;8168:14;8150:41;:::i;:::-;8214:4;8275:11;;;8269:18;8262:26;8255:34;8238:15;;;8231:59;8313:4;8374:11;;;8368:18;8361:26;8354:34;8337:15;;;;8330:59;;;;-1:-1:-1;;8476:12:1;;;;8441:15;;;;7670:1;7663:9;7634:864;;8724:383;8921:2;8910:9;8903:21;8884:4;8947:45;8988:2;8977:9;8973:18;8965:6;8947:45;:::i;:::-;9040:9;9032:6;9028:22;9023:2;9012:9;9008:18;9001:50;9068:33;9094:6;9086;9068:33;:::i;:::-;9060:41;8893:214;-1:-1:-1;;;;;8893:214:1:o;9112:546::-;9357:2;9346:9;9339:21;9320:4;9383:45;9424:2;9413:9;9409:18;9401:6;9383:45;:::i;:::-;9476:9;9468:6;9464:22;9459:2;9448:9;9444:18;9437:50;9510:33;9536:6;9528;9510:33;:::i;:::-;9496:47;;9591:9;9583:6;9579:22;9574:2;9563:9;9559:18;9552:50;9619:33;9645:6;9637;9619:33;:::i;:::-;9611:41;9329:329;-1:-1:-1;;;;;;9329:329:1:o;10021:353::-;10223:2;10205:21;;;10262:2;10242:18;;;10235:30;10301:31;10296:2;10281:18;;10274:59;10365:2;10350:18;;10195:179::o;13361:125::-;13401:4;13429:1;13426;13423:8;13420:2;;;13434:18;;:::i;:::-;-1:-1:-1;13471:9:1;;13410:76::o;13491:258::-;13563:1;13573:113;13587:6;13584:1;13581:13;13573:113;;;13663:11;;;13657:18;13644:11;;;13637:39;13609:2;13602:10;13573:113;;;13704:6;13701:1;13698:13;13695:2;;;13739:1;13730:6;13725:3;13721:16;13714:27;13695:2;;13544:205;;;:::o;13754:380::-;13833:1;13829:12;;;;13876;;;13897:2;;13951:4;13943:6;13939:17;13929:27;;13897:2;14004;13996:6;13993:14;13973:18;13970:38;13967:2;;;14050:10;14045:3;14041:20;14038:1;14031:31;14085:4;14082:1;14075:15;14113:4;14110:1;14103:15;13967:2;;13809:325;;;:::o;14139:135::-;14178:3;-1:-1:-1;;14199:17:1;;14196:2;;;14219:18;;:::i;:::-;-1:-1:-1;14266:1:1;14255:13;;14186:88::o;14279:127::-;14340:10;14335:3;14331:20;14328:1;14321:31;14371:4;14368:1;14361:15;14395:4;14392:1;14385:15;14411:127;14472:10;14467:3;14463:20;14460:1;14453:31;14503:4;14500:1;14493:15;14527:4;14524:1;14517:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    3744
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC86F385 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC86F385 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xCA3EB443 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xD373F8D4 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xDD4159C0 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE7942734 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x137EDD98 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1D823D32 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x4ABA5F34 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x59F78468 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x62D73EB8 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x79AE584D EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x63F JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x1356 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20B DUP5 DUP5 DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1097 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x5 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP3 PUSH2 0x321 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1147 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x33A SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1147 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x356 SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1147 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD PUSH2 0x38C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF SWAP1 PUSH2 0x3D2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x636 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x462 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x4F4 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x520 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x542 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x550 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x586 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B2 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x42F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x636 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x772 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79E SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x80E SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83A SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x887 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x887 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x73F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x636 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A6 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9C8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xA0C SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA38 SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA9E SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACA SWAP1 PUSH2 0x172D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAEC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x947 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xB80 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220696420697320616C72656164792072656769737465726564212E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x4 SWAP1 SWAP3 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP3 PUSH2 0xC5F SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1147 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC82 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1147 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A SWAP1 PUSH2 0xD06 SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xD9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xE3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xE9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP5 DUP5 DUP5 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0xEDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xF41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xF73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF94 SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xFDE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x3AB2B731BC97 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x10C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x10E7 DUP4 PUSH2 0x1768 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x111E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1153 SWAP1 PUSH2 0x172D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1175 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x11BB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x118E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x11BB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x11BB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11A0 JUMP JUMPDEST POP PUSH2 0x11C7 SWAP3 SWAP2 POP PUSH2 0x11CB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120B PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1233 JUMPI PUSH2 0x1233 PUSH2 0x1799 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x124B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x127B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1292 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x129E DUP8 DUP4 DUP9 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12B3 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x12BF DUP8 DUP4 DUP9 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12D4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x12E1 DUP7 DUP3 DUP8 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12FF JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1316 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1322 DUP8 DUP4 DUP9 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12D4 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x136B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1389 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1395 DUP9 DUP4 DUP10 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13AA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13B6 DUP9 DUP4 DUP10 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13CB JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x13D8 DUP8 DUP3 DUP9 ADD PUSH2 0x11E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x13FC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x1422 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x16FD JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1436 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x16FD JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1449 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x16FD JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x146F JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x148F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x14A3 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x14B4 JUMPI PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x14D8 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x14BF JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x153A DUP3 DUP8 ADD DUP3 PUSH2 0x13E4 JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP11 DUP8 ADD MSTORE PUSH2 0x1552 DUP3 DUP3 PUSH2 0x13E4 JUMP JUMPDEST SWAP2 POP POP DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x156A DUP3 DUP3 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1514 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0x15F0 DUP3 DUP8 ADD DUP3 PUSH2 0x13E4 JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP10 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0x1610 DUP3 DUP3 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1651 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13E4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1663 DUP2 DUP6 PUSH2 0x13E4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x167F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x13E4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1691 DUP2 DUP7 PUSH2 0x13E4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16A5 DUP2 DUP6 PUSH2 0x13E4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206D7573742062652061646D696E20746F20646F20746869732E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16F8 JUMPI PUSH2 0x16F8 PUSH2 0x1783 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1718 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1700 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1741 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1762 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x1783 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xAA DUP3 0xCD SHR 0x2B SMOD GAS GAS 0xB3 MOD EXP PUSH19 0x8D6041700B44B6AAD580BD3598AFB3B98C477B PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC86F385"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA3EB443"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD373F8D4"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD4159C0"
    },
    "82": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "86": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE7942734"
    },
    "93": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "97": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC6F9468"
    },
    "104": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "108": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x137EDD98"
    },
    "120": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1D823D32"
    },
    "131": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "135": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4ABA5F34"
    },
    "142": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "146": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59F78468"
    },
    "153": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "157": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62D73EB8"
    },
    "164": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79AE584D"
    },
    "175": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C"
    },
    "179": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        3744
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "188": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "192": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DIV",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "202": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "AND",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "204": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "op": "SWAP1"
    },
    "210": {
      "op": "ISZERO"
    },
    "211": {
      "op": "ISZERO"
    },
    "212": {
      "op": "DUP2"
    },
    "213": {
      "op": "MSTORE"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "216": {
      "op": "ADD"
    },
    "217": {
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "220": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SUB",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "RETURN",
      "path": "0"
    },
    "226": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "230": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "233": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "234": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "236": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1267"
    },
    "239": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "240": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB"
    },
    "244": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "STOP",
      "path": "0"
    },
    "247": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "251": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E0"
    },
    "254": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1836,
        1948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "258": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "259": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "262": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "263": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "264": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EE"
    },
    "267": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1836,
        1948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "268": {
      "fn": "Voting.endElection",
      "offset": [
        1256,
        1331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "269": {
      "fn": "Voting.endElection",
      "offset": [
        1256,
        1331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "272": {
      "fn": "Voting.endElection",
      "offset": [
        1256,
        1331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "275": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        1256,
        1331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "276": {
      "fn": "Voting.startElection",
      "offset": [
        1170,
        1246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "277": {
      "fn": "Voting.startElection",
      "offset": [
        1170,
        1246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "280": {
      "fn": "Voting.startElection",
      "offset": [
        1170,
        1246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x678"
    },
    "283": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        1170,
        1246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "284": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "285": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "288": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "291": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "292": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "294": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1267"
    },
    "297": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B7"
    },
    "302": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "303": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "306": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "307": {
      "op": "SWAP1"
    },
    "308": {
      "op": "DUP2"
    },
    "309": {
      "op": "MSTORE"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "312": {
      "op": "ADD"
    },
    "313": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "316": {
      "op": "JUMP"
    },
    "317": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "318": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "321": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F0"
    },
    "324": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1731,
        1831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "328": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "329": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "332": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "333": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "334": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A4"
    },
    "337": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1731,
        1831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "338": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3582,
        3742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3582,
        3742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "342": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3582,
        3742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C8"
    },
    "345": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3582,
        3742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "350": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "353": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "354": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "356": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12EB"
    },
    "359": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1376,
        1725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "360": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4E"
    },
    "364": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1376,
        1725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "369": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "372": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "373": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "375": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1356"
    },
    "378": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2726,
        3572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD13"
    },
    "383": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2726,
        3572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "offset": [
        798,
        833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "388": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "391": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "392": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "394": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133E"
    },
    "397": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        798,
        833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "398": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "401": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "403": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "404": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "406": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "407": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "408": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "409": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "411": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "412": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "413": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "414": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "415": {
      "fn": "Voting.vote",
      "offset": [
        798,
        833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "416": {
      "offset": [
        47,
        74
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "419": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "420": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "423": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "offset": [
        47,
        74
      ],
      "op": "AND",
      "path": "0"
    },
    "433": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "DUP2",
      "path": "0"
    },
    "434": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "438": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "op": "SWAP1"
    },
    "448": {
      "op": "SWAP2"
    },
    "449": {
      "op": "AND"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "offset": [
        47,
        74
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "458": {
      "op": "JUMP"
    },
    "459": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "462": {
      "fn": "Voting.createCandidate",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "472": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "473": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "474": {
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FE"
    },
    "477": {
      "offset": [
        145,
        213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "478": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "480": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "offset": [
        145,
        213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "489": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "490": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "492": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "ADD",
      "path": "0"
    },
    "493": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "496": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "497": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "500": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        145,
        213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "501": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "502": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "504": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "505": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "DUP1",
      "path": "0"
    },
    "506": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "507": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "SUB",
      "path": "0"
    },
    "508": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "509": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "510": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "511": {
      "fn": "Voting.createCandidate",
      "offset": [
        2126,
        2137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "513": {
      "fn": "Voting.createCandidate",
      "offset": [
        2141,
        2185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20B"
    },
    "516": {
      "fn": "Voting.createCandidate",
      "offset": [
        2155,
        2160
      ],
      "op": "DUP5",
      "path": "0"
    },
    "517": {
      "fn": "Voting.createCandidate",
      "offset": [
        2162,
        2175
      ],
      "op": "DUP5",
      "path": "0"
    },
    "518": {
      "fn": "Voting.createCandidate",
      "offset": [
        2177,
        2184
      ],
      "op": "DUP5",
      "path": "0"
    },
    "519": {
      "fn": "Voting.createCandidate",
      "offset": [
        2141,
        2154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B7"
    },
    "522": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2141,
        2185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "523": {
      "fn": "Voting.createCandidate",
      "offset": [
        2141,
        2185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "524": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "526": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "527": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "528": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "529": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "531": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "533": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "534": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "536": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "537": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "538": {
      "fn": "Voting.createCandidate",
      "offset": [
        2215,
        2229
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "539": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "541": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "DUP1",
      "path": "0"
    },
    "542": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "543": {
      "fn": "Voting.createCandidate",
      "offset": [
        2126,
        2185
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "544": {
      "fn": "Voting.createCandidate",
      "offset": [
        2126,
        2185
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2214
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "547": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "LT",
      "path": "0"
    },
    "549": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E"
    },
    "552": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "553": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "563": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "566": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "568": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "569": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "571": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "573": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "REVERT",
      "path": "0"
    },
    "574": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "575": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "577": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "578": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "DUP3",
      "path": "0"
    },
    "579": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "580": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "582": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "583": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "584": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "585": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "587": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "589": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "590": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "591": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "MUL",
      "path": "0"
    },
    "592": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2230
      ],
      "op": "ADD",
      "path": "0"
    },
    "593": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2237
      ],
      "op": "ADD",
      "path": "0"
    },
    "594": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2237
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "595": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "597": {
      "fn": "Voting.createCandidate",
      "offset": [
        2204,
        2237
      ],
      "op": "AND",
      "path": "0"
    },
    "598": {
      "branch": 21,
      "fn": "Voting.createCandidate",
      "offset": [
        2203,
        2237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "599": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD"
    },
    "602": {
      "branch": 21,
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "603": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "605": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "606": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "DUP2",
      "path": "0"
    },
    "614": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "617": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "619": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "DUP3",
      "path": "0"
    },
    "620": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "ADD",
      "path": "0"
    },
    "621": {
      "op": "MSTORE"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "626": {
      "op": "DUP3"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "op": "MSTORE"
    },
    "629": {
      "op": "PUSH32",
      "value": "0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "675": {
      "op": "DUP3"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "684": {
      "op": "JUMP"
    },
    "685": {
      "fn": "Voting.createCandidate",
      "offset": [
        2195,
        2276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "686": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "688": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "689": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "690": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "692": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "693": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "ADD",
      "path": "0"
    },
    "694": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP3",
      "path": "0"
    },
    "695": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "696": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP6",
      "path": "0"
    },
    "697": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "698": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "699": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "701": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "702": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP3",
      "path": "0"
    },
    "703": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "ADD",
      "path": "0"
    },
    "704": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP7",
      "path": "0"
    },
    "705": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "706": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "707": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "708": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "709": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "ADD",
      "path": "0"
    },
    "710": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP5",
      "path": "0"
    },
    "711": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "712": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "715": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "717": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP3",
      "path": "0"
    },
    "718": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "ADD",
      "path": "0"
    },
    "719": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "720": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "722": {
      "fn": "Voting.createCandidate",
      "offset": [
        2346,
        2350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "724": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "726": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP4",
      "path": "0"
    },
    "727": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "ADD",
      "path": "0"
    },
    "728": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "729": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "730": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "731": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "733": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "734": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "735": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "736": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "737": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "738": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "740": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "741": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "742": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "743": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "745": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "746": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "747": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "748": {
      "fn": "Voting.createCandidate",
      "offset": [
        2302,
        2351
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "749": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "751": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "752": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "753": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MUL",
      "path": "0"
    },
    "754": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "787": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "788": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "789": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "792": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "793": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP5",
      "path": "0"
    },
    "794": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "795": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "796": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "797": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1147"
    },
    "800": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2286,
        2352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "801": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "805": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "806": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "807": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "808": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "809": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "810": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "811": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33A"
    },
    "814": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "815": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "817": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP6",
      "path": "0"
    },
    "818": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "819": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "820": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "821": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1147"
    },
    "825": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2286,
        2352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "826": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "830": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "831": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "832": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "833": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "834": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "835": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x356"
    },
    "838": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "839": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "841": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP5",
      "path": "0"
    },
    "842": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "843": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "844": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "846": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "847": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "848": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "849": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "850": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1147"
    },
    "853": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2286,
        2352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "854": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "858": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "859": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "860": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "861": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "863": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "864": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "865": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "866": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "867": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "868": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "869": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "870": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "872": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "873": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "874": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "875": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "876": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "878": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "880": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ADD",
      "path": "0"
    },
    "881": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "882": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "885": {
      "op": "NOT"
    },
    "886": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "AND",
      "path": "0"
    },
    "887": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "888": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "889": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "890": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "891": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "893": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "OR",
      "path": "0"
    },
    "894": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "895": {
      "fn": "Voting.createCandidate",
      "offset": [
        2286,
        2352
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "896": {
      "fn": "Voting.createCandidate",
      "offset": [
        2379,
        2396
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "897": {
      "fn": "Voting.createCandidate",
      "offset": [
        2379,
        2400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38C"
    },
    "900": {
      "fn": "Voting.createCandidate",
      "offset": [
        2379,
        2400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "SWAP1"
    },
    "904": {
      "fn": "Voting.createCandidate",
      "offset": [
        2379,
        2400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E6"
    },
    "907": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2379,
        2400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "908": {
      "fn": "Voting.createCandidate",
      "offset": [
        2379,
        2400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "909": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "911": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "DUP3",
      "path": "0"
    },
    "912": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "913": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "914": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "916": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "918": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "919": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "921": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "922": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "924": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2376
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "925": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2400
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "926": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "927": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2400
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "928": {
      "fn": "Voting.createCandidate",
      "offset": [
        2362,
        2400
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "929": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 3
    },
    "930": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF"
    },
    "963": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "964": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D2"
    },
    "967": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "968": {
      "fn": "Voting.createCandidate",
      "offset": [
        2430,
        2435
      ],
      "op": "DUP7",
      "path": "0"
    },
    "969": {
      "fn": "Voting.createCandidate",
      "offset": [
        2430,
        2435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "970": {
      "fn": "Voting.createCandidate",
      "offset": [
        2437,
        2450
      ],
      "op": "DUP7",
      "path": "0"
    },
    "971": {
      "fn": "Voting.createCandidate",
      "offset": [
        2437,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "972": {
      "fn": "Voting.createCandidate",
      "offset": [
        2452,
        2459
      ],
      "op": "DUP7",
      "path": "0"
    },
    "973": {
      "fn": "Voting.createCandidate",
      "offset": [
        2452,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166C"
    },
    "977": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2415,
        2460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "978": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "979": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "981": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "982": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "984": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "SUB",
      "path": "0"
    },
    "985": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "986": {
      "fn": "Voting.createCandidate",
      "offset": [
        2415,
        2460
      ],
      "op": "LOG1",
      "path": "0"
    },
    "987": {
      "offset": [
        223,
        224
      ],
      "op": "POP",
      "path": "0"
    },
    "988": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "POP",
      "path": "0"
    },
    "989": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "POP",
      "path": "0"
    },
    "990": {
      "fn": "Voting.createCandidate",
      "offset": [
        2001,
        2467
      ],
      "op": "POP",
      "path": "0"
    },
    "991": {
      "fn": "Voting.createCandidate",
      "jump": "o",
      "offset": [
        2001,
        2467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "995": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "996": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "998": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1895,
        1913
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1008": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1009": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1010": {
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D"
    },
    "1013": {
      "offset": [
        145,
        213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1014": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1016": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "offset": [
        145,
        213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1025": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1026": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1028": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "ADD",
      "path": "0"
    },
    "1029": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1032": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1033": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "1036": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        145,
        213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1037": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        145,
        213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1038": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1931,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "1040": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1042": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1043": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1045": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1046": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1048": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1049": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1051": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1052": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1053": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1054": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1055": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1057": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1058": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1059": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1060": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1061": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1062": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1063": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1064": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1065": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1067": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1068": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1070": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1071": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1072": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1073": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1074": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "LT",
      "path": "0"
    },
    "1075": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1076": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x636"
    },
    "1079": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1080": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1081": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1082": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1083": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1085": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1086": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1088": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1090": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1091": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1092": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1094": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1095": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1096": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1098": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1099": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1100": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1102": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1103": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1105": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1106": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1108": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1110": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1111": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1112": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1113": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1114": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x462"
    },
    "1117": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1118": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1121": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1122": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1123": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1124": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1126": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1127": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1129": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1130": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1131": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DIV",
      "path": "0"
    },
    "1132": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1133": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1135": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1136": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1138": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1139": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1140": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1141": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1142": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1144": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1145": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1146": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1147": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1148": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1149": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1150": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1151": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1152": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1154": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1155": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1156": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1157": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1158": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48E"
    },
    "1161": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1162": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1165": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1166": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1167": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1168": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1169": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DB"
    },
    "1172": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1173": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1174": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1176": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "LT",
      "path": "0"
    },
    "1177": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B0"
    },
    "1180": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1181": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1184": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1185": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1186": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1187": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DIV",
      "path": "0"
    },
    "1188": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1189": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1190": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1191": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1192": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1194": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1195": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1196": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DB"
    },
    "1199": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1200": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1201": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1202": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1203": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1204": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1205": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1207": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1208": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1210": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1212": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1213": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1214": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1215": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1216": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1217": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1218": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1219": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1220": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1222": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1223": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1224": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1226": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1227": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1228": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1229": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "GT",
      "path": "0"
    },
    "1230": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BE"
    },
    "1233": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1234": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1235": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1236": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SUB",
      "path": "0"
    },
    "1237": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1239": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "AND",
      "path": "0"
    },
    "1240": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1241": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1242": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1243": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1244": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1245": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1246": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1247": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1248": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1249": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1251": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1253": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1254": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1256": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1257": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1258": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1259": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1260": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F4"
    },
    "1263": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1264": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1267": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1268": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1269": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1270": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1272": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1273": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1275": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1276": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1277": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DIV",
      "path": "0"
    },
    "1278": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1279": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1281": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1282": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1284": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1285": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1286": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1287": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1288": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1290": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1291": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1292": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1293": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1294": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1296": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1297": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1298": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1300": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1301": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1302": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1303": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1304": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x520"
    },
    "1307": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1308": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1311": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1312": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1313": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1314": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1315": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "1318": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1319": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1320": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1322": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "LT",
      "path": "0"
    },
    "1323": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "1326": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1327": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1330": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1331": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1332": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1333": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DIV",
      "path": "0"
    },
    "1334": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1335": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1336": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1337": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1338": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1340": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1341": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1342": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "1345": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1346": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1347": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1348": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1349": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1350": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1351": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1353": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1354": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1356": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1358": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1359": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1360": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1361": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1362": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1363": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1364": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1366": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1368": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1369": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1370": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1372": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1373": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1374": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1375": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "GT",
      "path": "0"
    },
    "1376": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x550"
    },
    "1379": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1380": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1381": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1382": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SUB",
      "path": "0"
    },
    "1383": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1385": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "AND",
      "path": "0"
    },
    "1386": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1387": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1388": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1389": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1390": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1391": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1392": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1393": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1394": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1395": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1396": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1397": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1399": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1400": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1402": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1403": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1404": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1405": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1406": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x586"
    },
    "1409": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1413": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1414": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1415": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1416": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1418": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1419": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1421": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1422": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1423": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DIV",
      "path": "0"
    },
    "1424": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1425": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1427": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1428": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1430": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1431": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1432": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1433": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1434": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1436": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1437": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1438": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1439": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1440": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1441": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1442": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1443": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1444": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1446": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1447": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1448": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1449": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1450": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B2"
    },
    "1453": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1454": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1457": {
      "fn": "Voting.getCandidatesList",
      "jump": "i",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1458": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1459": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1460": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1461": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FF"
    },
    "1464": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1465": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1466": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1468": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "LT",
      "path": "0"
    },
    "1469": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "1472": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1473": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1476": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1477": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1478": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1479": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DIV",
      "path": "0"
    },
    "1480": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MUL",
      "path": "0"
    },
    "1481": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1482": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1483": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1484": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1486": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1487": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1488": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FF"
    },
    "1491": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1492": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1493": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1494": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1495": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1496": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1497": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1499": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1500": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1502": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1504": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1505": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1507": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1508": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1509": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1510": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1511": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1512": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1514": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1515": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1516": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1518": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1519": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1520": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1521": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "GT",
      "path": "0"
    },
    "1522": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E2"
    },
    "1525": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1526": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1527": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1528": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SUB",
      "path": "0"
    },
    "1529": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1531": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "AND",
      "path": "0"
    },
    "1532": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1533": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1534": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1535": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "op": "POP"
    },
    "1539": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1540": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1541": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "op": "POP"
    },
    "1544": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1546": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1547": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1548": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1549": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1551": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1552": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1553": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1554": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1555": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1556": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1557": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1558": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1560": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1561": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1562": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1563": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1564": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1566": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "AND",
      "path": "0"
    },
    "1567": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1568": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1569": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1571": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1572": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1573": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1574": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1575": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1576": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1577": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1578": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1580": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1581": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1582": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1583": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1584": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1585": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1586": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F"
    },
    "1589": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1590": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1591": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1592": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1593": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1594": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1595": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1596": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1924,
        1941
      ],
      "op": "POP",
      "path": "0"
    },
    "1597": {
      "fn": "Voting.getCandidatesList",
      "offset": [
        1836,
        1948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1598": {
      "fn": "Voting.getCandidatesList",
      "jump": "o",
      "offset": [
        1836,
        1948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1599": {
      "fn": "Voting.endElection",
      "offset": [
        1256,
        1331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1600": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1602": {
      "fn": "Voting.endElection",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "op": "SUB"
    },
    "1611": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1612": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1613": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1614": {
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x669"
    },
    "1617": {
      "offset": [
        145,
        213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1618": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1620": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "offset": [
        145,
        213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1629": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1632": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "ADD",
      "path": "0"
    },
    "1633": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1636": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "1640": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        145,
        213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1641": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1642": {
      "fn": "Voting.endElection",
      "offset": [
        1319,
        1324
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "1644": {
      "fn": "Voting.endElection",
      "offset": [
        1306,
        1324
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1645": {
      "fn": "Voting.endElection",
      "offset": [
        1306,
        1324
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "op": "NOT"
    },
    "1652": {
      "fn": "Voting.endElection",
      "offset": [
        1306,
        1324
      ],
      "op": "AND",
      "path": "0"
    },
    "1653": {
      "fn": "Voting.endElection",
      "offset": [
        1306,
        1324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1654": {
      "fn": "Voting.endElection",
      "offset": [
        1306,
        1324
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1655": {
      "fn": "Voting.endElection",
      "jump": "o",
      "offset": [
        1256,
        1331
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1656": {
      "fn": "Voting.startElection",
      "offset": [
        1170,
        1246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1657": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1659": {
      "fn": "Voting.startElection",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "op": "SUB"
    },
    "1668": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1669": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1670": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1671": {
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "1674": {
      "offset": [
        145,
        213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1675": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1677": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "offset": [
        145,
        213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1686": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1687": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1689": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "ADD",
      "path": "0"
    },
    "1690": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1693": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "1697": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        145,
        213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1698": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1699": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1232
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1701": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1702": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1239
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1707": {
      "op": "SHL"
    },
    "1708": {
      "op": "NOT"
    },
    "1709": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1239
      ],
      "op": "AND",
      "path": "0"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1239
      ],
      "op": "OR",
      "path": "0"
    },
    "1716": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1717": {
      "fn": "Voting.startElection",
      "offset": [
        1222,
        1239
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1718": {
      "fn": "Voting.startElection",
      "jump": "o",
      "offset": [
        1170,
        1246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1719": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1720": {
      "fn": "Voting._generateHash",
      "offset": [
        2594,
        2598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1722": {
      "fn": "Voting._generateHash",
      "offset": [
        2609,
        2618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1723": {
      "fn": "Voting._generateHash",
      "offset": [
        2653,
        2658
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1724": {
      "fn": "Voting._generateHash",
      "offset": [
        2660,
        2673
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1725": {
      "fn": "Voting._generateHash",
      "offset": [
        2675,
        2682
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1726": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1728": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1729": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1731": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "ADD",
      "path": "0"
    },
    "1732": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1735": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1736": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1737": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1738": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1739": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1410"
    },
    "1742": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2636,
        2683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1743": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1744": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1746": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1748": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1749": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1750": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SUB",
      "path": "0"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1753": {
      "op": "NOT"
    },
    "1754": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "ADD",
      "path": "0"
    },
    "1755": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1756": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1757": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1758": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1760": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1761": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1762": {
      "fn": "Voting._generateHash",
      "offset": [
        2636,
        2683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1764": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1766": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "ADD",
      "path": "0"
    },
    "1767": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1768": {
      "fn": "Voting._generateHash",
      "offset": [
        2626,
        2684
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1769": {
      "fn": "Voting._generateHash",
      "offset": [
        2477,
        2716
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "fn": "Voting._generateHash",
      "jump": "o",
      "offset": [
        2477,
        2716
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1776": {
      "fn": "Voting.getVotersList",
      "offset": [
        1731,
        1831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1777": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1779": {
      "fn": "Voting.getVotersList",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1780": {
      "fn": "Voting.getVotersList",
      "offset": [
        1786,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1782": {
      "fn": "Voting.getVotersList",
      "offset": [
        1786,
        1800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1789": {
      "op": "SHL"
    },
    "1790": {
      "op": "SUB"
    },
    "1791": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "1792": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1793": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "1794": {
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71D"
    },
    "1797": {
      "offset": [
        145,
        213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1798": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1800": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "offset": [
        145,
        213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1809": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1810": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1812": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "ADD",
      "path": "0"
    },
    "1813": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1816": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1817": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16AF"
    },
    "1820": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        145,
        213
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1821": {
      "fn": "Voting.getVotersList",
      "offset": [
        145,
        213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1822": {
      "fn": "Voting.getVotersList",
      "offset": [
        1818,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1824": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1825": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1826": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1827": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1829": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MUL",
      "path": "0"
    },
    "1830": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1832": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1833": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1835": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1836": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1837": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1839": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1841": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1842": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1843": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1844": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1845": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1846": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1847": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1848": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1849": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1851": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1852": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1854": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1855": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1856": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1857": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1858": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "LT",
      "path": "0"
    },
    "1859": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1860": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x636"
    },
    "1863": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1864": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1865": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1866": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1869": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1870": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1872": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1874": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1875": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1876": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1878": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MUL",
      "path": "0"
    },
    "1879": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1880": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1882": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1883": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1884": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1886": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1887": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1889": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1890": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1891": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1892": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1894": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1895": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1896": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1897": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1898": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x772"
    },
    "1901": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1902": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1905": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1906": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1907": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1908": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1910": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1911": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1913": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1914": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1915": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DIV",
      "path": "0"
    },
    "1916": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MUL",
      "path": "0"
    },
    "1917": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1919": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1920": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1922": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1923": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1924": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1925": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1926": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1928": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1929": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1930": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1931": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1932": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1933": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1934": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1935": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1936": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1938": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1939": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1940": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1941": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1942": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79E"
    },
    "1945": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1946": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "1949": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1950": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1951": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1952": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1953": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EB"
    },
    "1956": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1957": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1958": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1960": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "LT",
      "path": "0"
    },
    "1961": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C0"
    },
    "1964": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1965": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1968": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1969": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1970": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1971": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DIV",
      "path": "0"
    },
    "1972": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MUL",
      "path": "0"
    },
    "1973": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1974": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1975": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1976": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1978": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1979": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1980": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EB"
    },
    "1983": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1984": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1985": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1986": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "1987": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1988": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1989": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1991": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1992": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1994": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1996": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1997": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1998": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1999": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2000": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2001": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2002": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2003": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2004": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2006": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2007": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2008": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2010": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2011": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2012": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2013": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "GT",
      "path": "0"
    },
    "2014": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CE"
    },
    "2017": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2018": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2019": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2020": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SUB",
      "path": "0"
    },
    "2021": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2023": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "AND",
      "path": "0"
    },
    "2024": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2025": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2026": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2027": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2028": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "POP",
      "path": "0"
    },
    "2029": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "POP",
      "path": "0"
    },
    "2030": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "POP",
      "path": "0"
    },
    "2031": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "POP",
      "path": "0"
    },
    "2032": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "POP",
      "path": "0"
    },
    "2033": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2034": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2035": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2037": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2038": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2040": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2041": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2042": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2043": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2044": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2045": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2047": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2048": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2050": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2051": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2052": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2053": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2054": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80E"
    },
    "2057": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2058": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2061": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2062": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2063": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2064": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2066": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2067": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2069": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2070": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2071": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DIV",
      "path": "0"
    },
    "2072": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MUL",
      "path": "0"
    },
    "2073": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2075": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2076": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2078": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2079": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2080": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2081": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2082": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2084": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2085": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2086": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2087": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2088": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2089": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2090": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2091": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2092": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2094": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2095": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2096": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2097": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2098": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83A"
    },
    "2101": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2102": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2105": {
      "fn": "Voting.getVotersList",
      "jump": "i",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2106": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2107": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2108": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2109": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x887"
    },
    "2112": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2113": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2114": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2116": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "LT",
      "path": "0"
    },
    "2117": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85C"
    },
    "2120": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2121": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2124": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2125": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2126": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2127": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DIV",
      "path": "0"
    },
    "2128": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MUL",
      "path": "0"
    },
    "2129": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2130": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2131": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2132": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2134": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2135": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2136": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x887"
    },
    "2139": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2140": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2141": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2142": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2143": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2144": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2145": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2147": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2148": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2150": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2152": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2153": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2154": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2155": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2156": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2157": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2158": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2159": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2160": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2162": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2163": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2164": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2166": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2167": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2168": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2169": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "GT",
      "path": "0"
    },
    "2170": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86A"
    },
    "2173": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2174": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2175": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2176": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SUB",
      "path": "0"
    },
    "2177": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2179": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "AND",
      "path": "0"
    },
    "2180": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2181": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2182": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2183": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2188": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2189": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2190": {
      "op": "POP"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2194": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2195": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2196": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2197": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2198": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2199": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2201": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2202": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2203": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "AND",
      "path": "0"
    },
    "2204": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2205": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2206": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2208": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2209": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2210": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2211": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2212": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2214": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2215": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2218": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2219": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2220": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DIV",
      "path": "0"
    },
    "2221": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "AND",
      "path": "0"
    },
    "2222": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2223": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2224": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2226": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2227": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2228": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2229": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2230": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2231": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2232": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2233": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2234": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2235": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2236": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2238": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2239": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2240": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2241": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2242": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2243": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "ADD",
      "path": "0"
    },
    "2244": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73F"
    },
    "2247": {
      "fn": "Voting.getVotersList",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2248": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3582,
        3742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2249": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3670,
        3680
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x0"
    },
    "2251": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3670,
        3680
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2252": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3632,
        3650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2254": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3632,
        3650
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3670,
        3680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2261": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3670,
        3680
      ],
      "op": "DIV",
      "path": "0"
    },
    "2262": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3670,
        3680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2264": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3670,
        3680
      ],
      "op": "AND",
      "path": "0"
    },
    "2265": {
      "branch": 22,
      "fn": "Voting.getElectionResult",
      "offset": [
        3669,
        3680
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2266": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "2269": {
      "branch": 22,
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2270": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2272": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2279": {
      "op": "SHL"
    },
    "2280": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2281": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2284": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2286": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2287": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "ADD",
      "path": "0"
    },
    "2288": {
      "op": "MSTORE"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH32",
      "value": "0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2331": {
      "op": "DUP3"
    },
    "2332": {
      "op": "ADD"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "2340": {
      "op": "JUMP"
    },
    "2341": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3661,
        3708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2342": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3725,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x3"
    },
    "2344": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2345": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2346": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2347": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2349": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2350": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2352": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2353": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2355": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2356": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2357": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2358": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2359": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2361": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2362": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2363": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2364": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2365": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2366": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2367": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2368": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2369": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2371": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2372": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2374": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2375": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2376": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2377": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2378": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "LT",
      "path": "0"
    },
    "2379": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2380": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x636"
    },
    "2383": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2384": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2385": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2386": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2387": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2389": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2390": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2392": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2394": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2395": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2396": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2398": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2399": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2400": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2402": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2403": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2404": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "2406": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2407": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2409": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2410": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2411": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2412": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2414": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2415": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2416": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2417": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2418": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "2421": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2422": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2425": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2426": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2427": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2428": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2430": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2431": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2433": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2434": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2435": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DIV",
      "path": "0"
    },
    "2436": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2437": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2439": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2440": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2442": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2443": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2444": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2445": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2446": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2448": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2449": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2450": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2451": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2452": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2453": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2454": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2455": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2456": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2458": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2459": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2460": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2461": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2462": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A6"
    },
    "2465": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2466": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2469": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2470": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2471": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2472": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2473": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F3"
    },
    "2476": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2477": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2478": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2480": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "LT",
      "path": "0"
    },
    "2481": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2484": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2485": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2488": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2489": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2490": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2491": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DIV",
      "path": "0"
    },
    "2492": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2493": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2494": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2495": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2496": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2498": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2499": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2500": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F3"
    },
    "2503": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2504": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2505": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2506": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2507": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2508": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2509": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2511": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2512": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2514": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2516": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2517": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2518": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2519": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2520": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2521": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2522": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2523": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2524": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2526": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2527": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2528": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2530": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2531": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2532": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2533": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "GT",
      "path": "0"
    },
    "2534": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D6"
    },
    "2537": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2538": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2539": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2540": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SUB",
      "path": "0"
    },
    "2541": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2543": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "AND",
      "path": "0"
    },
    "2544": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2545": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2546": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2547": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2548": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2549": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2550": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2551": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2552": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2553": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2554": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2555": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2557": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2558": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2560": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2561": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2562": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2563": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2564": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0C"
    },
    "2567": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2568": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2571": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2572": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2573": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2574": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2576": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2577": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2579": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2580": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2581": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DIV",
      "path": "0"
    },
    "2582": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2583": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2585": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2586": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2588": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2589": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2590": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2591": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2592": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2594": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2595": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2596": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2597": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2598": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2599": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2600": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2601": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2602": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2604": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2605": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2606": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2607": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2608": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA38"
    },
    "2611": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2612": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2615": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2616": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2617": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2618": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2619": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA85"
    },
    "2622": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2623": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2624": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2626": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "LT",
      "path": "0"
    },
    "2627": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5A"
    },
    "2630": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2631": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2634": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2635": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2636": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2637": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DIV",
      "path": "0"
    },
    "2638": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2639": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2640": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2641": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2642": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2644": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2645": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2646": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA85"
    },
    "2649": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2650": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2651": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2652": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2653": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2654": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2655": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2657": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2658": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2660": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2662": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2663": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2664": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2665": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2666": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2667": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2668": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2669": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2670": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2672": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2673": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2674": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2676": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2677": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2678": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2679": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "GT",
      "path": "0"
    },
    "2680": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA68"
    },
    "2683": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2684": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2685": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2686": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SUB",
      "path": "0"
    },
    "2687": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2689": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "AND",
      "path": "0"
    },
    "2690": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2691": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2692": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2693": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2694": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2695": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2696": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2697": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2698": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "POP",
      "path": "0"
    },
    "2699": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2700": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2701": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2703": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2704": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2706": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2707": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2708": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2709": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2710": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9E"
    },
    "2713": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2714": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2717": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2718": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2719": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2720": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2722": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2723": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2725": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2726": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2727": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DIV",
      "path": "0"
    },
    "2728": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2729": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2731": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2732": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2734": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2735": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2736": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2737": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2738": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2740": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2741": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2742": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2743": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2744": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2745": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2746": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2747": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2748": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2750": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2751": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2752": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2753": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2754": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACA"
    },
    "2757": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2758": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172D"
    },
    "2761": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2762": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2763": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2764": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2765": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB17"
    },
    "2768": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2769": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2770": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2772": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "LT",
      "path": "0"
    },
    "2773": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEC"
    },
    "2776": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2777": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2780": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2781": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2782": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2783": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DIV",
      "path": "0"
    },
    "2784": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "0"
    },
    "2785": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2786": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2787": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2788": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2790": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2791": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2792": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB17"
    },
    "2795": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2796": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2797": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2798": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2799": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2800": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2801": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2803": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2804": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2806": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2808": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2809": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2810": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2811": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2812": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2813": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2814": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2815": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2816": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2818": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2819": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2820": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2822": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2823": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2824": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2825": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "GT",
      "path": "0"
    },
    "2826": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFA"
    },
    "2829": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2830": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2831": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2832": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SUB",
      "path": "0"
    },
    "2833": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2835": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "AND",
      "path": "0"
    },
    "2836": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2837": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2838": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2839": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2840": {
      "op": "POP"
    },
    "2841": {
      "op": "POP"
    },
    "2842": {
      "op": "POP"
    },
    "2843": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2844": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2845": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2850": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2851": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2852": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2853": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2855": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2856": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2857": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2858": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2859": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2860": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2861": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2862": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2864": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2865": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2866": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2867": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2868": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2870": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "AND",
      "path": "0"
    },
    "2871": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2872": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2873": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2875": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2876": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2877": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2878": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2879": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2880": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2881": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2882": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2884": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2885": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2886": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2887": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2888": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2889": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "ADD",
      "path": "0"
    },
    "2890": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x947"
    },
    "2893": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3718,
        3735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2894": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2895": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "2897": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2898": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2899": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2900": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2902": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2904": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2905": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2907": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2908": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2909": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2910": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2912": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2913": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2914": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2915": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2916": {
      "fn": "Voting.createVoter",
      "offset": [
        1490,
        1505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2917": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2918": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "LT",
      "path": "0"
    },
    "2919": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB80"
    },
    "2922": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2923": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2930": {
      "op": "SHL"
    },
    "2931": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2933": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2934": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2936": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2938": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2939": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2941": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2943": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2944": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2945": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2946": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2948": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2949": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2951": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2953": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2954": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2955": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2957": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "MUL",
      "path": "0"
    },
    "2958": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1506
      ],
      "op": "ADD",
      "path": "0"
    },
    "2959": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2961": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "ADD",
      "path": "0"
    },
    "2962": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2964": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2965": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2966": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2967": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2970": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "EXP",
      "path": "0"
    },
    "2971": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2972": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "DIV",
      "path": "0"
    },
    "2973": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2975": {
      "fn": "Voting.createVoter",
      "offset": [
        1483,
        1513
      ],
      "op": "AND",
      "path": "0"
    },
    "2976": {
      "branch": 23,
      "fn": "Voting.createVoter",
      "offset": [
        1482,
        1513
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2977": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEC"
    },
    "2980": {
      "branch": 23,
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2981": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2983": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2992": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2995": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2997": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2998": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "2999": {
      "op": "DUP2"
    },
    "3000": {
      "op": "SWAP1"
    },
    "3001": {
      "op": "MSTORE"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3004": {
      "op": "DUP3"
    },
    "3005": {
      "op": "ADD"
    },
    "3006": {
      "op": "MSTORE"
    },
    "3007": {
      "op": "PUSH32",
      "value": "0x566F74657220696420697320616C72656164792072656769737465726564212E"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3042": {
      "op": "DUP3"
    },
    "3043": {
      "op": "ADD"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "3051": {
      "op": "JUMP"
    },
    "3052": {
      "fn": "Voting.createVoter",
      "offset": [
        1474,
        1550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3053": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "3055": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3056": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3057": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "3059": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3060": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "ADD",
      "path": "0"
    },
    "3061": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3062": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3063": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3064": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3065": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3066": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3068": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3069": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3070": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "ADD",
      "path": "0"
    },
    "3071": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3072": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3073": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3074": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3075": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3076": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "ADD",
      "path": "0"
    },
    "3077": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3078": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3079": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3080": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3082": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3084": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3085": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "ADD",
      "path": "0"
    },
    "3086": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3087": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3088": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3089": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3091": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3092": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "ADD",
      "path": "0"
    },
    "3093": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3094": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3095": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3096": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3097": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3098": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3099": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3100": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3101": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3102": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3105": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3106": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3107": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3108": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3109": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3110": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3111": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3112": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3113": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3114": {
      "fn": "Voting.createVoter",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3115": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3117": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3118": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3119": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MUL",
      "path": "0"
    },
    "3120": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "3153": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3154": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3155": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5F"
    },
    "3158": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3159": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3160": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3161": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3162": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3163": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1147"
    },
    "3166": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1560,
        1617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3167": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3168": {
      "op": "POP"
    },
    "3169": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3171": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3172": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3173": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3174": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3175": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3177": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3178": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3179": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3180": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3182": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3183": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3184": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3185": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3186": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3187": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC82"
    },
    "3190": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3191": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3193": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3194": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3195": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3196": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3197": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3198": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1147"
    },
    "3201": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1560,
        1617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3202": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3206": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3207": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3208": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3209": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3211": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3212": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3213": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3214": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3215": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3216": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "3218": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3219": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3220": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ADD",
      "path": "0"
    },
    "3221": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3222": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3223": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3224": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3227": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "MUL",
      "path": "0"
    },
    "3228": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3231": {
      "op": "NOT"
    },
    "3232": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3233": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3234": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3235": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3236": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3237": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3238": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "AND",
      "path": "0"
    },
    "3239": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3242": {
      "op": "NOT"
    },
    "3243": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3244": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3245": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "AND",
      "path": "0"
    },
    "3246": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3247": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3248": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3249": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "OR",
      "path": "0"
    },
    "3250": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "OR",
      "path": "0"
    },
    "3251": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3252": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3253": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3255": {
      "fn": "Voting.createVoter",
      "offset": [
        1645,
        1658
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "3256": {
      "fn": "Voting.createVoter",
      "offset": [
        1645,
        1658
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3257": {
      "fn": "Voting.createVoter",
      "offset": [
        1645,
        1662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC2"
    },
    "3260": {
      "fn": "Voting.createVoter",
      "offset": [
        1645,
        1662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3261": {
      "fn": "Voting.createVoter",
      "offset": [
        1560,
        1617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3262": {
      "fn": "Voting.createVoter",
      "offset": [
        1645,
        1662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E6"
    },
    "3265": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1645,
        1662
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3266": {
      "fn": "Voting.createVoter",
      "offset": [
        1645,
        1662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3267": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3269": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3270": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3271": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3272": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3274": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3276": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3277": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3279": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3280": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3281": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3282": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1642
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3283": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3284": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3285": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3286": {
      "fn": "Voting.createVoter",
      "offset": [
        1627,
        1662
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3287": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 13
    },
    "3288": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A"
    },
    "3321": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3322": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD06"
    },
    "3325": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3326": {
      "fn": "Voting.createVoter",
      "offset": [
        1697,
        1702
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3327": {
      "fn": "Voting.createVoter",
      "offset": [
        1697,
        1702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3328": {
      "fn": "Voting.createVoter",
      "offset": [
        1704,
        1717
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3329": {
      "fn": "Voting.createVoter",
      "offset": [
        1704,
        1717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3330": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163E"
    },
    "3333": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1686,
        1718
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3334": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3335": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3337": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3338": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3339": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3340": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "SUB",
      "path": "0"
    },
    "3341": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3342": {
      "fn": "Voting.createVoter",
      "offset": [
        1686,
        1718
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3343": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "3344": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "3345": {
      "fn": "Voting.createVoter",
      "offset": [
        1376,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "3346": {
      "fn": "Voting.createVoter",
      "jump": "o",
      "offset": [
        1376,
        1725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3347": {
      "fn": "Voting.vote",
      "offset": [
        2726,
        3572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3348": {
      "fn": "Voting.vote",
      "offset": [
        2854,
        2864
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "3350": {
      "fn": "Voting.vote",
      "offset": [
        2854,
        2864
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3355": {
      "op": "SHL"
    },
    "3356": {
      "fn": "Voting.vote",
      "offset": [
        2854,
        2864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3357": {
      "fn": "Voting.vote",
      "offset": [
        2854,
        2864
      ],
      "op": "DIV",
      "path": "0"
    },
    "3358": {
      "fn": "Voting.vote",
      "offset": [
        2854,
        2864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3360": {
      "branch": 24,
      "fn": "Voting.vote",
      "offset": [
        2854,
        2864
      ],
      "op": "AND",
      "path": "0"
    },
    "3361": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6C"
    },
    "3364": {
      "branch": 24,
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3365": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3367": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3374": {
      "op": "SHL"
    },
    "3375": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3376": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3379": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3381": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3382": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "ADD",
      "path": "0"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "MSTORE"
    },
    "3391": {
      "op": "PUSH32",
      "value": "0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3426": {
      "op": "DUP3"
    },
    "3427": {
      "op": "ADD"
    },
    "3428": {
      "op": "MSTORE"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3431": {
      "op": "ADD"
    },
    "3432": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "3435": {
      "op": "JUMP"
    },
    "3436": {
      "fn": "Voting.vote",
      "offset": [
        2846,
        2899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3437": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "3439": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3440": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3441": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3442": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3444": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3446": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3447": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3449": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3450": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3451": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3452": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3454": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3455": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3456": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2923
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3457": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2923
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3458": {
      "fn": "Voting.vote",
      "offset": [
        2924,
        2944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3459": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3460": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "LT",
      "path": "0"
    },
    "3461": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9E"
    },
    "3464": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3465": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3475": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3476": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3478": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3480": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3481": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3483": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3485": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3486": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3487": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3488": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3490": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3491": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3493": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3495": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3496": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3497": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3499": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "MUL",
      "path": "0"
    },
    "3500": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2945
      ],
      "op": "ADD",
      "path": "0"
    },
    "3501": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3503": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "ADD",
      "path": "0"
    },
    "3504": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3506": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3507": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3508": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3509": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3512": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "EXP",
      "path": "0"
    },
    "3513": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3514": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "DIV",
      "path": "0"
    },
    "3515": {
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3517": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2917,
        2952
      ],
      "op": "AND",
      "path": "0"
    },
    "3518": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE09"
    },
    "3521": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3522": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3524": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3531": {
      "op": "SHL"
    },
    "3532": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3533": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3536": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3538": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3539": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "ADD",
      "path": "0"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3545": {
      "op": "DUP3"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3583": {
      "op": "DUP3"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "3592": {
      "op": "JUMP"
    },
    "3593": {
      "fn": "Voting.vote",
      "offset": [
        2909,
        2988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3594": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "3596": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3597": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3598": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3599": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3601": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3603": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3604": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3606": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3607": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3608": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3609": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3611": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3612": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3613": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3614": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3615": {
      "fn": "Voting.vote",
      "offset": [
        3013,
        3033
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3616": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3617": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "LT",
      "path": "0"
    },
    "3618": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3B"
    },
    "3621": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3622": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3632": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3633": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3635": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3637": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3638": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3640": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3642": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3643": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3644": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3646": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3647": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3648": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3649": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3651": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3652": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3653": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3654": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3656": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3658": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3659": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3660": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "MUL",
      "path": "0"
    },
    "3661": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3034
      ],
      "op": "ADD",
      "path": "0"
    },
    "3662": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3042
      ],
      "op": "ADD",
      "path": "0"
    },
    "3663": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3042
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3664": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3666": {
      "branch": 26,
      "fn": "Voting.vote",
      "offset": [
        3006,
        3042
      ],
      "op": "AND",
      "path": "0"
    },
    "3667": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9E"
    },
    "3670": {
      "branch": 26,
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3671": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3673": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3680": {
      "op": "SHL"
    },
    "3681": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3682": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3685": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3687": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3688": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "ADD",
      "path": "0"
    },
    "3689": {
      "op": "MSTORE"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3732": {
      "op": "DUP3"
    },
    "3733": {
      "op": "ADD"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "3741": {
      "op": "JUMP"
    },
    "3742": {
      "fn": "Voting.vote",
      "offset": [
        2998,
        3072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3743": {
      "fn": "Voting.vote",
      "offset": [
        3082,
        3093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3745": {
      "fn": "Voting.vote",
      "offset": [
        3096,
        3142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEAB"
    },
    "3748": {
      "fn": "Voting.vote",
      "offset": [
        3110,
        3117
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3749": {
      "fn": "Voting.vote",
      "offset": [
        3119,
        3132
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3750": {
      "fn": "Voting.vote",
      "offset": [
        3134,
        3141
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3751": {
      "fn": "Voting.vote",
      "offset": [
        3096,
        3109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B7"
    },
    "3754": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3096,
        3142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3755": {
      "fn": "Voting.vote",
      "offset": [
        3096,
        3142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3756": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "3758": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3759": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3760": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3761": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3763": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3765": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3766": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3768": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3769": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3770": {
      "fn": "Voting.vote",
      "offset": [
        3171,
        3185
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3771": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3773": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3774": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3775": {
      "fn": "Voting.vote",
      "offset": [
        3082,
        3142
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3776": {
      "fn": "Voting.vote",
      "offset": [
        3082,
        3142
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3777": {
      "op": "POP"
    },
    "3778": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3170
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3779": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3780": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "LT",
      "path": "0"
    },
    "3781": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDE"
    },
    "3784": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3785": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3795": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3796": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3798": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3800": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3801": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3803": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3805": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3806": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3807": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3809": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3810": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3811": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3812": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3814": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3815": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3816": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3817": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3819": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3821": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3822": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3823": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "MUL",
      "path": "0"
    },
    "3824": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3186
      ],
      "op": "ADD",
      "path": "0"
    },
    "3825": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3193
      ],
      "op": "ADD",
      "path": "0"
    },
    "3826": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3193
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3827": {
      "fn": "Voting.vote",
      "offset": [
        3160,
        3193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3829": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        3160,
        3193
      ],
      "op": "AND",
      "path": "0"
    },
    "3830": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF41"
    },
    "3833": {
      "branch": 27,
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3834": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3836": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3837": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3843": {
      "op": "SHL"
    },
    "3844": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3845": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3848": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3850": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3851": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "ADD",
      "path": "0"
    },
    "3852": {
      "op": "MSTORE"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3857": {
      "op": "DUP3"
    },
    "3858": {
      "op": "ADD"
    },
    "3859": {
      "op": "MSTORE"
    },
    "3860": {
      "op": "PUSH32",
      "value": "0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3895": {
      "op": "DUP3"
    },
    "3896": {
      "op": "ADD"
    },
    "3897": {
      "op": "MSTORE"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3900": {
      "op": "ADD"
    },
    "3901": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "3904": {
      "op": "JUMP"
    },
    "3905": {
      "fn": "Voting.vote",
      "offset": [
        3152,
        3227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3906": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "3908": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3909": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3910": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3911": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3913": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3915": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3916": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3918": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3919": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3920": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3921": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3923": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3924": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3925": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3926": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3350
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3927": {
      "fn": "Voting.vote",
      "offset": [
        3351,
        3371
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3928": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3929": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "LT",
      "path": "0"
    },
    "3930": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF73"
    },
    "3933": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3934": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3941": {
      "op": "SHL"
    },
    "3942": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3944": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3945": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "3947": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3949": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3950": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3952": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3954": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3955": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3956": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3957": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3959": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3960": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3962": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3964": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3965": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3966": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3968": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "MUL",
      "path": "0"
    },
    "3969": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3372
      ],
      "op": "ADD",
      "path": "0"
    },
    "3970": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3972": {
      "fn": "Voting.vote",
      "offset": [
        3344,
        3385
      ],
      "op": "ADD",
      "path": "0"
    },
    "3973": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3975": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3976": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3978": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "ADD",
      "path": "0"
    },
    "3979": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF94"
    },
    "3982": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3983": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3984": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "3987": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3327,
        3386
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3988": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3989": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3991": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3992": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3994": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3995": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3996": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "SUB",
      "path": "0"
    },
    "3997": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "SUB",
      "path": "0"
    },
    "3998": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3999": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4000": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4001": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4003": {
      "fn": "Voting.vote",
      "offset": [
        3327,
        3386
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4004": {
      "fn": "Voting.vote",
      "offset": [
        3317,
        3387
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4005": {
      "fn": "Voting.vote",
      "offset": [
        3317,
        3387
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4006": {
      "fn": "Voting.vote",
      "offset": [
        3317,
        3387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4007": {
      "fn": "Voting.vote",
      "offset": [
        3317,
        3387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4009": {
      "fn": "Voting.vote",
      "offset": [
        3317,
        3387
      ],
      "op": "ADD",
      "path": "0"
    },
    "4010": {
      "fn": "Voting.vote",
      "offset": [
        3317,
        3387
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4011": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4013": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4015": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4017": {
      "fn": "Voting.vote",
      "offset": [
        3290,
        3296
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4018": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4019": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4020": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4022": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "ADD",
      "path": "0"
    },
    "4023": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4024": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4025": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4026": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4028": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "ADD",
      "path": "0"
    },
    "4029": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4031": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4032": {
      "fn": "Voting.vote",
      "offset": [
        3283,
        3297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4033": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4034": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4035": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4036": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "LT",
      "path": "0"
    },
    "4037": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDE"
    },
    "4040": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4041": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4051": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4052": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4054": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4056": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4057": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4059": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4061": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4062": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4063": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4064": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4066": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4067": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4069": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4071": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4072": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4073": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4075": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "MUL",
      "path": "0"
    },
    "4076": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3298
      ],
      "op": "ADD",
      "path": "0"
    },
    "4077": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4079": {
      "fn": "Voting.vote",
      "offset": [
        3272,
        3311
      ],
      "op": "ADD",
      "path": "0"
    },
    "4080": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4082": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4083": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4085": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "ADD",
      "path": "0"
    },
    "4086": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFF"
    },
    "4089": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4090": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4091": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1453"
    },
    "4094": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3255,
        3312
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4095": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4096": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4098": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4099": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4101": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4102": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4103": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "SUB",
      "path": "0"
    },
    "4104": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "SUB",
      "path": "0"
    },
    "4105": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4106": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4107": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4108": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4110": {
      "fn": "Voting.vote",
      "offset": [
        3255,
        3312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4111": {
      "fn": "Voting.vote",
      "offset": [
        3245,
        3313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4112": {
      "fn": "Voting.vote",
      "offset": [
        3245,
        3313
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4113": {
      "fn": "Voting.vote",
      "offset": [
        3245,
        3313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4114": {
      "fn": "Voting.vote",
      "offset": [
        3245,
        3313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4116": {
      "fn": "Voting.vote",
      "offset": [
        3245,
        3313
      ],
      "op": "ADD",
      "path": "0"
    },
    "4117": {
      "fn": "Voting.vote",
      "offset": [
        3245,
        3313
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4118": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3245,
        3387
      ],
      "op": "EQ",
      "path": "0"
    },
    "4119": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1097"
    },
    "4122": {
      "branch": 28,
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4123": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4125": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4132": {
      "op": "SHL"
    },
    "4133": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4134": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4137": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4139": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4140": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "ADD",
      "path": "0"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4146": {
      "op": "DUP3"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4184": {
      "op": "DUP3"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "PUSH32",
      "value": "0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "MSTORE"
    },
    "4225": {
      "op": "PUSH6",
      "value": "0x3AB2B731BC97"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4237": {
      "op": "DUP3"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "MSTORE"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4242": {
      "op": "ADD"
    },
    "4243": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "4246": {
      "op": "JUMP"
    },
    "4247": {
      "fn": "Voting.vote",
      "offset": [
        3237,
        3462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4248": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "4250": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4251": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4252": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4253": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4255": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4257": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4258": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4260": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4261": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4262": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4263": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4265": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4266": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4267": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4268": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4269": {
      "fn": "Voting.vote",
      "offset": [
        3483,
        3497
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4270": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4271": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "LT",
      "path": "0"
    },
    "4272": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C9"
    },
    "4275": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4276": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4286": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4287": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4289": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4291": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4292": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4294": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4296": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4297": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4298": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4300": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4301": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4302": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4303": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4305": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4306": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4307": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4309": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4311": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4312": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4313": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "MUL",
      "path": "0"
    },
    "4314": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3498
      ],
      "op": "ADD",
      "path": "0"
    },
    "4315": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3508
      ],
      "op": "ADD",
      "path": "0"
    },
    "4316": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4317": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4318": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4319": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "4322": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4323": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1768"
    },
    "4326": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3472,
        3510
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4327": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4328": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4329": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4330": {
      "fn": "Voting.vote",
      "offset": [
        3472,
        3510
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4331": {
      "op": "POP"
    },
    "4332": {
      "op": "POP"
    },
    "4333": {
      "fn": "Voting.vote",
      "offset": [
        3560,
        3565
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "4335": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4336": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4337": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4338": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4340": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4342": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4343": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4345": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4346": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4347": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4348": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4350": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4351": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4352": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4353": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3527
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4354": {
      "fn": "Voting.vote",
      "offset": [
        3528,
        3548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4355": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4356": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "LT",
      "path": "0"
    },
    "4357": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111E"
    },
    "4360": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4361": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4368": {
      "op": "SHL"
    },
    "4369": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4371": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4372": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "4374": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4376": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4377": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "4379": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4381": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4382": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4383": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4385": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4386": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4387": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4388": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4390": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4391": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4392": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4393": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4395": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4396": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4397": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "MUL",
      "path": "0"
    },
    "4398": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3549
      ],
      "op": "ADD",
      "path": "0"
    },
    "4399": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4401": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3557
      ],
      "op": "ADD",
      "path": "0"
    },
    "4402": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4403": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4406": {
      "op": "NOT"
    },
    "4407": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "AND",
      "path": "0"
    },
    "4408": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4409": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4410": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4411": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4412": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4413": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4414": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "OR",
      "path": "0"
    },
    "4415": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4416": {
      "fn": "Voting.vote",
      "offset": [
        3521,
        3565
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4417": {
      "op": "POP"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "op": "POP"
    },
    "4422": {
      "fn": "Voting.vote",
      "jump": "o",
      "offset": [
        2726,
        3572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4423": {
      "op": "JUMPDEST"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "DUP1"
    },
    "4426": {
      "op": "SLOAD"
    },
    "4427": {
      "op": "PUSH2",
      "value": "0x1153"
    },
    "4430": {
      "op": "SWAP1"
    },
    "4431": {
      "op": "PUSH2",
      "value": "0x172D"
    },
    "4434": {
      "jump": "i",
      "op": "JUMP"
    },
    "4435": {
      "op": "JUMPDEST"
    },
    "4436": {
      "op": "SWAP1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "KECCAK256"
    },
    "4445": {
      "op": "SWAP1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4451": {
      "op": "SWAP1"
    },
    "4452": {
      "op": "DIV"
    },
    "4453": {
      "op": "DUP2"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "SWAP3"
    },
    "4456": {
      "op": "DUP3"
    },
    "4457": {
      "op": "PUSH2",
      "value": "0x1175"
    },
    "4460": {
      "op": "JUMPI"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4463": {
      "op": "DUP6"
    },
    "4464": {
      "op": "SSTORE"
    },
    "4465": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4468": {
      "op": "JUMP"
    },
    "4469": {
      "op": "JUMPDEST"
    },
    "4470": {
      "op": "DUP3"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4473": {
      "op": "LT"
    },
    "4474": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4477": {
      "op": "JUMPI"
    },
    "4478": {
      "op": "DUP1"
    },
    "4479": {
      "op": "MLOAD"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4482": {
      "op": "NOT"
    },
    "4483": {
      "op": "AND"
    },
    "4484": {
      "op": "DUP4"
    },
    "4485": {
      "op": "DUP1"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "op": "OR"
    },
    "4488": {
      "op": "DUP6"
    },
    "4489": {
      "op": "SSTORE"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4493": {
      "op": "JUMP"
    },
    "4494": {
      "op": "JUMPDEST"
    },
    "4495": {
      "op": "DUP3"
    },
    "4496": {
      "op": "DUP1"
    },
    "4497": {
      "op": "ADD"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "ADD"
    },
    "4501": {
      "op": "DUP6"
    },
    "4502": {
      "op": "SSTORE"
    },
    "4503": {
      "op": "DUP3"
    },
    "4504": {
      "op": "ISZERO"
    },
    "4505": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4508": {
      "op": "JUMPI"
    },
    "4509": {
      "op": "SWAP2"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "ADD"
    },
    "4512": {
      "op": "JUMPDEST"
    },
    "4513": {
      "op": "DUP3"
    },
    "4514": {
      "op": "DUP2"
    },
    "4515": {
      "op": "GT"
    },
    "4516": {
      "op": "ISZERO"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0x11BB"
    },
    "4520": {
      "op": "JUMPI"
    },
    "4521": {
      "op": "DUP3"
    },
    "4522": {
      "op": "MLOAD"
    },
    "4523": {
      "op": "DUP3"
    },
    "4524": {
      "op": "SSTORE"
    },
    "4525": {
      "op": "SWAP2"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4528": {
      "op": "ADD"
    },
    "4529": {
      "op": "SWAP2"
    },
    "4530": {
      "op": "SWAP1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4533": {
      "op": "ADD"
    },
    "4534": {
      "op": "SWAP1"
    },
    "4535": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "4538": {
      "op": "JUMP"
    },
    "4539": {
      "op": "JUMPDEST"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "4544": {
      "op": "SWAP3"
    },
    "4545": {
      "op": "SWAP2"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "PUSH2",
      "value": "0x11CB"
    },
    "4550": {
      "jump": "i",
      "op": "JUMP"
    },
    "4551": {
      "op": "JUMPDEST"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "op": "SWAP1"
    },
    "4554": {
      "jump": "o",
      "op": "JUMP"
    },
    "4555": {
      "op": "JUMPDEST"
    },
    "4556": {
      "op": "JUMPDEST"
    },
    "4557": {
      "op": "DUP1"
    },
    "4558": {
      "op": "DUP3"
    },
    "4559": {
      "op": "GT"
    },
    "4560": {
      "op": "ISZERO"
    },
    "4561": {
      "op": "PUSH2",
      "value": "0x11C7"
    },
    "4564": {
      "op": "JUMPI"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4567": {
      "op": "DUP2"
    },
    "4568": {
      "op": "SSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "op": "PUSH2",
      "value": "0x11CC"
    },
    "4575": {
      "op": "JUMP"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "DUP3"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4582": {
      "op": "DUP4"
    },
    "4583": {
      "op": "ADD"
    },
    "4584": {
      "op": "SLT"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4588": {
      "op": "JUMPI"
    },
    "4589": {
      "op": "DUP1"
    },
    "4590": {
      "op": "DUP2"
    },
    "4591": {
      "op": "REVERT"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "DUP2"
    },
    "4594": {
      "op": "CALLDATALOAD"
    },
    "4595": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4604": {
      "op": "DUP1"
    },
    "4605": {
      "op": "DUP3"
    },
    "4606": {
      "op": "GT"
    },
    "4607": {
      "op": "ISZERO"
    },
    "4608": {
      "op": "PUSH2",
      "value": "0x120B"
    },
    "4611": {
      "op": "JUMPI"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0x120B"
    },
    "4615": {
      "op": "PUSH2",
      "value": "0x1799"
    },
    "4618": {
      "jump": "i",
      "op": "JUMP"
    },
    "4619": {
      "op": "JUMPDEST"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4622": {
      "op": "MLOAD"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4625": {
      "op": "DUP4"
    },
    "4626": {
      "op": "ADD"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4629": {
      "op": "NOT"
    },
    "4630": {
      "op": "SWAP1"
    },
    "4631": {
      "op": "DUP2"
    },
    "4632": {
      "op": "AND"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4635": {
      "op": "ADD"
    },
    "4636": {
      "op": "AND"
    },
    "4637": {
      "op": "DUP2"
    },
    "4638": {
      "op": "ADD"
    },
    "4639": {
      "op": "SWAP1"
    },
    "4640": {
      "op": "DUP3"
    },
    "4641": {
      "op": "DUP3"
    },
    "4642": {
      "op": "GT"
    },
    "4643": {
      "op": "DUP2"
    },
    "4644": {
      "op": "DUP4"
    },
    "4645": {
      "op": "LT"
    },
    "4646": {
      "op": "OR"
    },
    "4647": {
      "op": "ISZERO"
    },
    "4648": {
      "op": "PUSH2",
      "value": "0x1233"
    },
    "4651": {
      "op": "JUMPI"
    },
    "4652": {
      "op": "PUSH2",
      "value": "0x1233"
    },
    "4655": {
      "op": "PUSH2",
      "value": "0x1799"
    },
    "4658": {
      "jump": "i",
      "op": "JUMP"
    },
    "4659": {
      "op": "JUMPDEST"
    },
    "4660": {
      "op": "DUP2"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4663": {
      "op": "MSTORE"
    },
    "4664": {
      "op": "DUP4"
    },
    "4665": {
      "op": "DUP2"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "DUP7"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4670": {
      "op": "DUP6"
    },
    "4671": {
      "op": "DUP9"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "ADD"
    },
    "4674": {
      "op": "GT"
    },
    "4675": {
      "op": "ISZERO"
    },
    "4676": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4679": {
      "op": "JUMPI"
    },
    "4680": {
      "op": "DUP5"
    },
    "4681": {
      "op": "DUP6"
    },
    "4682": {
      "op": "REVERT"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "DUP4"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4687": {
      "op": "DUP8"
    },
    "4688": {
      "op": "ADD"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4691": {
      "op": "DUP4"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "op": "CALLDATACOPY"
    },
    "4694": {
      "op": "SWAP3"
    },
    "4695": {
      "op": "DUP4"
    },
    "4696": {
      "op": "ADD"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "op": "ADD"
    },
    "4700": {
      "op": "SWAP4"
    },
    "4701": {
      "op": "SWAP1"
    },
    "4702": {
      "op": "SWAP4"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "SWAP4"
    },
    "4706": {
      "op": "SWAP3"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "jump": "o",
      "op": "JUMP"
    },
    "4711": {
      "op": "JUMPDEST"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4714": {
      "op": "DUP1"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4719": {
      "op": "DUP5"
    },
    "4720": {
      "op": "DUP7"
    },
    "4721": {
      "op": "SUB"
    },
    "4722": {
      "op": "SLT"
    },
    "4723": {
      "op": "ISZERO"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x127B"
    },
    "4727": {
      "op": "JUMPI"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "DUP4"
    },
    "4730": {
      "op": "REVERT"
    },
    "4731": {
      "op": "JUMPDEST"
    },
    "4732": {
      "op": "DUP4"
    },
    "4733": {
      "op": "CALLDATALOAD"
    },
    "4734": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4743": {
      "op": "DUP1"
    },
    "4744": {
      "op": "DUP3"
    },
    "4745": {
      "op": "GT"
    },
    "4746": {
      "op": "ISZERO"
    },
    "4747": {
      "op": "PUSH2",
      "value": "0x1292"
    },
    "4750": {
      "op": "JUMPI"
    },
    "4751": {
      "op": "DUP5"
    },
    "4752": {
      "op": "DUP6"
    },
    "4753": {
      "op": "REVERT"
    },
    "4754": {
      "op": "JUMPDEST"
    },
    "4755": {
      "op": "PUSH2",
      "value": "0x129E"
    },
    "4758": {
      "op": "DUP8"
    },
    "4759": {
      "op": "DUP4"
    },
    "4760": {
      "op": "DUP9"
    },
    "4761": {
      "op": "ADD"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4765": {
      "jump": "i",
      "op": "JUMP"
    },
    "4766": {
      "op": "JUMPDEST"
    },
    "4767": {
      "op": "SWAP5"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4771": {
      "op": "DUP7"
    },
    "4772": {
      "op": "ADD"
    },
    "4773": {
      "op": "CALLDATALOAD"
    },
    "4774": {
      "op": "SWAP2"
    },
    "4775": {
      "op": "POP"
    },
    "4776": {
      "op": "DUP1"
    },
    "4777": {
      "op": "DUP3"
    },
    "4778": {
      "op": "GT"
    },
    "4779": {
      "op": "ISZERO"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "4783": {
      "op": "JUMPI"
    },
    "4784": {
      "op": "DUP4"
    },
    "4785": {
      "op": "DUP5"
    },
    "4786": {
      "op": "REVERT"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4791": {
      "op": "DUP8"
    },
    "4792": {
      "op": "DUP4"
    },
    "4793": {
      "op": "DUP9"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4798": {
      "jump": "i",
      "op": "JUMP"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "SWAP4"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4804": {
      "op": "DUP7"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "CALLDATALOAD"
    },
    "4807": {
      "op": "SWAP2"
    },
    "4808": {
      "op": "POP"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "DUP3"
    },
    "4811": {
      "op": "GT"
    },
    "4812": {
      "op": "ISZERO"
    },
    "4813": {
      "op": "PUSH2",
      "value": "0x12D4"
    },
    "4816": {
      "op": "JUMPI"
    },
    "4817": {
      "op": "DUP3"
    },
    "4818": {
      "op": "DUP4"
    },
    "4819": {
      "op": "REVERT"
    },
    "4820": {
      "op": "JUMPDEST"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x12E1"
    },
    "4825": {
      "op": "DUP7"
    },
    "4826": {
      "op": "DUP3"
    },
    "4827": {
      "op": "DUP8"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4832": {
      "jump": "i",
      "op": "JUMP"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "SWAP2"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "op": "SWAP3"
    },
    "4838": {
      "op": "POP"
    },
    "4839": {
      "op": "SWAP3"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "op": "SWAP3"
    },
    "4842": {
      "jump": "o",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4846": {
      "op": "DUP1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4851": {
      "op": "DUP5"
    },
    "4852": {
      "op": "DUP7"
    },
    "4853": {
      "op": "SUB"
    },
    "4854": {
      "op": "SLT"
    },
    "4855": {
      "op": "ISZERO"
    },
    "4856": {
      "op": "PUSH2",
      "value": "0x12FF"
    },
    "4859": {
      "op": "JUMPI"
    },
    "4860": {
      "op": "DUP3"
    },
    "4861": {
      "op": "DUP4"
    },
    "4862": {
      "op": "REVERT"
    },
    "4863": {
      "op": "JUMPDEST"
    },
    "4864": {
      "op": "DUP4"
    },
    "4865": {
      "op": "CALLDATALOAD"
    },
    "4866": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4875": {
      "op": "DUP1"
    },
    "4876": {
      "op": "DUP3"
    },
    "4877": {
      "op": "GT"
    },
    "4878": {
      "op": "ISZERO"
    },
    "4879": {
      "op": "PUSH2",
      "value": "0x1316"
    },
    "4882": {
      "op": "JUMPI"
    },
    "4883": {
      "op": "DUP5"
    },
    "4884": {
      "op": "DUP6"
    },
    "4885": {
      "op": "REVERT"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "4890": {
      "op": "DUP8"
    },
    "4891": {
      "op": "DUP4"
    },
    "4892": {
      "op": "DUP9"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4897": {
      "jump": "i",
      "op": "JUMP"
    },
    "4898": {
      "op": "JUMPDEST"
    },
    "4899": {
      "op": "SWAP5"
    },
    "4900": {
      "op": "POP"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4903": {
      "op": "DUP7"
    },
    "4904": {
      "op": "ADD"
    },
    "4905": {
      "op": "CALLDATALOAD"
    },
    "4906": {
      "op": "SWAP4"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4910": {
      "op": "DUP7"
    },
    "4911": {
      "op": "ADD"
    },
    "4912": {
      "op": "CALLDATALOAD"
    },
    "4913": {
      "op": "SWAP2"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "DUP1"
    },
    "4916": {
      "op": "DUP3"
    },
    "4917": {
      "op": "GT"
    },
    "4918": {
      "op": "ISZERO"
    },
    "4919": {
      "op": "PUSH2",
      "value": "0x12D4"
    },
    "4922": {
      "op": "JUMPI"
    },
    "4923": {
      "op": "DUP3"
    },
    "4924": {
      "op": "DUP4"
    },
    "4925": {
      "op": "REVERT"
    },
    "4926": {
      "op": "JUMPDEST"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4931": {
      "op": "DUP3"
    },
    "4932": {
      "op": "DUP5"
    },
    "4933": {
      "op": "SUB"
    },
    "4934": {
      "op": "SLT"
    },
    "4935": {
      "op": "ISZERO"
    },
    "4936": {
      "op": "PUSH2",
      "value": "0x134F"
    },
    "4939": {
      "op": "JUMPI"
    },
    "4940": {
      "op": "DUP1"
    },
    "4941": {
      "op": "DUP2"
    },
    "4942": {
      "op": "REVERT"
    },
    "4943": {
      "op": "JUMPDEST"
    },
    "4944": {
      "op": "POP"
    },
    "4945": {
      "op": "CALLDATALOAD"
    },
    "4946": {
      "op": "SWAP2"
    },
    "4947": {
      "op": "SWAP1"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "jump": "o",
      "op": "JUMP"
    },
    "4950": {
      "op": "JUMPDEST"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4953": {
      "op": "DUP1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4956": {
      "op": "DUP1"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4959": {
      "op": "DUP6"
    },
    "4960": {
      "op": "DUP8"
    },
    "4961": {
      "op": "SUB"
    },
    "4962": {
      "op": "SLT"
    },
    "4963": {
      "op": "ISZERO"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136B"
    },
    "4967": {
      "op": "JUMPI"
    },
    "4968": {
      "op": "DUP1"
    },
    "4969": {
      "op": "DUP2"
    },
    "4970": {
      "op": "REVERT"
    },
    "4971": {
      "op": "JUMPDEST"
    },
    "4972": {
      "op": "DUP5"
    },
    "4973": {
      "op": "CALLDATALOAD"
    },
    "4974": {
      "op": "SWAP4"
    },
    "4975": {
      "op": "POP"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4978": {
      "op": "DUP6"
    },
    "4979": {
      "op": "ADD"
    },
    "4980": {
      "op": "CALLDATALOAD"
    },
    "4981": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4990": {
      "op": "DUP1"
    },
    "4991": {
      "op": "DUP3"
    },
    "4992": {
      "op": "GT"
    },
    "4993": {
      "op": "ISZERO"
    },
    "4994": {
      "op": "PUSH2",
      "value": "0x1389"
    },
    "4997": {
      "op": "JUMPI"
    },
    "4998": {
      "op": "DUP3"
    },
    "4999": {
      "op": "DUP4"
    },
    "5000": {
      "op": "REVERT"
    },
    "5001": {
      "op": "JUMPDEST"
    },
    "5002": {
      "op": "PUSH2",
      "value": "0x1395"
    },
    "5005": {
      "op": "DUP9"
    },
    "5006": {
      "op": "DUP4"
    },
    "5007": {
      "op": "DUP10"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "5012": {
      "jump": "i",
      "op": "JUMP"
    },
    "5013": {
      "op": "JUMPDEST"
    },
    "5014": {
      "op": "SWAP5"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5018": {
      "op": "DUP8"
    },
    "5019": {
      "op": "ADD"
    },
    "5020": {
      "op": "CALLDATALOAD"
    },
    "5021": {
      "op": "SWAP2"
    },
    "5022": {
      "op": "POP"
    },
    "5023": {
      "op": "DUP1"
    },
    "5024": {
      "op": "DUP3"
    },
    "5025": {
      "op": "GT"
    },
    "5026": {
      "op": "ISZERO"
    },
    "5027": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5030": {
      "op": "JUMPI"
    },
    "5031": {
      "op": "DUP3"
    },
    "5032": {
      "op": "DUP4"
    },
    "5033": {
      "op": "REVERT"
    },
    "5034": {
      "op": "JUMPDEST"
    },
    "5035": {
      "op": "PUSH2",
      "value": "0x13B6"
    },
    "5038": {
      "op": "DUP9"
    },
    "5039": {
      "op": "DUP4"
    },
    "5040": {
      "op": "DUP10"
    },
    "5041": {
      "op": "ADD"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "5045": {
      "jump": "i",
      "op": "JUMP"
    },
    "5046": {
      "op": "JUMPDEST"
    },
    "5047": {
      "op": "SWAP4"
    },
    "5048": {
      "op": "POP"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5051": {
      "op": "DUP8"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "CALLDATALOAD"
    },
    "5054": {
      "op": "SWAP2"
    },
    "5055": {
      "op": "POP"
    },
    "5056": {
      "op": "DUP1"
    },
    "5057": {
      "op": "DUP3"
    },
    "5058": {
      "op": "GT"
    },
    "5059": {
      "op": "ISZERO"
    },
    "5060": {
      "op": "PUSH2",
      "value": "0x13CB"
    },
    "5063": {
      "op": "JUMPI"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "DUP4"
    },
    "5066": {
      "op": "REVERT"
    },
    "5067": {
      "op": "JUMPDEST"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "PUSH2",
      "value": "0x13D8"
    },
    "5072": {
      "op": "DUP8"
    },
    "5073": {
      "op": "DUP3"
    },
    "5074": {
      "op": "DUP9"
    },
    "5075": {
      "op": "ADD"
    },
    "5076": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "5079": {
      "jump": "i",
      "op": "JUMP"
    },
    "5080": {
      "op": "JUMPDEST"
    },
    "5081": {
      "op": "SWAP2"
    },
    "5082": {
      "op": "POP"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "op": "SWAP3"
    },
    "5085": {
      "op": "SWAP6"
    },
    "5086": {
      "op": "SWAP2"
    },
    "5087": {
      "op": "SWAP5"
    },
    "5088": {
      "op": "POP"
    },
    "5089": {
      "op": "SWAP3"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "jump": "o",
      "op": "JUMP"
    },
    "5092": {
      "op": "JUMPDEST"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "MLOAD"
    },
    "5097": {
      "op": "DUP1"
    },
    "5098": {
      "op": "DUP5"
    },
    "5099": {
      "op": "MSTORE"
    },
    "5100": {
      "op": "PUSH2",
      "value": "0x13FC"
    },
    "5103": {
      "op": "DUP2"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5106": {
      "op": "DUP7"
    },
    "5107": {
      "op": "ADD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5110": {
      "op": "DUP7"
    },
    "5111": {
      "op": "ADD"
    },
    "5112": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5115": {
      "jump": "i",
      "op": "JUMP"
    },
    "5116": {
      "op": "JUMPDEST"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5122": {
      "op": "NOT"
    },
    "5123": {
      "op": "AND"
    },
    "5124": {
      "op": "SWAP3"
    },
    "5125": {
      "op": "SWAP1"
    },
    "5126": {
      "op": "SWAP3"
    },
    "5127": {
      "op": "ADD"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5130": {
      "op": "ADD"
    },
    "5131": {
      "op": "SWAP3"
    },
    "5132": {
      "op": "SWAP2"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "op": "POP"
    },
    "5135": {
      "jump": "o",
      "op": "JUMP"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5139": {
      "op": "DUP5"
    },
    "5140": {
      "op": "MLOAD"
    },
    "5141": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5144": {
      "op": "DUP2"
    },
    "5145": {
      "op": "DUP5"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5148": {
      "op": "DUP10"
    },
    "5149": {
      "op": "ADD"
    },
    "5150": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5153": {
      "jump": "i",
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "DUP5"
    },
    "5156": {
      "op": "MLOAD"
    },
    "5157": {
      "op": "SWAP1"
    },
    "5158": {
      "op": "DUP4"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "SWAP1"
    },
    "5161": {
      "op": "PUSH2",
      "value": "0x1436"
    },
    "5164": {
      "op": "DUP2"
    },
    "5165": {
      "op": "DUP4"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5168": {
      "op": "DUP10"
    },
    "5169": {
      "op": "ADD"
    },
    "5170": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5173": {
      "jump": "i",
      "op": "JUMP"
    },
    "5174": {
      "op": "JUMPDEST"
    },
    "5175": {
      "op": "DUP5"
    },
    "5176": {
      "op": "MLOAD"
    },
    "5177": {
      "op": "SWAP2"
    },
    "5178": {
      "op": "ADD"
    },
    "5179": {
      "op": "SWAP1"
    },
    "5180": {
      "op": "PUSH2",
      "value": "0x1449"
    },
    "5183": {
      "op": "DUP2"
    },
    "5184": {
      "op": "DUP4"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5187": {
      "op": "DUP9"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5192": {
      "jump": "i",
      "op": "JUMP"
    },
    "5193": {
      "op": "JUMPDEST"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "SWAP6"
    },
    "5196": {
      "op": "SWAP5"
    },
    "5197": {
      "op": "POP"
    },
    "5198": {
      "op": "POP"
    },
    "5199": {
      "op": "POP"
    },
    "5200": {
      "op": "POP"
    },
    "5201": {
      "op": "POP"
    },
    "5202": {
      "jump": "o",
      "op": "JUMP"
    },
    "5203": {
      "op": "JUMPDEST"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5206": {
      "op": "DUP1"
    },
    "5207": {
      "op": "DUP4"
    },
    "5208": {
      "op": "SLOAD"
    },
    "5209": {
      "op": "DUP3"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "DUP3"
    },
    "5213": {
      "op": "DUP2"
    },
    "5214": {
      "op": "SHR"
    },
    "5215": {
      "op": "SWAP2"
    },
    "5216": {
      "op": "POP"
    },
    "5217": {
      "op": "DUP1"
    },
    "5218": {
      "op": "DUP4"
    },
    "5219": {
      "op": "AND"
    },
    "5220": {
      "op": "DUP1"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0x146F"
    },
    "5224": {
      "op": "JUMPI"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5227": {
      "op": "DUP4"
    },
    "5228": {
      "op": "AND"
    },
    "5229": {
      "op": "SWAP3"
    },
    "5230": {
      "op": "POP"
    },
    "5231": {
      "op": "JUMPDEST"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5234": {
      "op": "DUP1"
    },
    "5235": {
      "op": "DUP5"
    },
    "5236": {
      "op": "LT"
    },
    "5237": {
      "op": "DUP3"
    },
    "5238": {
      "op": "EQ"
    },
    "5239": {
      "op": "ISZERO"
    },
    "5240": {
      "op": "PUSH2",
      "value": "0x148F"
    },
    "5243": {
      "op": "JUMPI"
    },
    "5244": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "op": "DUP8"
    },
    "5253": {
      "op": "MSTORE"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5258": {
      "op": "MSTORE"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5261": {
      "op": "DUP8"
    },
    "5262": {
      "op": "REVERT"
    },
    "5263": {
      "op": "JUMPDEST"
    },
    "5264": {
      "op": "DUP2"
    },
    "5265": {
      "op": "DUP1"
    },
    "5266": {
      "op": "ISZERO"
    },
    "5267": {
      "op": "PUSH2",
      "value": "0x14A3"
    },
    "5270": {
      "op": "JUMPI"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5273": {
      "op": "DUP2"
    },
    "5274": {
      "op": "EQ"
    },
    "5275": {
      "op": "PUSH2",
      "value": "0x14B4"
    },
    "5278": {
      "op": "JUMPI"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14E0"
    },
    "5282": {
      "op": "JUMP"
    },
    "5283": {
      "op": "JUMPDEST"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5286": {
      "op": "NOT"
    },
    "5287": {
      "op": "DUP7"
    },
    "5288": {
      "op": "AND"
    },
    "5289": {
      "op": "DUP10"
    },
    "5290": {
      "op": "MSTORE"
    },
    "5291": {
      "op": "DUP5"
    },
    "5292": {
      "op": "DUP10"
    },
    "5293": {
      "op": "ADD"
    },
    "5294": {
      "op": "SWAP7"
    },
    "5295": {
      "op": "POP"
    },
    "5296": {
      "op": "PUSH2",
      "value": "0x14E0"
    },
    "5299": {
      "op": "JUMP"
    },
    "5300": {
      "op": "JUMPDEST"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5303": {
      "op": "DUP11"
    },
    "5304": {
      "op": "DUP2"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5308": {
      "op": "SWAP1"
    },
    "5309": {
      "op": "KECCAK256"
    },
    "5310": {
      "op": "DUP9"
    },
    "5311": {
      "op": "JUMPDEST"
    },
    "5312": {
      "op": "DUP7"
    },
    "5313": {
      "op": "DUP2"
    },
    "5314": {
      "op": "LT"
    },
    "5315": {
      "op": "ISZERO"
    },
    "5316": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5319": {
      "op": "JUMPI"
    },
    "5320": {
      "op": "DUP2"
    },
    "5321": {
      "op": "SLOAD"
    },
    "5322": {
      "op": "DUP12"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "op": "SWAP1"
    },
    "5327": {
      "op": "DUP6"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "SWAP1"
    },
    "5330": {
      "op": "DUP4"
    },
    "5331": {
      "op": "ADD"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x14BF"
    },
    "5335": {
      "op": "JUMP"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "POP"
    },
    "5338": {
      "op": "POP"
    },
    "5339": {
      "op": "DUP5"
    },
    "5340": {
      "op": "DUP10"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "SWAP7"
    },
    "5343": {
      "op": "POP"
    },
    "5344": {
      "op": "JUMPDEST"
    },
    "5345": {
      "op": "POP"
    },
    "5346": {
      "op": "SWAP5"
    },
    "5347": {
      "op": "SWAP9"
    },
    "5348": {
      "op": "SWAP8"
    },
    "5349": {
      "op": "POP"
    },
    "5350": {
      "op": "POP"
    },
    "5351": {
      "op": "POP"
    },
    "5352": {
      "op": "POP"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "op": "POP"
    },
    "5355": {
      "op": "POP"
    },
    "5356": {
      "op": "POP"
    },
    "5357": {
      "jump": "o",
      "op": "JUMP"
    },
    "5358": {
      "op": "JUMPDEST"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5363": {
      "op": "DUP1"
    },
    "5364": {
      "op": "DUP4"
    },
    "5365": {
      "op": "ADD"
    },
    "5366": {
      "op": "DUP2"
    },
    "5367": {
      "op": "DUP5"
    },
    "5368": {
      "op": "MSTORE"
    },
    "5369": {
      "op": "DUP1"
    },
    "5370": {
      "op": "DUP6"
    },
    "5371": {
      "op": "MLOAD"
    },
    "5372": {
      "op": "DUP1"
    },
    "5373": {
      "op": "DUP4"
    },
    "5374": {
      "op": "MSTORE"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5377": {
      "op": "SWAP3"
    },
    "5378": {
      "op": "POP"
    },
    "5379": {
      "op": "DUP3"
    },
    "5380": {
      "op": "DUP7"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "op": "SWAP2"
    },
    "5383": {
      "op": "POP"
    },
    "5384": {
      "op": "DUP3"
    },
    "5385": {
      "op": "DUP2"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "op": "DUP8"
    },
    "5390": {
      "op": "ADD"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "op": "DUP5"
    },
    "5393": {
      "op": "DUP9"
    },
    "5394": {
      "op": "ADD"
    },
    "5395": {
      "op": "DUP7"
    },
    "5396": {
      "op": "JUMPDEST"
    },
    "5397": {
      "op": "DUP4"
    },
    "5398": {
      "op": "DUP2"
    },
    "5399": {
      "op": "LT"
    },
    "5400": {
      "op": "ISZERO"
    },
    "5401": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5404": {
      "op": "JUMPI"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5407": {
      "op": "NOT"
    },
    "5408": {
      "op": "DUP10"
    },
    "5409": {
      "op": "DUP5"
    },
    "5410": {
      "op": "SUB"
    },
    "5411": {
      "op": "ADD"
    },
    "5412": {
      "op": "DUP6"
    },
    "5413": {
      "op": "MSTORE"
    },
    "5414": {
      "op": "DUP2"
    },
    "5415": {
      "op": "MLOAD"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5418": {
      "op": "DUP2"
    },
    "5419": {
      "op": "MLOAD"
    },
    "5420": {
      "op": "DUP2"
    },
    "5421": {
      "op": "DUP7"
    },
    "5422": {
      "op": "MSTORE"
    },
    "5423": {
      "op": "PUSH2",
      "value": "0x153A"
    },
    "5426": {
      "op": "DUP3"
    },
    "5427": {
      "op": "DUP8"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "DUP3"
    },
    "5430": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5433": {
      "jump": "i",
      "op": "JUMP"
    },
    "5434": {
      "op": "JUMPDEST"
    },
    "5435": {
      "op": "SWAP2"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "POP"
    },
    "5438": {
      "op": "DUP9"
    },
    "5439": {
      "op": "DUP3"
    },
    "5440": {
      "op": "ADD"
    },
    "5441": {
      "op": "MLOAD"
    },
    "5442": {
      "op": "DUP6"
    },
    "5443": {
      "op": "DUP3"
    },
    "5444": {
      "op": "SUB"
    },
    "5445": {
      "op": "DUP11"
    },
    "5446": {
      "op": "DUP8"
    },
    "5447": {
      "op": "ADD"
    },
    "5448": {
      "op": "MSTORE"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x1552"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "DUP3"
    },
    "5454": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5457": {
      "jump": "i",
      "op": "JUMP"
    },
    "5458": {
      "op": "JUMPDEST"
    },
    "5459": {
      "op": "SWAP2"
    },
    "5460": {
      "op": "POP"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "op": "DUP8"
    },
    "5463": {
      "op": "DUP3"
    },
    "5464": {
      "op": "ADD"
    },
    "5465": {
      "op": "MLOAD"
    },
    "5466": {
      "op": "DUP6"
    },
    "5467": {
      "op": "DUP3"
    },
    "5468": {
      "op": "SUB"
    },
    "5469": {
      "op": "DUP10"
    },
    "5470": {
      "op": "DUP8"
    },
    "5471": {
      "op": "ADD"
    },
    "5472": {
      "op": "MSTORE"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x156A"
    },
    "5476": {
      "op": "DUP3"
    },
    "5477": {
      "op": "DUP3"
    },
    "5478": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5481": {
      "jump": "i",
      "op": "JUMP"
    },
    "5482": {
      "op": "JUMPDEST"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5485": {
      "op": "DUP5"
    },
    "5486": {
      "op": "DUP2"
    },
    "5487": {
      "op": "ADD"
    },
    "5488": {
      "op": "MLOAD"
    },
    "5489": {
      "op": "SWAP1"
    },
    "5490": {
      "op": "DUP9"
    },
    "5491": {
      "op": "ADD"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5495": {
      "op": "SWAP4"
    },
    "5496": {
      "op": "DUP5"
    },
    "5497": {
      "op": "ADD"
    },
    "5498": {
      "op": "MLOAD"
    },
    "5499": {
      "op": "ISZERO"
    },
    "5500": {
      "op": "ISZERO"
    },
    "5501": {
      "op": "SWAP4"
    },
    "5502": {
      "op": "SWAP1"
    },
    "5503": {
      "op": "SWAP7"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "SWAP3"
    },
    "5506": {
      "op": "SWAP1"
    },
    "5507": {
      "op": "SWAP3"
    },
    "5508": {
      "op": "MSTORE"
    },
    "5509": {
      "op": "POP"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "op": "SWAP4"
    },
    "5512": {
      "op": "DUP7"
    },
    "5513": {
      "op": "ADD"
    },
    "5514": {
      "op": "SWAP4"
    },
    "5515": {
      "op": "SWAP1"
    },
    "5516": {
      "op": "DUP7"
    },
    "5517": {
      "op": "ADD"
    },
    "5518": {
      "op": "SWAP1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "ADD"
    },
    "5522": {
      "op": "PUSH2",
      "value": "0x1514"
    },
    "5525": {
      "op": "JUMP"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "POP"
    },
    "5528": {
      "op": "SWAP1"
    },
    "5529": {
      "op": "SWAP9"
    },
    "5530": {
      "op": "SWAP8"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "op": "POP"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "op": "POP"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "jump": "o",
      "op": "JUMP"
    },
    "5540": {
      "op": "JUMPDEST"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5545": {
      "op": "DUP1"
    },
    "5546": {
      "op": "DUP4"
    },
    "5547": {
      "op": "ADD"
    },
    "5548": {
      "op": "DUP2"
    },
    "5549": {
      "op": "DUP5"
    },
    "5550": {
      "op": "MSTORE"
    },
    "5551": {
      "op": "DUP1"
    },
    "5552": {
      "op": "DUP6"
    },
    "5553": {
      "op": "MLOAD"
    },
    "5554": {
      "op": "DUP1"
    },
    "5555": {
      "op": "DUP4"
    },
    "5556": {
      "op": "MSTORE"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5559": {
      "op": "SWAP3"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "op": "DUP3"
    },
    "5562": {
      "op": "DUP7"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "SWAP2"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "op": "DUP3"
    },
    "5567": {
      "op": "DUP2"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5570": {
      "op": "SHL"
    },
    "5571": {
      "op": "DUP8"
    },
    "5572": {
      "op": "ADD"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "DUP5"
    },
    "5575": {
      "op": "DUP9"
    },
    "5576": {
      "op": "ADD"
    },
    "5577": {
      "op": "DUP7"
    },
    "5578": {
      "op": "JUMPDEST"
    },
    "5579": {
      "op": "DUP4"
    },
    "5580": {
      "op": "DUP2"
    },
    "5581": {
      "op": "LT"
    },
    "5582": {
      "op": "ISZERO"
    },
    "5583": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5586": {
      "op": "JUMPI"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5589": {
      "op": "NOT"
    },
    "5590": {
      "op": "DUP10"
    },
    "5591": {
      "op": "DUP5"
    },
    "5592": {
      "op": "SUB"
    },
    "5593": {
      "op": "ADD"
    },
    "5594": {
      "op": "DUP6"
    },
    "5595": {
      "op": "MSTORE"
    },
    "5596": {
      "op": "DUP2"
    },
    "5597": {
      "op": "MLOAD"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5600": {
      "op": "DUP2"
    },
    "5601": {
      "op": "MLOAD"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "DUP7"
    },
    "5604": {
      "op": "MSTORE"
    },
    "5605": {
      "op": "PUSH2",
      "value": "0x15F0"
    },
    "5608": {
      "op": "DUP3"
    },
    "5609": {
      "op": "DUP8"
    },
    "5610": {
      "op": "ADD"
    },
    "5611": {
      "op": "DUP3"
    },
    "5612": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5615": {
      "jump": "i",
      "op": "JUMP"
    },
    "5616": {
      "op": "JUMPDEST"
    },
    "5617": {
      "op": "SWAP2"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "POP"
    },
    "5620": {
      "op": "DUP9"
    },
    "5621": {
      "op": "DUP3"
    },
    "5622": {
      "op": "ADD"
    },
    "5623": {
      "op": "MLOAD"
    },
    "5624": {
      "op": "DUP10"
    },
    "5625": {
      "op": "DUP7"
    },
    "5626": {
      "op": "ADD"
    },
    "5627": {
      "op": "MSTORE"
    },
    "5628": {
      "op": "DUP8"
    },
    "5629": {
      "op": "DUP3"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "MLOAD"
    },
    "5632": {
      "op": "DUP6"
    },
    "5633": {
      "op": "DUP3"
    },
    "5634": {
      "op": "SUB"
    },
    "5635": {
      "op": "DUP10"
    },
    "5636": {
      "op": "DUP8"
    },
    "5637": {
      "op": "ADD"
    },
    "5638": {
      "op": "MSTORE"
    },
    "5639": {
      "op": "PUSH2",
      "value": "0x1610"
    },
    "5642": {
      "op": "DUP3"
    },
    "5643": {
      "op": "DUP3"
    },
    "5644": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5647": {
      "jump": "i",
      "op": "JUMP"
    },
    "5648": {
      "op": "JUMPDEST"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5651": {
      "op": "DUP5"
    },
    "5652": {
      "op": "DUP2"
    },
    "5653": {
      "op": "ADD"
    },
    "5654": {
      "op": "MLOAD"
    },
    "5655": {
      "op": "ISZERO"
    },
    "5656": {
      "op": "ISZERO"
    },
    "5657": {
      "op": "SWAP1"
    },
    "5658": {
      "op": "DUP9"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "MSTORE"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5663": {
      "op": "SWAP4"
    },
    "5664": {
      "op": "DUP5"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "MLOAD"
    },
    "5667": {
      "op": "ISZERO"
    },
    "5668": {
      "op": "ISZERO"
    },
    "5669": {
      "op": "SWAP4"
    },
    "5670": {
      "op": "SWAP1"
    },
    "5671": {
      "op": "SWAP7"
    },
    "5672": {
      "op": "ADD"
    },
    "5673": {
      "op": "SWAP3"
    },
    "5674": {
      "op": "SWAP1"
    },
    "5675": {
      "op": "SWAP3"
    },
    "5676": {
      "op": "MSTORE"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "POP"
    },
    "5679": {
      "op": "SWAP4"
    },
    "5680": {
      "op": "DUP7"
    },
    "5681": {
      "op": "ADD"
    },
    "5682": {
      "op": "SWAP4"
    },
    "5683": {
      "op": "SWAP1"
    },
    "5684": {
      "op": "DUP7"
    },
    "5685": {
      "op": "ADD"
    },
    "5686": {
      "op": "SWAP1"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5689": {
      "op": "ADD"
    },
    "5690": {
      "op": "PUSH2",
      "value": "0x15CA"
    },
    "5693": {
      "op": "JUMP"
    },
    "5694": {
      "op": "JUMPDEST"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5697": {
      "op": "DUP2"
    },
    "5698": {
      "op": "MSTORE"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5701": {
      "op": "PUSH2",
      "value": "0x1651"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5706": {
      "op": "DUP4"
    },
    "5707": {
      "op": "ADD"
    },
    "5708": {
      "op": "DUP6"
    },
    "5709": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5712": {
      "jump": "i",
      "op": "JUMP"
    },
    "5713": {
      "op": "JUMPDEST"
    },
    "5714": {
      "op": "DUP3"
    },
    "5715": {
      "op": "DUP2"
    },
    "5716": {
      "op": "SUB"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5719": {
      "op": "DUP5"
    },
    "5720": {
      "op": "ADD"
    },
    "5721": {
      "op": "MSTORE"
    },
    "5722": {
      "op": "PUSH2",
      "value": "0x1663"
    },
    "5725": {
      "op": "DUP2"
    },
    "5726": {
      "op": "DUP6"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5730": {
      "jump": "i",
      "op": "JUMP"
    },
    "5731": {
      "op": "JUMPDEST"
    },
    "5732": {
      "op": "SWAP6"
    },
    "5733": {
      "op": "SWAP5"
    },
    "5734": {
      "op": "POP"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "op": "POP"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "op": "POP"
    },
    "5739": {
      "jump": "o",
      "op": "JUMP"
    },
    "5740": {
      "op": "JUMPDEST"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5743": {
      "op": "DUP2"
    },
    "5744": {
      "op": "MSTORE"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5747": {
      "op": "PUSH2",
      "value": "0x167F"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5752": {
      "op": "DUP4"
    },
    "5753": {
      "op": "ADD"
    },
    "5754": {
      "op": "DUP7"
    },
    "5755": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5758": {
      "jump": "i",
      "op": "JUMP"
    },
    "5759": {
      "op": "JUMPDEST"
    },
    "5760": {
      "op": "DUP3"
    },
    "5761": {
      "op": "DUP2"
    },
    "5762": {
      "op": "SUB"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5765": {
      "op": "DUP5"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "MSTORE"
    },
    "5768": {
      "op": "PUSH2",
      "value": "0x1691"
    },
    "5771": {
      "op": "DUP2"
    },
    "5772": {
      "op": "DUP7"
    },
    "5773": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5776": {
      "jump": "i",
      "op": "JUMP"
    },
    "5777": {
      "op": "JUMPDEST"
    },
    "5778": {
      "op": "SWAP1"
    },
    "5779": {
      "op": "POP"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "DUP2"
    },
    "5782": {
      "op": "SUB"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5785": {
      "op": "DUP5"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "op": "PUSH2",
      "value": "0x16A5"
    },
    "5791": {
      "op": "DUP2"
    },
    "5792": {
      "op": "DUP6"
    },
    "5793": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5796": {
      "jump": "i",
      "op": "JUMP"
    },
    "5797": {
      "op": "JUMPDEST"
    },
    "5798": {
      "op": "SWAP7"
    },
    "5799": {
      "op": "SWAP6"
    },
    "5800": {
      "op": "POP"
    },
    "5801": {
      "op": "POP"
    },
    "5802": {
      "op": "POP"
    },
    "5803": {
      "op": "POP"
    },
    "5804": {
      "op": "POP"
    },
    "5805": {
      "op": "POP"
    },
    "5806": {
      "jump": "o",
      "op": "JUMP"
    },
    "5807": {
      "op": "JUMPDEST"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5810": {
      "op": "DUP1"
    },
    "5811": {
      "op": "DUP3"
    },
    "5812": {
      "op": "MSTORE"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5815": {
      "op": "SWAP1"
    },
    "5816": {
      "op": "DUP3"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "MSTORE"
    },
    "5819": {
      "op": "PUSH32",
      "value": "0x596F75206D7573742062652061646D696E20746F20646F20746869732E000000"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5854": {
      "op": "DUP3"
    },
    "5855": {
      "op": "ADD"
    },
    "5856": {
      "op": "MSTORE"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "SWAP1"
    },
    "5861": {
      "jump": "o",
      "op": "JUMP"
    },
    "5862": {
      "op": "JUMPDEST"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5865": {
      "op": "DUP3"
    },
    "5866": {
      "op": "DUP3"
    },
    "5867": {
      "op": "LT"
    },
    "5868": {
      "op": "ISZERO"
    },
    "5869": {
      "op": "PUSH2",
      "value": "0x16F8"
    },
    "5872": {
      "op": "JUMPI"
    },
    "5873": {
      "op": "PUSH2",
      "value": "0x16F8"
    },
    "5876": {
      "op": "PUSH2",
      "value": "0x1783"
    },
    "5879": {
      "jump": "i",
      "op": "JUMP"
    },
    "5880": {
      "op": "JUMPDEST"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "op": "SUB"
    },
    "5883": {
      "op": "SWAP1"
    },
    "5884": {
      "jump": "o",
      "op": "JUMP"
    },
    "5885": {
      "op": "JUMPDEST"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5888": {
      "op": "JUMPDEST"
    },
    "5889": {
      "op": "DUP4"
    },
    "5890": {
      "op": "DUP2"
    },
    "5891": {
      "op": "LT"
    },
    "5892": {
      "op": "ISZERO"
    },
    "5893": {
      "op": "PUSH2",
      "value": "0x1718"
    },
    "5896": {
      "op": "JUMPI"
    },
    "5897": {
      "op": "DUP2"
    },
    "5898": {
      "op": "DUP2"
    },
    "5899": {
      "op": "ADD"
    },
    "5900": {
      "op": "MLOAD"
    },
    "5901": {
      "op": "DUP4"
    },
    "5902": {
      "op": "DUP3"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "op": "MSTORE"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "PUSH2",
      "value": "0x1700"
    },
    "5911": {
      "op": "JUMP"
    },
    "5912": {
      "op": "JUMPDEST"
    },
    "5913": {
      "op": "DUP4"
    },
    "5914": {
      "op": "DUP2"
    },
    "5915": {
      "op": "GT"
    },
    "5916": {
      "op": "ISZERO"
    },
    "5917": {
      "op": "PUSH2",
      "value": "0x1727"
    },
    "5920": {
      "op": "JUMPI"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5923": {
      "op": "DUP5"
    },
    "5924": {
      "op": "DUP5"
    },
    "5925": {
      "op": "ADD"
    },
    "5926": {
      "op": "MSTORE"
    },
    "5927": {
      "op": "JUMPDEST"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "op": "POP"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "jump": "o",
      "op": "JUMP"
    },
    "5933": {
      "op": "JUMPDEST"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "DUP2"
    },
    "5937": {
      "op": "DUP2"
    },
    "5938": {
      "op": "SHR"
    },
    "5939": {
      "op": "SWAP1"
    },
    "5940": {
      "op": "DUP3"
    },
    "5941": {
      "op": "AND"
    },
    "5942": {
      "op": "DUP1"
    },
    "5943": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5946": {
      "op": "JUMPI"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5949": {
      "op": "DUP3"
    },
    "5950": {
      "op": "AND"
    },
    "5951": {
      "op": "SWAP2"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "op": "JUMPDEST"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5956": {
      "op": "DUP3"
    },
    "5957": {
      "op": "LT"
    },
    "5958": {
      "op": "DUP2"
    },
    "5959": {
      "op": "EQ"
    },
    "5960": {
      "op": "ISZERO"
    },
    "5961": {
      "op": "PUSH2",
      "value": "0x1762"
    },
    "5964": {
      "op": "JUMPI"
    },
    "5965": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5972": {
      "op": "SHL"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5975": {
      "op": "MSTORE"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5980": {
      "op": "MSTORE"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5985": {
      "op": "REVERT"
    },
    "5986": {
      "op": "JUMPDEST"
    },
    "5987": {
      "op": "POP"
    },
    "5988": {
      "op": "SWAP2"
    },
    "5989": {
      "op": "SWAP1"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "jump": "o",
      "op": "JUMP"
    },
    "5992": {
      "op": "JUMPDEST"
    },
    "5993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "NOT"
    },
    "5998": {
      "op": "DUP3"
    },
    "5999": {
      "op": "EQ"
    },
    "6000": {
      "op": "ISZERO"
    },
    "6001": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "6004": {
      "op": "JUMPI"
    },
    "6005": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "6008": {
      "op": "PUSH2",
      "value": "0x1783"
    },
    "6011": {
      "jump": "i",
      "op": "JUMP"
    },
    "6012": {
      "op": "JUMPDEST"
    },
    "6013": {
      "op": "POP"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6016": {
      "op": "ADD"
    },
    "6017": {
      "op": "SWAP1"
    },
    "6018": {
      "jump": "o",
      "op": "JUMP"
    },
    "6019": {
      "op": "JUMPDEST"
    },
    "6020": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6027": {
      "op": "SHL"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6030": {
      "op": "MSTORE"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6035": {
      "op": "MSTORE"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6040": {
      "op": "REVERT"
    },
    "6041": {
      "op": "JUMPDEST"
    },
    "6042": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6049": {
      "op": "SHL"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6052": {
      "op": "MSTORE"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6057": {
      "op": "MSTORE"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6062": {
      "op": "REVERT"
    }
  },
  "sha1": "f766ba9022c2d778dc6ccf25d84800cbfc038c81",
  "source": "pragma solidity ^0.8.1;\n\ncontract Voting {\n    address public adminAddress;\n    bool public electionOn = false;\n    modifier onlyOwner {\n        require(msg.sender == adminAddress, \"You must be admin to do this.\");\n        _;\n    }\n \n    event voterAdded(string name, string constituency);\n    event candidateAdded(string name, string constituency, string symbol);\n    // event voteEvent();\n    struct Voter {\n        // name, id, constituency, canVote \n        string name;\n        uint idNo;\n        string constituency;\n        bool canVote;\n        bool exists;\n    }\n    struct Candidate {\n        // name, constituency, noofvotes, address\n        string name;\n        string constituency;\n        string symbol;\n        uint noOfVotes;\n        bool exists;\n    }\n    \n    Voter[] voters;\n    mapping(uint => uint) public ballot; //hash to candidate mapping\n    Candidate[] candidates;\n    mapping(uint => uint) votersList; // voters id to voter mapping\n    \n    constructor(){\n        adminAddress = msg.sender;\n        candidates.push(Candidate(\"nonce\", \"nonce\", \"nonce\", 0,  false));\n        voters.push(Voter(\"nonce\", 0, \"nonce\", false, false));\n    }\n    \n    function startElection() public onlyOwner {\n        electionOn = true;\n    }\n    \n    function endElection() public onlyOwner {\n        electionOn = false;\n    }\n    // add right to vote facility later\n    function createVoter(string memory _name, uint _id, string memory _constituency) public {\n        require(!voters[votersList[_id]].exists, \"Voter id is already registered!.\");\n        voters.push(Voter(_name, _id, _constituency, true, true));\n        votersList[_id] = voters.length - 1;\n        \n        emit voterAdded(_name, _constituency);\n    } \n    function getVotersList() onlyOwner public view returns(Voter[] memory){\n        return voters;\n    }\n    function getCandidatesList() onlyOwner public view returns(Candidate[] memory){\n        return candidates;\n    }\n    // handle duplicate candidate problem later\n    function createCandidate(string memory _name, string memory _constituency, string memory _symbol) onlyOwner public {\n        uint candId =  _generateHash(_name, _constituency, _symbol);\n        require(!candidates[ballot[candId]].exists, \"Candidate already in ballot list!.\");\n        candidates.push(Candidate(_name, _constituency, _symbol, 0, true));\n        ballot[candId] = candidates.length - 1;\n        emit candidateAdded(_name, _constituency, _symbol);\n    }\n    \n    function _generateHash(string memory _name, string memory _constituency, string memory _symbol) public pure returns (uint){\n        uint hash = uint(keccak256(abi.encodePacked(_name, _constituency, _symbol)));   \n        return hash;\n    }\n    \n    function vote(uint _voterId, string memory _voteTo, string memory _constituency, string memory _symbol) public{\n        require(electionOn, \"Sorry. The election has ended.\");\n        require(voters[votersList[_voterId]].exists, \"You are not registered to vote.\");\n        require(voters[votersList[_voterId]].canVote, \"Sorry. You already voted.\");\n        uint candId = _generateHash(_voteTo, _constituency, _symbol);\n        require(candidates[ballot[candId]].exists, \"Selected candidate not found.\");\n        require(keccak256(abi.encodePacked(candidates[ballot[candId]].constituency)) == keccak256(abi.encodePacked(voters[votersList[_voterId]].constituency)), \"Sorry. You are voting for a candidate who is not in your constituency.\");\n        candidates[ballot[candId]].noOfVotes++; \n        voters[votersList[_voterId]].canVote = false;\n    }\n    \n    function getElectionResult() public view returns (Candidate[] memory){\n        require(!electionOn, \"Election has not ended.\");\n        return candidates;\n    }\n}",
  "sourceMap": "25:3719:0:-:0;;;105:5;80:30;;-1:-1:-1;;;;80:30:0;;;968:192;;;;;;;;;-1:-1:-1;991:12:0;:25;;-1:-1:-1;;;;;;991:25:0;1006:10;991:25;;;1042:47;;;;;;;;;;;;;;;-1:-1:-1;;;1042:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1042:47:0;;;-1:-1:-1;;;1042:47:0;;;1026:10;:64;;991:25;1026:64;;;;;;;;;;1042:47;;1026:64;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1026:64:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1026:64:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1026:64:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1026:64:0;;;;;;;;;1112:40;;;;;;;;;;;;;;;-1:-1:-1;;;1112:40:0;;;;;;;;;1026:64;-1:-1:-1;1112:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1112:40:0;;;-1:-1:-1;;;1112:40:0;;;1026:64;1100:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1100:53:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1100:53:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1100:53:0;;;;;;;-1:-1:-1;;1100:53:0;;;;;;;;;;25:3719;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25:3719:0;;;-1:-1:-1;25:3719:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;25:3719:0;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}