{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "candidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "constituency",
          "type": "string"
        }
      ],
      "name": "voterAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "_generateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ballot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        }
      ],
      "name": "createVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionOn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "constituency",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "noOfVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct Voting.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_voterId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_voteTo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_constituency",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "Voting": [
        341
      ]
    },
    "id": 342,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 341,
        "linearizedBaseContracts": [
          341
        ],
        "name": "Voting",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc6f9468",
            "id": 3,
            "mutability": "mutable",
            "name": "adminAddress",
            "nameLocation": "62:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "47:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "47:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "137edd98",
            "id": 6,
            "mutability": "mutable",
            "name": "electionOn",
            "nameLocation": "92:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "80:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "80:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "105:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "135:63:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "153:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "153:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11,
                          "name": "adminAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "167:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "153:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "145:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "145:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "145:35:0"
                },
                {
                  "id": 15,
                  "nodeType": "PlaceholderStatement",
                  "src": "190:1:0"
                }
              ]
            },
            "id": 17,
            "name": "onlyOwner",
            "nameLocation": "125:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "135:0:0"
            },
            "src": "116:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 23,
            "name": "voterAdded",
            "nameLocation": "211:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "229:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "222:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "242:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "235:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:34:0"
            },
            "src": "205:51:0"
          },
          {
            "anonymous": false,
            "id": 31,
            "name": "candidateAdded",
            "nameLocation": "267:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "289:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "282:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "constituency",
                  "nameLocation": "302:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "295:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "323:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "316:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "281:49:0"
            },
            "src": "261:70:0"
          },
          {
            "canonicalName": "Voting.Voter",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "436:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "429:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "idNo",
                "nameLocation": "455:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "450:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "476:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "469:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "canVote",
                "nameLocation": "503:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "498:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 38,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "525:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "520:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 40,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "369:5:0",
            "nodeType": "StructDefinition",
            "scope": 341,
            "src": "362:176:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Voting.Candidate",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "627:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "620:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 43,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "620:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "constituency",
                "nameLocation": "648:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "641:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "641:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "677:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "670:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "670:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "noOfVotes",
                "nameLocation": "698:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "693:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "722:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "717:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 51,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "550:9:0",
            "nodeType": "StructDefinition",
            "scope": 341,
            "src": "543:192:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "753:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "745:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage",
              "typeString": "struct Voting.Voter[]"
            },
            "typeName": {
              "baseType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "745:5:0"
                },
                "referencedDeclaration": 42,
                "src": "745:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$42_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              },
              "id": 56,
              "nodeType": "ArrayTypeName",
              "src": "745:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Voter_$42_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Voter[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e7942734",
            "id": 61,
            "mutability": "mutable",
            "name": "ballot",
            "nameLocation": "794:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "765:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "773:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "765:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 59,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "781:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "846:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "834:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
              "typeString": "struct Voting.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 63,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 62,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "834:9:0"
                },
                "referencedDeclaration": 53,
                "src": "834:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$53_storage_ptr",
                  "typeString": "struct Voting.Candidate"
                }
              },
              "id": 64,
              "nodeType": "ArrayTypeName",
              "src": "834:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr",
                "typeString": "struct Voting.Candidate[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "votersList",
            "nameLocation": "885:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "862:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
              "typeString": "mapping(uint256 => struct Voting.Voter)"
            },
            "typeName": {
              "id": 69,
              "keyType": {
                "id": 66,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "870:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "862:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                "typeString": "mapping(uint256 => struct Voting.Voter)"
              },
              "valueType": {
                "id": 68,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 67,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "878:5:0"
                },
                "referencedDeclaration": 42,
                "src": "878:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$42_storage_ptr",
                  "typeString": "struct Voting.Voter"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "949:116:0",
              "statements": [
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "adminAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "959:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "974:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "974:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "959:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "959:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1020:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1029:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "6e6f6e6365",
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1038:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            "value": "nonce"
                          },
                          {
                            "hexValue": "30",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1047:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1051:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e1759",
                              "typeString": "literal_string \"nonce\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 81,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1010:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$53_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1010:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 78,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "994:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "994:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$53_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "994:64:0"
                }
              ]
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "949:0:0"
            },
            "scope": 341,
            "src": "936:129:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1117:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1127:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1140:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1127:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:17:0"
                }
              ]
            },
            "functionSelector": "62d73eb8",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 94,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 93,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1107:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1107:9:0"
              }
            ],
            "name": "startElection",
            "nameLocation": "1084:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:0"
            },
            "scope": 341,
            "src": "1075:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1201:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "electionOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1211:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1224:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1211:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:18:0"
                }
              ]
            },
            "functionSelector": "59f78468",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 103,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1191:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1191:9:0"
              }
            ],
            "name": "endElection",
            "nameLocation": "1170:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:0:0"
            },
            "scope": 341,
            "src": "1161:75:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "1369:283:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1387:23:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 121,
                              "name": "votersList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "1388:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                                "typeString": "mapping(uint256 => struct Voting.Voter storage ref)"
                              }
                            },
                            "id": 123,
                            "indexExpression": {
                              "id": 122,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "1399:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1388:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$42_storage",
                              "typeString": "struct Voting.Voter storage ref"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "1388:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657220696420697320616c72656164792072656769737465726564212e",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1412:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        },
                        "value": "Voter id is already registered!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db8896c7591222bdeb19ff9404421f5f09c2610352a44b243f023a78437c2847",
                          "typeString": "literal_string \"Voter id is already registered!.\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:68:0"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 129,
                        "name": "votersList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1527:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                          "typeString": "mapping(uint256 => struct Voting.Voter storage ref)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "id": 130,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "1538:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1527:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$42_storage",
                        "typeString": "struct Voting.Voter storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 133,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1551:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 134,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1558:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 135,
                          "name": "_constituency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1563:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1578:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1584:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 132,
                        "name": "Voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1545:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Voter_$42_storage_ptr_$",
                          "typeString": "type(struct Voting.Voter storage pointer)"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1545:44:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$42_memory_ptr",
                        "typeString": "struct Voting.Voter memory"
                      }
                    },
                    "src": "1527:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$42_storage",
                      "typeString": "struct Voting.Voter storage ref"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:62:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1624:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 143,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1631:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 141,
                      "name": "voterAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1613:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1613:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "EmitStatement",
                  "src": "1608:37:0"
                }
              ]
            },
            "functionSelector": "d373f8d4",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVoter",
            "nameLocation": "1290:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1316:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1302:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1328:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1323:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "1347:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1333:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1301:60:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:0:0"
            },
            "scope": 341,
            "src": "1281:371:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "1821:351:0",
              "statements": [
                {
                  "assignments": [
                    159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 159,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "1836:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "1831:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1831:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 161,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "1860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 162,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1867:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 163,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1882:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 160,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1846:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1831:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1908:34:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 167,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "1909:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                                "typeString": "struct Voting.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 168,
                                "name": "ballot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "1920:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 170,
                              "indexExpression": {
                                "id": 169,
                                "name": "candId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "1927:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1920:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1909:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Candidate_$53_storage",
                              "typeString": "struct Voting.Candidate storage ref"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52,
                          "src": "1909:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e64696461746520616c726561647920696e2062616c6c6f74206c697374212e",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1944:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        },
                        "value": "Candidate already in ballot list!."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f7329344d4d23f80a2c9d35fbfaa1dbf16b5b8f1461aa651f67fdfbaf7c9bab",
                          "typeString": "literal_string \"Candidate already in ballot list!.\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 181,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "2017:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 182,
                            "name": "_constituency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2024:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 183,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "2039:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2048:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "74727565",
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2051:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 180,
                          "name": "Candidate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2007:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Candidate_$53_storage_ptr_$",
                            "typeString": "type(struct Voting.Candidate storage pointer)"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2007:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Candidate_$53_memory_ptr",
                          "typeString": "struct Voting.Candidate memory"
                        }
                      ],
                      "expression": {
                        "id": 177,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1991:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                          "typeString": "struct Voting.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1991:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$53_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Voting.Candidate storage ref[] storage pointer,struct Voting.Candidate storage ref)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:66:0"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 189,
                        "name": "ballot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "2067:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 191,
                      "indexExpression": {
                        "id": 190,
                        "name": "candId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2074:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2067:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 192,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2084:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2084:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2104:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2084:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2067:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2135:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 200,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2142:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 201,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2157:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 198,
                      "name": "candidateAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2120:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "EmitStatement",
                  "src": "2115:50:0"
                }
              ]
            },
            "functionSelector": "1d823d32",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 155,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "1804:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:9:0"
              }
            ],
            "name": "createCandidate",
            "nameLocation": "1715:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1745:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1731:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "1766:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1752:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1795:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "1781:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:73:0"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:0"
            },
            "scope": 341,
            "src": "1706:466:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2304:117:0",
              "statements": [
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "2319:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "2314:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2314:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 223,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "2358:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 224,
                                "name": "_constituency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 209,
                                "src": "2365:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 225,
                                "name": "_symbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 211,
                                "src": "2380:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 221,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2341:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2341:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2341:47:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 220,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2331:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2331:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2326:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2326:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2314:76:0"
                },
                {
                  "expression": {
                    "id": 230,
                    "name": "hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 217,
                    "src": "2410:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 231,
                  "nodeType": "Return",
                  "src": "2403:11:0"
                }
              ]
            },
            "functionSelector": "79ae584d",
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateHash",
            "nameLocation": "2191:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2219:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2205:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2240:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2226:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2269:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2255:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2204:73:0"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2299:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2298:6:0"
            },
            "scope": 341,
            "src": "2182:239:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "2541:704:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 245,
                        "name": "electionOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "2559:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e2054686520656c656374696f6e2068617320656e6465642e",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2571:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        },
                        "value": "Sorry. The election has ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb3f56b68493a70d6e12fc3c382c664b6b857b5ea31592208f3f47e3a8e858a4",
                          "typeString": "literal_string \"Sorry. The election has ended.\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2551:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2551:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "2551:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 250,
                            "name": "votersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "2622:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                              "typeString": "mapping(uint256 => struct Voting.Voter storage ref)"
                            }
                          },
                          "id": 252,
                          "indexExpression": {
                            "id": 251,
                            "name": "_voterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "2633:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2622:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$42_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41,
                        "src": "2622:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f74207265676973746572656420746f20766f74652e",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2651:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        },
                        "value": "You are not registered to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57d3589d93850f3cbf9658f8cf7d55be2e67fc493077202d86b3d3bae774a473",
                          "typeString": "literal_string \"You are not registered to vote.\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2614:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 258,
                            "name": "votersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "2703:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                              "typeString": "mapping(uint256 => struct Voting.Voter storage ref)"
                            }
                          },
                          "id": 260,
                          "indexExpression": {
                            "id": 259,
                            "name": "_voterId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "2714:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2703:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$42_storage",
                            "typeString": "struct Voting.Voter storage ref"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canVote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "2703:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f7520616c726561647920766f7465642e",
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2733:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        },
                        "value": "Sorry. You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d2780c3bb8782ac656f0d3484aa9f16088fcea54fc2660c407183496a9f06d3",
                          "typeString": "literal_string \"Sorry. You already voted.\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2695:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:66:0"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "candId",
                      "nameLocation": "2776:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "2771:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2771:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "_voteTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "2799:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 269,
                        "name": "_constituency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "2808:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 270,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2823:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 267,
                      "name": "_generateHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "2785:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2771:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 274,
                            "name": "candidates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "2849:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                              "typeString": "struct Voting.Candidate storage ref[] storage ref"
                            }
                          },
                          "id": 278,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 275,
                              "name": "ballot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "2860:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 277,
                            "indexExpression": {
                              "id": 276,
                              "name": "candId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "2867:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2860:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2849:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$53_storage",
                            "typeString": "struct Voting.Candidate storage ref"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52,
                        "src": "2849:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c65637465642063616e646964617465206e6f7420666f756e642e",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2884:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        },
                        "value": "Selected candidate not found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_387b6f46e36c148d9c903ae67e3cb8868a844050dd17c992d1880febdb74c176",
                          "typeString": "literal_string \"Selected candidate not found.\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2841:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 287,
                                      "name": "candidates",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65,
                                      "src": "2961:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                                        "typeString": "struct Voting.Candidate storage ref[] storage ref"
                                      }
                                    },
                                    "id": 291,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 288,
                                        "name": "ballot",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61,
                                        "src": "2972:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 290,
                                      "indexExpression": {
                                        "id": 289,
                                        "name": "candId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "2979:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2972:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2961:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Candidate_$53_storage",
                                      "typeString": "struct Voting.Candidate storage ref"
                                    }
                                  },
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "2961:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 285,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2944:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2944:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 284,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2934:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2934:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 298,
                                      "name": "votersList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 70,
                                      "src": "3033:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                                        "typeString": "mapping(uint256 => struct Voting.Voter storage ref)"
                                      }
                                    },
                                    "id": 300,
                                    "indexExpression": {
                                      "id": 299,
                                      "name": "_voterId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 235,
                                      "src": "3044:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3033:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$42_storage",
                                      "typeString": "struct Voting.Voter storage ref"
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituency",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37,
                                  "src": "3033:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 296,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3016:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3016:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3016:51:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 295,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3006:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3006:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2934:134:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20596f752061726520766f74696e6720666f7220612063616e6469646174652077686f206973206e6f7420696e20796f757220636f6e7374697475656e63792e",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3070:72:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        },
                        "value": "Sorry. You are voting for a candidate who is not in your constituency."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed8933040d0fab1e700743e59641f9d9b7c74b48f9a05f2718b0af6271b94003",
                          "typeString": "literal_string \"Sorry. You are voting for a candidate who is not in your constituency.\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2926:217:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "2926:217:0"
                },
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3153:38:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 308,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "3153:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                            "typeString": "struct Voting.Candidate storage ref[] storage ref"
                          }
                        },
                        "id": 312,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 309,
                            "name": "ballot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "3164:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 311,
                          "indexExpression": {
                            "id": 310,
                            "name": "candId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3171:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3164:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3153:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$53_storage",
                          "typeString": "struct Voting.Candidate storage ref"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "noOfVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "3153:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:38:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 316,
                          "name": "votersList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3202:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Voter_$42_storage_$",
                            "typeString": "mapping(uint256 => struct Voting.Voter storage ref)"
                          }
                        },
                        "id": 318,
                        "indexExpression": {
                          "id": 317,
                          "name": "_voterId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "3213:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3202:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$42_storage",
                          "typeString": "struct Voting.Voter storage ref"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "canVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "3202:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3233:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3202:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:36:0"
                }
              ]
            },
            "functionSelector": "dd4159c0",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2440:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_voterId",
                  "nameLocation": "2450:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2445:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_voteTo",
                  "nameLocation": "2474:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2460:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_constituency",
                  "nameLocation": "2497:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2483:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2483:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2526:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2512:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2444:90:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2541:0:0"
            },
            "scope": 341,
            "src": "2431:814:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "3324:91:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3342:11:0",
                        "subExpression": {
                          "id": 332,
                          "name": "electionOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3343:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e20686173206e6f7420656e6465642e",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3355:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        },
                        "value": "Election has not ended."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94dc857d4f466f53b17169a6130fb2017b0e5cd23d63f39c063392a5c4dd61ed",
                          "typeString": "literal_string \"Election has not ended.\""
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3334:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3334:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3334:47:0"
                },
                {
                  "expression": {
                    "id": 337,
                    "name": "candidates",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "3398:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage",
                      "typeString": "struct Voting.Candidate storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 330,
                  "id": 338,
                  "nodeType": "Return",
                  "src": "3391:17:0"
                }
              ]
            },
            "functionSelector": "ca3eb443",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getElectionResult",
            "nameLocation": "3264:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3281:2:0"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "3305:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$53_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Voting.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 327,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 326,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "3305:9:0"
                      },
                      "referencedDeclaration": 53,
                      "src": "3305:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$53_storage_ptr",
                        "typeString": "struct Voting.Candidate"
                      }
                    },
                    "id": 328,
                    "nodeType": "ArrayTypeName",
                    "src": "3305:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$53_storage_$dyn_storage_ptr",
                      "typeString": "struct Voting.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:20:0"
            },
            "scope": 341,
            "src": "3255:160:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 342,
        "src": "25:3392:0",
        "usedErrors": []
      }
    ],
    "src": "0:3417:0"
  },
  "bytecode": "60806040526000805460ff60a01b191690553480156200001e57600080fd5b50600080546001600160a01b031916331781556040805160e081018252600560a08201818152646e6f6e636560d81b60c084018190529083528351808501855282815260208181018390528085019190915284518086018652838152808201929092529383015260608201849052608082018490526003805460018101825594528151805192949091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0192620000dc9284929091019062000140565b506020828101518051620000f7926001850192019062000140565b50604082015180516200011591600284019160209091019062000140565b50606082015160038201556080909101516004909101805460ff191691151591909117905562000223565b8280546200014e90620001e6565b90600052602060002090601f016020900481019282620001725760008555620001bd565b82601f106200018d57805160ff1916838001178555620001bd565b82800160010185558215620001bd579182015b82811115620001bd578251825591602001919060010190620001a0565b50620001cb929150620001cf565b5090565b5b80821115620001cb5760008155600101620001d0565b600181811c90821680620001fb57607f821691505b602082108114156200021d57634e487b7160e01b600052602260045260246000fd5b50919050565b61111f80620002336000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ca3eb44311610066578063ca3eb44314610112578063d373f8d414610127578063dd4159c01461013a578063e79427341461014d578063fc6f94681461016d57600080fd5b8063137edd98146100a35780631d823d32146100cc57806359f78468146100e157806362d73eb8146100e957806379ae584d146100f1575b600080fd5b6000546100b790600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6100df6100da366004610c72565b610198565b005b6100df610396565b6100df6103bc565b6101046100ff366004610c72565b6103e8565b6040519081526020016100c3565b61011a610421565b6040516100c39190610ef9565b6100df610135366004610cf6565b6106b0565b6100df610148366004610d61565b6107f6565b61010461015b366004610d49565b60026020526000908152604090205481565b600054610180906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6000546001600160a01b031633146101af57600080fd5b60006101bc8484846103e8565b600081815260026020526040902054600380549293509181106101ef57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff16156102635760405162461bcd60e51b815260206004820152602260248201527f43616e64696461746520616c726561647920696e2062616c6c6f74206c697374604482015261109760f11b60648201526084015b60405180910390fd5b6040805160a081018252858152602080820186905291810184905260006060820181905260016080830181905260038054918201815590915281518051929360059092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01926102d79284920190610b52565b5060208281015180516102f09260018501920190610b52565b506040820151805161030c916002840191602090910190610b52565b5060608201516003828101919091556080909201516004909101805460ff19169115159190911790555461034290600190611020565b6000828152600260205260409081902091909155517fc44d2bc043b37cce4868439a5953ce1f7bac3aaaf08fe783b0412b6a77fdedef9061038890869086908690610fdd565b60405180910390a150505050565b6000546001600160a01b031633146103ad57600080fd5b6000805460ff60a01b19169055565b6000546001600160a01b031633146103d357600080fd5b6000805460ff60a01b1916600160a01b179055565b60008084848460405160200161040093929190610e1b565b60408051808303601f19018152919052805160209091012095945050505050565b600054606090600160a01b900460ff161561047e5760405162461bcd60e51b815260206004820152601760248201527f456c656374696f6e20686173206e6f7420656e6465642e000000000000000000604482015260640161025a565b6003805480602002602001604051908101604052809291908181526020016000905b828210156106a757838290600052602060002090600502016040518060a00160405290816000820180546104d390611067565b80601f01602080910402602001604051908101604052809291908181526020018280546104ff90611067565b801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b5050505050815260200160018201805461056590611067565b80601f016020809104026020016040519081016040528092919081815260200182805461059190611067565b80156105de5780601f106105b3576101008083540402835291602001916105de565b820191906000526020600020905b8154815290600101906020018083116105c157829003601f168201915b505050505081526020016002820180546105f790611067565b80601f016020809104026020016040519081016040528092919081815260200182805461062390611067565b80156106705780601f1061064557610100808354040283529160200191610670565b820191906000526020600020905b81548152906001019060200180831161065357829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff16151560409091015290825260019290920191016104a0565b50505050905090565b600082815260046020526040902060030154610100900460ff16156107175760405162461bcd60e51b815260206004820181905260248201527f566f74657220696420697320616c72656164792072656769737465726564212e604482015260640161025a565b6040805160a081018252848152602080820185905281830184905260016060830181905260808301526000858152600482529290922081518051929391926107629284920190610b52565b506020828101516001830155604083015180516107859260028501920190610b52565b5060608201516003909101805460809093015115156101000261ff00199215159290921661ffff19909316929092171790556040517f31c5bc59eac45ff3b495b7287b81a7453896fbad73147c719a98ad77c5809f9a906107e99085908490610faf565b60405180910390a1505050565b600054600160a01b900460ff1661084f5760405162461bcd60e51b815260206004820152601e60248201527f536f7272792e2054686520656c656374696f6e2068617320656e6465642e0000604482015260640161025a565b600084815260046020526040902060030154610100900460ff166108b55760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74207265676973746572656420746f20766f74652e00604482015260640161025a565b60008481526004602052604090206003015460ff166109165760405162461bcd60e51b815260206004820152601960248201527f536f7272792e20596f7520616c726561647920766f7465642e00000000000000604482015260640161025a565b60006109238484846103e8565b6000818152600260205260409020546003805492935091811061095657634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600590920201015460ff166109b95760405162461bcd60e51b815260206004820152601d60248201527f53656c65637465642063616e646964617465206e6f7420666f756e642e000000604482015260640161025a565b60008581526004602090815260409182902091516109db926002019101610e5e565b604051602081830303815290604052805190602001206003600260008481526020019081526020016000205481548110610a2557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201600101604051602001610a469190610e5e565b6040516020818303038152906040528051906020012014610ade5760405162461bcd60e51b815260206004820152604660248201527f536f7272792e20596f752061726520766f74696e6720666f7220612063616e6460448201527f69646174652077686f206973206e6f7420696e20796f757220636f6e737469746064820152653ab2b731bc9760d11b608482015260a40161025a565b600081815260026020526040902054600380549091908110610b1057634e487b7160e01b600052603260045260246000fd5b600091825260208220600360059092020101805491610b2e836110a2565b9091555050506000938452505060046020525060409020600301805460ff19169055565b828054610b5e90611067565b90600052602060002090601f016020900481019282610b805760008555610bc6565b82601f10610b9957805160ff1916838001178555610bc6565b82800160010185558215610bc6579182015b82811115610bc6578251825591602001919060010190610bab565b50610bd2929150610bd6565b5090565b5b80821115610bd25760008155600101610bd7565b600082601f830112610bfb578081fd5b813567ffffffffffffffff80821115610c1657610c166110d3565b604051601f8301601f19908116603f01168101908282118183101715610c3e57610c3e6110d3565b81604052838152866020858801011115610c56578485fd5b8360208701602083013792830160200193909352509392505050565b600080600060608486031215610c86578283fd5b833567ffffffffffffffff80821115610c9d578485fd5b610ca987838801610beb565b94506020860135915080821115610cbe578384fd5b610cca87838801610beb565b93506040860135915080821115610cdf578283fd5b50610cec86828701610beb565b9150509250925092565b600080600060608486031215610d0a578283fd5b833567ffffffffffffffff80821115610d21578485fd5b610d2d87838801610beb565b9450602086013593506040860135915080821115610cdf578283fd5b600060208284031215610d5a578081fd5b5035919050565b60008060008060808587031215610d76578081fd5b84359350602085013567ffffffffffffffff80821115610d94578283fd5b610da088838901610beb565b94506040870135915080821115610db5578283fd5b610dc188838901610beb565b93506060870135915080821115610dd6578283fd5b50610de387828801610beb565b91505092959194509250565b60008151808452610e07816020860160208601611037565b601f01601f19169290920160200192915050565b60008451610e2d818460208901611037565b845190830190610e41818360208901611037565b8451910190610e54818360208801611037565b0195945050505050565b600080835482600182811c915080831680610e7a57607f831692505b6020808410821415610e9a57634e487b7160e01b87526022600452602487fd5b818015610eae5760018114610ebf57610eeb565b60ff19861689528489019650610eeb565b60008a815260209020885b86811015610ee35781548b820152908501908301610eca565b505084890196505b509498975050505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015610fa157603f19898403018552815160a08151818652610f4582870182610def565b915050888201518582038a870152610f5d8282610def565b9150508782015185820389870152610f758282610def565b606084810151908801526080938401511515939096019290925250509386019390860190600101610f1f565b509098975050505050505050565b604081526000610fc26040830185610def565b8281036020840152610fd48185610def565b95945050505050565b606081526000610ff06060830186610def565b82810360208401526110028186610def565b905082810360408401526110168185610def565b9695505050505050565b600082821015611032576110326110bd565b500390565b60005b8381101561105257818101518382015260200161103a565b83811115611061576000848401525b50505050565b600181811c9082168061107b57607f821691505b6020821081141561109c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156110b6576110b66110bd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d6dec662f7d151506a905252f6593dac3f184677400ab362fd39912f4d70feee64736f6c63430008040033",
  "bytecodeSha1": "8bf5bf1aa5d0274ec658697ede637f9d705c8f9d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Voting",
  "coverageMap": {
    "branches": {
      "0": {
        "Voting.createCandidate": {
          "18": [
            1908,
            1942,
            true
          ]
        },
        "Voting.createVoter": {
          "20": [
            1387,
            1410,
            true
          ]
        },
        "Voting.getElectionResult": {
          "19": [
            3342,
            3353,
            true
          ]
        },
        "Voting.vote": {
          "21": [
            2559,
            2569,
            true
          ],
          "22": [
            2622,
            2649,
            true
          ],
          "23": [
            2703,
            2731,
            true
          ],
          "24": [
            2849,
            2882,
            true
          ],
          "25": [
            2934,
            3068,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Voting.createCandidate": {
          "0": [
            1900,
            1981
          ],
          "1": [
            1991,
            2057
          ],
          "2": [
            2067,
            2105
          ],
          "3": [
            2115,
            2165
          ]
        },
        "Voting.createVoter": {
          "8": [
            1379,
            1447
          ],
          "9": [
            1527,
            1589
          ],
          "10": [
            1608,
            1645
          ]
        },
        "Voting.endElection": {
          "4": [
            1211,
            1229
          ]
        },
        "Voting.getElectionResult": {
          "6": [
            3334,
            3381
          ],
          "7": [
            3391,
            3408
          ]
        },
        "Voting.startElection": {
          "5": [
            1127,
            1144
          ]
        },
        "Voting.vote": {
          "11": [
            2551,
            2604
          ],
          "12": [
            2614,
            2685
          ],
          "13": [
            2695,
            2761
          ],
          "14": [
            2841,
            2916
          ],
          "15": [
            2926,
            3143
          ],
          "16": [
            3153,
            3191
          ],
          "17": [
            3202,
            3238
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "25:3392:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80:30;;;;;-1:-1:-1;;;80:30:0;;;;;;;;;7234:14:1;;7227:22;7209:41;;7197:2;7182:18;80:30:0;;;;;;;;1706:466;;;;;;:::i;:::-;;:::i;:::-;;1161:75;;;:::i;1075:76::-;;;:::i;2182:239::-;;;;;;:::i;:::-;;:::i;:::-;;;11372:25:1;;;11360:2;11345:18;2182:239:0;11327:76:1;3255:160:0;;;:::i;:::-;;;;;;;:::i;1281:371::-;;;;;;:::i;:::-;;:::i;2431:814::-;;;;;;:::i;:::-;;:::i;765:35::-;;;;;;:::i;:::-;;;;;;;;;;;;;;47:27;;;;;-1:-1:-1;;;;;47:27:0;;;;;;-1:-1:-1;;;;;5448:32:1;;;5430:51;;5418:2;5403:18;47:27:0;5385:102:1;1706:466:0;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1831:11:::1;1846:44;1860:5;1867:13;1882:7;1846:13;:44::i;:::-;1920:14;::::0;;;:6:::1;:14;::::0;;;;;1909:10:::1;:26:::0;;1831:59;;-1:-1:-1;1909:10:0;:26;::::1;;;-1:-1:-1::0;;;1909:26:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;:33:::1;:26;::::0;;::::1;;:33;::::0;::::1;;1908:34;1900:81;;;::::0;-1:-1:-1;;;1900:81:0;;9474:2:1;1900:81:0::1;::::0;::::1;9456:21:1::0;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:1;;;9596:32;9645:19;;1900:81:0::1;;;;;;;;;2007:49;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;2007:49:0;;;;;;2051:4:::1;2007:49:::0;;;;;;1991:10:::1;:66:::0;;;;::::1;::::0;;;;;;;;;2007:49;;1991:66:::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1991:66:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1991:66:0::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1991:66:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;1991:66:0::1;::::0;::::1;;::::0;;;::::1;::::0;;2084:17;:21:::1;::::0;-1:-1:-1;;2084:21:0::1;:::i;:::-;2067:14;::::0;;;:6:::1;:14;::::0;;;;;;:38;;;;2120:45;::::1;::::0;::::1;::::0;2135:5;;2142:13;;2157:7;;2120:45:::1;:::i;:::-;;;;;;;;190:1;1706:466:::0;;;:::o;1161:75::-;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1224:5:::1;1211:18:::0;;-1:-1:-1;;;;1211:18:0::1;::::0;;1161:75::o;1075:76::-;167:12;;-1:-1:-1;;;;;167:12:0;153:10;:26;145:35;;;;;;1127:10:::1;:17:::0;;-1:-1:-1;;;;1127:17:0::1;-1:-1:-1::0;;;1127:17:0::1;::::0;;1075:76::o;2182:239::-;2299:4;2314:9;2358:5;2365:13;2380:7;2341:47;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2341:47:0;;;;;;2331:58;;2341:47;2331:58;;;;;2182:239;-1:-1:-1;;;;;2182:239:0:o;3255:160::-;3343:10;;3305:18;;-1:-1:-1;;;3343:10:0;;;;3342:11;3334:47;;;;-1:-1:-1;;;3334:47:0;;9877:2:1;3334:47:0;;;9859:21:1;9916:2;9896:18;;;9889:30;9955:25;9935:18;;;9928:53;9998:18;;3334:47:0;9849:173:1;3334:47:0;3398:10;3391:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3391:17:0;;;-1:-1:-1;;3391:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3255:160;:::o;1281:371::-;1388:15;;;;:10;:15;;;;;:22;;;;;;;;1387:23;1379:68;;;;-1:-1:-1;;;1379:68:0;;10229:2:1;1379:68:0;;;10211:21:1;;;10248:18;;;10241:30;10307:34;10287:18;;;10280:62;10359:18;;1379:68:0;10201:182:1;1379:68:0;1545:44;;;;;;;;;;;;;;;;;;;;;;;;1578:4;1545:44;;;;;;;;;;-1:-1:-1;1527:15:0;;;:10;:15;;;;;;:62;;;;1545:44;;1527:15;;:62;;:15;;:62;;;:::i;:::-;-1:-1:-1;1527:62:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1527:62:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1527:62:0;;;;;;;-1:-1:-1;;1527:62:0;;;;;;;;;;1613:32;;;;;;1624:5;;1631:13;;1613:32;:::i;:::-;;;;;;;;1281:371;;;:::o;2431:814::-;2559:10;;-1:-1:-1;;;2559:10:0;;;;2551:53;;;;-1:-1:-1;;;2551:53:0;;10590:2:1;2551:53:0;;;10572:21:1;10629:2;10609:18;;;10602:30;10668:32;10648:18;;;10641:60;10718:18;;2551:53:0;10562:180:1;2551:53:0;2622:20;;;;:10;:20;;;;;:27;;;;;;;;2614:71;;;;-1:-1:-1;;;2614:71:0;;8760:2:1;2614:71:0;;;8742:21:1;8799:2;8779:18;;;8772:30;8838:33;8818:18;;;8811:61;8889:18;;2614:71:0;8732:181:1;2614:71:0;2703:20;;;;:10;:20;;;;;:28;;;;;2695:66;;;;-1:-1:-1;;;2695:66:0;;9120:2:1;2695:66:0;;;9102:21:1;9159:2;9139:18;;;9132:30;9198:27;9178:18;;;9171:55;9243:18;;2695:66:0;9092:175:1;2695:66:0;2771:11;2785:46;2799:7;2808:13;2823:7;2785:13;:46::i;:::-;2860:14;;;;:6;:14;;;;;;2849:10;:26;;2771:60;;-1:-1:-1;2849:10:0;:26;;;;-1:-1:-1;;;2849:26:0;;;;;;;;;;;;;;;;;:33;:26;;;;;:33;;;;2841:75;;;;-1:-1:-1;;;2841:75:0;;8402:2:1;2841:75:0;;;8384:21:1;8441:2;8421:18;;;8414:30;8480:31;8460:18;;;8453:59;8529:18;;2841:75:0;8374:179:1;2841:75:0;3033:20;;;;:10;:20;;;;;;;;;3016:51;;;;3033:33;;;3016:51;;:::i;:::-;;;;;;;;;;;;;3006:62;;;;;;2961:10;2972:6;:14;2979:6;2972:14;;;;;;;;;;;;2961:26;;;;;;-1:-1:-1;;;2961:26:0;;;;;;;;;;;;;;;;;;;:39;;2944:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;2934:68;;;;;;:134;2926:217;;;;-1:-1:-1;;;2926:217:0;;10949:2:1;2926:217:0;;;10931:21:1;10988:2;10968:18;;;10961:30;11027:34;11007:18;;;11000:62;11098:34;11078:18;;;11071:62;-1:-1:-1;;;11149:19:1;;;11142:37;11196:19;;2926:217:0;10921:300:1;2926:217:0;3164:14;;;;:6;:14;;;;;;3153:10;:26;;:10;;3164:14;3153:26;;;;-1:-1:-1;;;3153:26:0;;;;;;;;;;;;;;;;:36;:26;;;;;:36;:38;;;;;;:::i;:::-;;;;-1:-1:-1;;;3233:5:0;3202:20;;;-1:-1:-1;;3202:10:0;:20;;-1:-1:-1;3202:20:0;;;:28;;:36;;-1:-1:-1;;3202:36:0;;;2431:814::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:739:1;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;132:5;125;118:20;77:2;172:6;159:20;198:18;235:2;231;228:10;225:2;;;241:18;;:::i;:::-;316:2;310:9;284:2;370:13;;-1:-1:-1;;366:22:1;;;390:2;362:31;358:40;346:53;;;414:18;;;434:22;;;411:46;408:2;;;460:18;;:::i;:::-;500:10;496:2;489:22;535:2;527:6;520:18;581:3;574:4;569:2;561:6;557:15;553:26;550:35;547:2;;;602:5;595;588:20;547:2;670;663:4;655:6;651:17;644:4;636:6;632:17;619:54;693:15;;;710:4;689:26;682:41;;;;-1:-1:-1;697:6:1;67:686;-1:-1:-1;;;67:686:1:o;758:783::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;955:6;947;940:22;902:2;1000:9;987:23;1029:18;1070:2;1062:6;1059:14;1056:2;;;1091:6;1083;1076:22;1056:2;1119:50;1161:7;1152:6;1141:9;1137:22;1119:50;:::i;:::-;1109:60;;1222:2;1211:9;1207:18;1194:32;1178:48;;1251:2;1241:8;1238:16;1235:2;;;1272:6;1264;1257:22;1235:2;1300:52;1344:7;1333:8;1322:9;1318:24;1300:52;:::i;:::-;1290:62;;1405:2;1394:9;1390:18;1377:32;1361:48;;1434:2;1424:8;1421:16;1418:2;;;1455:6;1447;1440:22;1418:2;;1483:52;1527:7;1516:8;1505:9;1501:24;1483:52;:::i;:::-;1473:62;;;892:649;;;;;:::o;1546:641::-;1643:6;1651;1659;1712:2;1700:9;1691:7;1687:23;1683:32;1680:2;;;1733:6;1725;1718:22;1680:2;1778:9;1765:23;1807:18;1848:2;1840:6;1837:14;1834:2;;;1869:6;1861;1854:22;1834:2;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1994:2;1983:9;1979:18;1966:32;1956:42;;2051:2;2040:9;2036:18;2023:32;2007:48;;2080:2;2070:8;2067:16;2064:2;;;2101:6;2093;2086:22;2192:190;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:2;;;2325:6;2317;2310:22;2272:2;-1:-1:-1;2353:23:1;;2262:120;-1:-1:-1;2262:120:1:o;2387:852::-;2503:6;2511;2519;2527;2580:3;2568:9;2559:7;2555:23;2551:33;2548:2;;;2602:6;2594;2587:22;2548:2;2643:9;2630:23;2620:33;;2704:2;2693:9;2689:18;2676:32;2727:18;2768:2;2760:6;2757:14;2754:2;;;2789:6;2781;2774:22;2754:2;2817:50;2859:7;2850:6;2839:9;2835:22;2817:50;:::i;:::-;2807:60;;2920:2;2909:9;2905:18;2892:32;2876:48;;2949:2;2939:8;2936:16;2933:2;;;2970:6;2962;2955:22;2933:2;2998:52;3042:7;3031:8;3020:9;3016:24;2998:52;:::i;:::-;2988:62;;3103:2;3092:9;3088:18;3075:32;3059:48;;3132:2;3122:8;3119:16;3116:2;;;3153:6;3145;3138:22;3116:2;;3181:52;3225:7;3214:8;3203:9;3199:24;3181:52;:::i;:::-;3171:62;;;2538:701;;;;;;;:::o;3244:258::-;3286:3;3324:5;3318:12;3351:6;3346:3;3339:19;3367:63;3423:6;3416:4;3411:3;3407:14;3400:4;3393:5;3389:16;3367:63;:::i;:::-;3484:2;3463:15;-1:-1:-1;;3459:29:1;3450:39;;;;3491:4;3446:50;;3294:208;-1:-1:-1;;3294:208:1:o;3507:664::-;3734:3;3772:6;3766:13;3788:53;3834:6;3829:3;3822:4;3814:6;3810:17;3788:53;:::i;:::-;3904:13;;3863:16;;;;3926:57;3904:13;3863:16;3960:4;3948:17;;3926:57;:::i;:::-;4050:13;;4005:20;;;4072:57;4050:13;4005:20;4106:4;4094:17;;4072:57;:::i;:::-;4145:20;;3742:429;-1:-1:-1;;;;;3742:429:1:o;4176:1103::-;4304:3;4333;4368:6;4362:13;4398:3;4420:1;4448:9;4444:2;4440:18;4430:28;;4508:2;4497:9;4493:18;4530;4520:2;;4574:4;4566:6;4562:17;4552:27;;4520:2;4600;4648;4640:6;4637:14;4617:18;4614:38;4611:2;;;-1:-1:-1;;;4675:33:1;;4731:4;4728:1;4721:15;4761:4;4682:3;4749:17;4611:2;4792:18;4819:104;;;;4937:1;4932:322;;;;4785:469;;4819:104;-1:-1:-1;;4852:24:1;;4840:37;;4897:16;;;;-1:-1:-1;4819:104:1;;4932:322;11455:4;11474:17;;;11524:4;11508:21;;5027:3;5043:165;5057:6;5054:1;5051:13;5043:165;;;5135:14;;5122:11;;;5115:35;5178:16;;;;5072:10;;5043:165;;;5047:3;;5237:6;5232:3;5228:16;5221:23;;4785:469;-1:-1:-1;5270:3:1;;4312:967;-1:-1:-1;;;;;;;;4312:967:1:o;5492:1572::-;5684:4;5713:2;5753;5742:9;5738:18;5783:2;5772:9;5765:21;5806:6;5841;5835:13;5872:6;5864;5857:22;5898:2;5888:12;;5931:2;5920:9;5916:18;5909:25;;5993:2;5983:6;5980:1;5976:14;5965:9;5961:30;5957:39;6031:2;6023:6;6019:15;6052:4;6065:970;6079:6;6076:1;6073:13;6065:970;;;6172:2;6168:7;6156:9;6148:6;6144:22;6140:36;6135:3;6128:49;6206:6;6200:13;6236:4;6279:2;6273:9;6310:2;6302:6;6295:18;6340:48;6384:2;6376:6;6372:15;6358:12;6340:48;:::i;:::-;6326:62;;;6437:2;6433;6429:11;6423:18;6490:6;6482;6478:19;6473:2;6465:6;6461:15;6454:44;6525:41;6559:6;6543:14;6525:41;:::i;:::-;6511:55;;;6615:2;6611;6607:11;6601:18;6668:6;6660;6656:19;6651:2;6643:6;6639:15;6632:44;6703:41;6737:6;6721:14;6703:41;:::i;:::-;6767:4;6814:11;;;6808:18;6791:15;;;6784:43;6850:4;6911:11;;;6905:18;6898:26;6891:34;6874:15;;;;6867:59;;;;-1:-1:-1;;7013:12:1;;;;6978:15;;;;6101:1;6094:9;6065:970;;;-1:-1:-1;7052:6:1;;5693:1371;-1:-1:-1;;;;;;;;5693:1371:1:o;7261:383::-;7458:2;7447:9;7440:21;7421:4;7484:45;7525:2;7514:9;7510:18;7502:6;7484:45;:::i;:::-;7577:9;7569:6;7565:22;7560:2;7549:9;7545:18;7538:50;7605:33;7631:6;7623;7605:33;:::i;:::-;7597:41;7430:214;-1:-1:-1;;;;;7430:214:1:o;7649:546::-;7894:2;7883:9;7876:21;7857:4;7920:45;7961:2;7950:9;7946:18;7938:6;7920:45;:::i;:::-;8013:9;8005:6;8001:22;7996:2;7985:9;7981:18;7974:50;8047:33;8073:6;8065;8047:33;:::i;:::-;8033:47;;8128:9;8120:6;8116:22;8111:2;8100:9;8096:18;8089:50;8156:33;8182:6;8174;8156:33;:::i;:::-;8148:41;7866:329;-1:-1:-1;;;;;;7866:329:1:o;11540:125::-;11580:4;11608:1;11605;11602:8;11599:2;;;11613:18;;:::i;:::-;-1:-1:-1;11650:9:1;;11589:76::o;11670:258::-;11742:1;11752:113;11766:6;11763:1;11760:13;11752:113;;;11842:11;;;11836:18;11823:11;;;11816:39;11788:2;11781:10;11752:113;;;11883:6;11880:1;11877:13;11874:2;;;11918:1;11909:6;11904:3;11900:16;11893:27;11874:2;;11723:205;;;:::o;11933:380::-;12012:1;12008:12;;;;12055;;;12076:2;;12130:4;12122:6;12118:17;12108:27;;12076:2;12183;12175:6;12172:14;12152:18;12149:38;12146:2;;;12229:10;12224:3;12220:20;12217:1;12210:31;12264:4;12261:1;12254:15;12292:4;12289:1;12282:15;12146:2;;11988:325;;;:::o;12318:135::-;12357:3;-1:-1:-1;;12378:17:1;;12375:2;;;12398:18;;:::i;:::-;-1:-1:-1;12445:1:1;12434:13;;12365:88::o;12458:127::-;12519:10;12514:3;12510:20;12507:1;12500:31;12550:4;12547:1;12540:15;12574:4;12571:1;12564:15;12590:127;12651:10;12646:3;12642:20;12639:1;12632:31;12682:4;12679:1;12672:15;12706:4;12703:1;12696:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    3417
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA3EB443 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCA3EB443 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0xD373F8D4 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xDD4159C0 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xE7942734 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x137EDD98 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1D823D32 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x59F78468 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x62D73EB8 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x79AE584D EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB7 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH2 0x396 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BC DUP5 DUP5 DUP5 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0x1EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1097 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 PUSH1 0x5 SWAP1 SWAP3 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP3 PUSH2 0x2D7 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x2F0 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x30C SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD PUSH2 0x342 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF SWAP1 PUSH2 0x388 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x400 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6A7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x4D3 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FF SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x521 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x565 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x591 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x5F7 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x623 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x670 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x645 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x670 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x653 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4A0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220696420697320616C72656164792072656769737465726564212E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x762 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x785 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0xB52 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A SWAP1 PUSH2 0x7E9 SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 DUP5 DUP5 DUP5 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP2 LT PUSH2 0x956 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP2 MLOAD PUSH2 0x9DB SWAP3 PUSH1 0x2 ADD SWAP2 ADD PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xA25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x3AB2B731BC97 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0xB10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0xB2E DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP4 DUP5 MSTORE POP POP PUSH1 0x4 PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB5E SWAP1 PUSH2 0x1067 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB80 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xBC6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB99 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xBC6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xBC6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xBC6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBAB JUMP JUMPDEST POP PUSH2 0xBD2 SWAP3 SWAP2 POP PUSH2 0xBD6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBFB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC16 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3E PUSH2 0x10D3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC56 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC86 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC9D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xCA9 DUP8 DUP4 DUP9 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCBE JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xCCA DUP8 DUP4 DUP9 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCDF JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xCEC DUP7 DUP3 DUP8 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD0A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD21 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xD2D DUP8 DUP4 DUP9 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xCDF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5A JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD76 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD94 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDA0 DUP9 DUP4 DUP10 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDB5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDC1 DUP9 DUP4 DUP10 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xDE3 DUP8 DUP3 DUP9 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE07 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0xE2D DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x1037 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xE41 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x1037 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0xE54 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1037 JUMP JUMPDEST ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xE7A JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0xE9A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xEAE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xEBF JUMPI PUSH2 0xEEB JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xEE3 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0xECA JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0xF45 DUP3 DUP8 ADD DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP11 DUP8 ADD MSTORE PUSH2 0xF5D DUP3 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP POP DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0xF75 DUP3 DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF1F JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFC2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xDEF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xFD4 DUP2 DUP6 PUSH2 0xDEF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFF0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xDEF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1002 DUP2 DUP7 PUSH2 0xDEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1016 DUP2 DUP6 PUSH2 0xDEF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1032 PUSH2 0x10BD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1052 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x103A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x107B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x109C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B6 PUSH2 0x10BD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDE 0xC6 PUSH3 0xF7D151 POP PUSH11 0x905252F6593DAC3F184677 BLOCKHASH EXP 0xB3 PUSH3 0xFD3991 0x2F 0x4D PUSH17 0xFEEE64736F6C6343000804003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA3EB443"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA3EB443"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD373F8D4"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD4159C0"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE7942734"
    },
    "82": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "86": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC6F9468"
    },
    "93": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "97": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x137EDD98"
    },
    "109": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1D823D32"
    },
    "120": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "124": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59F78468"
    },
    "131": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "135": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62D73EB8"
    },
    "142": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "146": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79AE584D"
    },
    "153": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1"
    },
    "157": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        3417
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "166": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "170": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "177": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DIV",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "180": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "AND",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "JUMP",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "184": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "186": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "187": {
      "op": "SWAP1"
    },
    "188": {
      "op": "ISZERO"
    },
    "189": {
      "op": "ISZERO"
    },
    "190": {
      "op": "DUP2"
    },
    "191": {
      "op": "MSTORE"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "194": {
      "op": "ADD"
    },
    "195": {
      "offset": [
        80,
        110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "198": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SUB",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        80,
        110
      ],
      "op": "RETURN",
      "path": "0"
    },
    "204": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "208": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "211": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "212": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "214": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC72"
    },
    "217": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "218": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "222": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "223": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "224": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "STOP",
      "path": "0"
    },
    "225": {
      "fn": "Voting.endElection",
      "offset": [
        1161,
        1236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": "Voting.endElection",
      "offset": [
        1161,
        1236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "229": {
      "fn": "Voting.endElection",
      "offset": [
        1161,
        1236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x396"
    },
    "232": {
      "fn": "Voting.endElection",
      "jump": "i",
      "offset": [
        1161,
        1236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "233": {
      "fn": "Voting.startElection",
      "offset": [
        1075,
        1151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": "Voting.startElection",
      "offset": [
        1075,
        1151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "237": {
      "fn": "Voting.startElection",
      "offset": [
        1075,
        1151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BC"
    },
    "240": {
      "fn": "Voting.startElection",
      "jump": "i",
      "offset": [
        1075,
        1151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "241": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "242": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "245": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "248": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "249": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "251": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC72"
    },
    "254": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "259": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "263": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "264": {
      "op": "SWAP1"
    },
    "265": {
      "op": "DUP2"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "273": {
      "op": "JUMP"
    },
    "274": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "275": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "278": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x421"
    },
    "281": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3255,
        3415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "286": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "289": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "290": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "291": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF9"
    },
    "294": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3255,
        3415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "295": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "296": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "299": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135"
    },
    "302": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "303": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "305": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF6"
    },
    "308": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1281,
        1652
      ],
      "op": "JUMP",
      "path": "0"
    },
    "309": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "310": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B0"
    },
    "313": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1281,
        1652
      ],
      "op": "JUMP",
      "path": "0"
    },
    "314": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "315": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "318": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "321": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "322": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "324": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD61"
    },
    "327": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2431,
        3245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F6"
    },
    "332": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2431,
        3245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "333": {
      "offset": [
        765,
        800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "337": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "340": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "341": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "343": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD49"
    },
    "346": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        765,
        800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "350": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "352": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "353": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "355": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "356": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "357": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "358": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "360": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "361": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "362": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "363": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "364": {
      "fn": "Voting.vote",
      "offset": [
        765,
        800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "offset": [
        47,
        74
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "368": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "369": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "372": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "op": "SUB"
    },
    "381": {
      "offset": [
        47,
        74
      ],
      "op": "AND",
      "path": "0"
    },
    "382": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "DUP2",
      "path": "0"
    },
    "383": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "387": {
      "fn": "Voting.vote",
      "offset": [
        47,
        74
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "SWAP2"
    },
    "398": {
      "op": "AND"
    },
    "399": {
      "op": "DUP2"
    },
    "400": {
      "op": "MSTORE"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "403": {
      "op": "ADD"
    },
    "404": {
      "offset": [
        47,
        74
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "407": {
      "op": "JUMP"
    },
    "408": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "411": {
      "fn": "Voting.createCandidate",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "421": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "422": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "423": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "426": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "427": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "429": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "430": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "431": {
      "fn": "Voting.createCandidate",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Voting.createCandidate",
      "offset": [
        1831,
        1842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "434": {
      "fn": "Voting.createCandidate",
      "offset": [
        1846,
        1890
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BC"
    },
    "437": {
      "fn": "Voting.createCandidate",
      "offset": [
        1860,
        1865
      ],
      "op": "DUP5",
      "path": "0"
    },
    "438": {
      "fn": "Voting.createCandidate",
      "offset": [
        1867,
        1880
      ],
      "op": "DUP5",
      "path": "0"
    },
    "439": {
      "fn": "Voting.createCandidate",
      "offset": [
        1882,
        1889
      ],
      "op": "DUP5",
      "path": "0"
    },
    "440": {
      "fn": "Voting.createCandidate",
      "offset": [
        1846,
        1859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "443": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1846,
        1890
      ],
      "op": "JUMP",
      "path": "0"
    },
    "444": {
      "fn": "Voting.createCandidate",
      "offset": [
        1846,
        1890
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "445": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "447": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "DUP2",
      "path": "0"
    },
    "448": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "DUP2",
      "path": "0"
    },
    "449": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "450": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "452": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "454": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "455": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "457": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "458": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "459": {
      "fn": "Voting.createCandidate",
      "offset": [
        1920,
        1934
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "460": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "462": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "464": {
      "fn": "Voting.createCandidate",
      "offset": [
        1831,
        1890
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "465": {
      "fn": "Voting.createCandidate",
      "offset": [
        1831,
        1890
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1919
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "468": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "DUP2",
      "path": "0"
    },
    "469": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "LT",
      "path": "0"
    },
    "470": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "473": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "474": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "484": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "485": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "487": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "489": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "490": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "492": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "494": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "495": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "498": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "499": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "DUP3",
      "path": "0"
    },
    "500": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "501": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "503": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "505": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "506": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "508": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "510": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "511": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "512": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "MUL",
      "path": "0"
    },
    "513": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1935
      ],
      "op": "ADD",
      "path": "0"
    },
    "514": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1942
      ],
      "op": "ADD",
      "path": "0"
    },
    "515": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "516": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "518": {
      "fn": "Voting.createCandidate",
      "offset": [
        1909,
        1942
      ],
      "op": "AND",
      "path": "0"
    },
    "519": {
      "branch": 18,
      "fn": "Voting.createCandidate",
      "offset": [
        1908,
        1942
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "520": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x263"
    },
    "523": {
      "branch": 18,
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "524": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "526": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "535": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "538": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "540": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "DUP3",
      "path": "0"
    },
    "541": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "ADD",
      "path": "0"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "547": {
      "op": "DUP3"
    },
    "548": {
      "op": "ADD"
    },
    "549": {
      "op": "MSTORE"
    },
    "550": {
      "op": "PUSH32",
      "value": "0x43616E64696461746520616C726561647920696E2062616C6C6F74206C697374"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "585": {
      "op": "DUP3"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "op": "MSTORE"
    },
    "588": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "596": {
      "op": "DUP3"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "op": "MSTORE"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "603": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "605": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "606": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "607": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "608": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "SUB",
      "path": "0"
    },
    "609": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "610": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "REVERT",
      "path": "0"
    },
    "611": {
      "fn": "Voting.createCandidate",
      "offset": [
        1900,
        1981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "612": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "614": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "615": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "616": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "618": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "619": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "ADD",
      "path": "0"
    },
    "620": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "621": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "622": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP6",
      "path": "0"
    },
    "623": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "624": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "625": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "627": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP1",
      "path": "0"
    },
    "628": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "629": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "ADD",
      "path": "0"
    },
    "630": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP7",
      "path": "0"
    },
    "631": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "632": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "634": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "635": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "ADD",
      "path": "0"
    },
    "636": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP5",
      "path": "0"
    },
    "637": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "638": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "641": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "643": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "644": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "ADD",
      "path": "0"
    },
    "645": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "646": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "647": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "648": {
      "fn": "Voting.createCandidate",
      "offset": [
        2051,
        2055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "650": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "652": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP4",
      "path": "0"
    },
    "653": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "ADD",
      "path": "0"
    },
    "654": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "655": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "656": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "657": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "659": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP1",
      "path": "0"
    },
    "660": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "661": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "662": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP3",
      "path": "0"
    },
    "663": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "664": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "665": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "666": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "667": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "668": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "669": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "671": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP1",
      "path": "0"
    },
    "672": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "673": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "674": {
      "fn": "Voting.createCandidate",
      "offset": [
        2007,
        2056
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "675": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "677": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "678": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "679": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MUL",
      "path": "0"
    },
    "680": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "713": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "714": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "715": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D7"
    },
    "718": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "719": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP5",
      "path": "0"
    },
    "720": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "721": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "722": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "723": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "726": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1991,
        2057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "727": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "728": {
      "op": "POP"
    },
    "729": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "731": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP3",
      "path": "0"
    },
    "732": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "733": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "734": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "735": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP1",
      "path": "0"
    },
    "736": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "737": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F0"
    },
    "740": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "741": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "743": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP6",
      "path": "0"
    },
    "744": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "745": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "746": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "747": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "748": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "751": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1991,
        2057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "752": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "753": {
      "op": "POP"
    },
    "754": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "756": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP3",
      "path": "0"
    },
    "757": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "758": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "759": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP1",
      "path": "0"
    },
    "760": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "761": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30C"
    },
    "764": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "765": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "767": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP5",
      "path": "0"
    },
    "768": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "769": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "770": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "772": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "773": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "774": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "775": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "776": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "779": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        1991,
        2057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "780": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "781": {
      "op": "POP"
    },
    "782": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "784": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP3",
      "path": "0"
    },
    "785": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "786": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "787": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "789": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP3",
      "path": "0"
    },
    "790": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "793": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "794": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "795": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "796": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "798": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "799": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "800": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "801": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "802": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "804": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "806": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ADD",
      "path": "0"
    },
    "807": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "DUP1",
      "path": "0"
    },
    "808": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "809": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "811": {
      "op": "NOT"
    },
    "812": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "AND",
      "path": "0"
    },
    "813": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "814": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "815": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "816": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "817": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "818": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "819": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "OR",
      "path": "0"
    },
    "820": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "Voting.createCandidate",
      "offset": [
        1991,
        2057
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "822": {
      "fn": "Voting.createCandidate",
      "offset": [
        2084,
        2101
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "823": {
      "fn": "Voting.createCandidate",
      "offset": [
        2084,
        2105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "826": {
      "fn": "Voting.createCandidate",
      "offset": [
        2084,
        2105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "SWAP1"
    },
    "830": {
      "fn": "Voting.createCandidate",
      "offset": [
        2084,
        2105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1020"
    },
    "833": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2084,
        2105
      ],
      "op": "JUMP",
      "path": "0"
    },
    "834": {
      "fn": "Voting.createCandidate",
      "offset": [
        2084,
        2105
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "837": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "838": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "839": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "840": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "842": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "844": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "845": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "847": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "848": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "849": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "850": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2081
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "851": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2105
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "852": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "853": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2105
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "854": {
      "fn": "Voting.createCandidate",
      "offset": [
        2067,
        2105
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "855": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 3
    },
    "856": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC44D2BC043B37CCE4868439A5953CE1F7BAC3AAAF08FE783B0412B6A77FDEDEF"
    },
    "889": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x388"
    },
    "893": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "Voting.createCandidate",
      "offset": [
        2135,
        2140
      ],
      "op": "DUP7",
      "path": "0"
    },
    "895": {
      "fn": "Voting.createCandidate",
      "offset": [
        2135,
        2140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "896": {
      "fn": "Voting.createCandidate",
      "offset": [
        2142,
        2155
      ],
      "op": "DUP7",
      "path": "0"
    },
    "897": {
      "fn": "Voting.createCandidate",
      "offset": [
        2142,
        2155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "898": {
      "fn": "Voting.createCandidate",
      "offset": [
        2157,
        2164
      ],
      "op": "DUP7",
      "path": "0"
    },
    "899": {
      "fn": "Voting.createCandidate",
      "offset": [
        2157,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "900": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFDD"
    },
    "903": {
      "fn": "Voting.createCandidate",
      "jump": "i",
      "offset": [
        2120,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "904": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "905": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "907": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "908": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "909": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "910": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "SUB",
      "path": "0"
    },
    "911": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "Voting.createCandidate",
      "offset": [
        2120,
        2165
      ],
      "op": "LOG1",
      "path": "0"
    },
    "913": {
      "offset": [
        190,
        191
      ],
      "op": "POP",
      "path": "0"
    },
    "914": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "POP",
      "path": "0"
    },
    "915": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "POP",
      "path": "0"
    },
    "916": {
      "fn": "Voting.createCandidate",
      "offset": [
        1706,
        2172
      ],
      "op": "POP",
      "path": "0"
    },
    "917": {
      "fn": "Voting.createCandidate",
      "jump": "o",
      "offset": [
        1706,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "918": {
      "fn": "Voting.endElection",
      "offset": [
        1161,
        1236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "919": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "921": {
      "fn": "Voting.endElection",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "SUB"
    },
    "930": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "931": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "932": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "933": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AD"
    },
    "936": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "937": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "939": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "940": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "941": {
      "fn": "Voting.endElection",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "942": {
      "fn": "Voting.endElection",
      "offset": [
        1224,
        1229
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "944": {
      "fn": "Voting.endElection",
      "offset": [
        1211,
        1229
      ],
      "op": "DUP1",
      "path": "0"
    },
    "945": {
      "fn": "Voting.endElection",
      "offset": [
        1211,
        1229
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "946": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "op": "NOT"
    },
    "952": {
      "fn": "Voting.endElection",
      "offset": [
        1211,
        1229
      ],
      "op": "AND",
      "path": "0"
    },
    "953": {
      "fn": "Voting.endElection",
      "offset": [
        1211,
        1229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "954": {
      "fn": "Voting.endElection",
      "offset": [
        1211,
        1229
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "955": {
      "fn": "Voting.endElection",
      "jump": "o",
      "offset": [
        1161,
        1236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "956": {
      "fn": "Voting.startElection",
      "offset": [
        1075,
        1151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "957": {
      "offset": [
        167,
        179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "959": {
      "fn": "Voting.startElection",
      "offset": [
        167,
        179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "op": "SUB"
    },
    "968": {
      "offset": [
        167,
        179
      ],
      "op": "AND",
      "path": "0"
    },
    "969": {
      "offset": [
        153,
        163
      ],
      "op": "CALLER",
      "path": "0"
    },
    "970": {
      "offset": [
        153,
        179
      ],
      "op": "EQ",
      "path": "0"
    },
    "971": {
      "offset": [
        145,
        180
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "974": {
      "offset": [
        145,
        180
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "975": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "977": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "REVERT",
      "path": "0"
    },
    "979": {
      "fn": "Voting.startElection",
      "offset": [
        145,
        180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1137
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "982": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1144
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "NOT"
    },
    "990": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1144
      ],
      "op": "AND",
      "path": "0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1144
      ],
      "op": "OR",
      "path": "0"
    },
    "997": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "998": {
      "fn": "Voting.startElection",
      "offset": [
        1127,
        1144
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "999": {
      "fn": "Voting.startElection",
      "jump": "o",
      "offset": [
        1075,
        1151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1000": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1001": {
      "fn": "Voting._generateHash",
      "offset": [
        2299,
        2303
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1003": {
      "fn": "Voting._generateHash",
      "offset": [
        2314,
        2323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1004": {
      "fn": "Voting._generateHash",
      "offset": [
        2358,
        2363
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1005": {
      "fn": "Voting._generateHash",
      "offset": [
        2365,
        2378
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1006": {
      "fn": "Voting._generateHash",
      "offset": [
        2380,
        2387
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1007": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1009": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1010": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1012": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "ADD",
      "path": "0"
    },
    "1013": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x400"
    },
    "1016": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1017": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1018": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1019": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1B"
    },
    "1023": {
      "fn": "Voting._generateHash",
      "jump": "i",
      "offset": [
        2341,
        2388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1024": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1025": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1027": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1028": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1029": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1030": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1031": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SUB",
      "path": "0"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1034": {
      "op": "NOT"
    },
    "1035": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "ADD",
      "path": "0"
    },
    "1036": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1037": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1038": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1039": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1040": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1041": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1042": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1043": {
      "fn": "Voting._generateHash",
      "offset": [
        2341,
        2388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1045": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1046": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1047": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "ADD",
      "path": "0"
    },
    "1048": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1049": {
      "fn": "Voting._generateHash",
      "offset": [
        2331,
        2389
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1050": {
      "fn": "Voting._generateHash",
      "offset": [
        2182,
        2421
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1051": {
      "op": "POP"
    },
    "1052": {
      "op": "POP"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "fn": "Voting._generateHash",
      "jump": "o",
      "offset": [
        2182,
        2421
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1057": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1058": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3343,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1060": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3343,
        3353
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1061": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3305,
        3323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1063": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3305,
        3323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3343,
        3353
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1070": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3343,
        3353
      ],
      "op": "DIV",
      "path": "0"
    },
    "1071": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3343,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1073": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3343,
        3353
      ],
      "op": "AND",
      "path": "0"
    },
    "1074": {
      "branch": 19,
      "fn": "Voting.getElectionResult",
      "offset": [
        3342,
        3353
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1075": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47E"
    },
    "1078": {
      "branch": 19,
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1079": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1081": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1090": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1093": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1095": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1096": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "ADD",
      "path": "0"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH32",
      "value": "0x456C656374696F6E20686173206E6F7420656E6465642E000000000000000000"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1140": {
      "op": "DUP3"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "1149": {
      "op": "JUMP"
    },
    "1150": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3334,
        3381
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1151": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3398,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x3"
    },
    "1153": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1154": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1155": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1156": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1158": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1159": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1161": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1164": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1165": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1166": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1167": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1168": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1170": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1171": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1172": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1173": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1174": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1178": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1180": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1183": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1185": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1186": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1187": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "LT",
      "path": "0"
    },
    "1188": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1189": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1192": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1193": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1194": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1195": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1198": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1199": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1201": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1203": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1204": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1205": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1207": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1208": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1209": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1211": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1212": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1213": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1215": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1216": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1218": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1219": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1220": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1221": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1223": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1224": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1225": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1226": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1227": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D3"
    },
    "1230": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1231": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1234": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1235": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1236": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1237": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1239": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1240": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1242": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1243": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1244": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DIV",
      "path": "0"
    },
    "1245": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1246": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1248": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1249": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1251": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1252": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1254": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1255": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1257": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1258": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1259": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1260": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1261": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1262": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1263": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1265": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1267": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1268": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1269": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1270": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1271": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FF"
    },
    "1274": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1275": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1278": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1279": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1280": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1281": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1282": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "1285": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1286": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1287": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1289": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "LT",
      "path": "0"
    },
    "1290": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x521"
    },
    "1293": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1294": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1297": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1298": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1299": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1300": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DIV",
      "path": "0"
    },
    "1301": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1302": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1303": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1304": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1305": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1307": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1308": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1309": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "1312": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1313": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1314": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1315": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1316": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1317": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1320": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1321": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1323": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1325": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1326": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1328": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1329": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1330": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1331": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1332": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1335": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1336": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1337": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1339": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1340": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1341": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1342": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "GT",
      "path": "0"
    },
    "1343": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52F"
    },
    "1346": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1347": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1348": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1349": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SUB",
      "path": "0"
    },
    "1350": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1352": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "AND",
      "path": "0"
    },
    "1353": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1354": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1355": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1356": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1357": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1358": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1359": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1360": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1361": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1362": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1363": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1364": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1366": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1367": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1369": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1370": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1371": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1372": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1373": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x565"
    },
    "1376": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1377": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1380": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1381": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1382": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1383": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1385": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1386": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1388": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1389": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1390": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DIV",
      "path": "0"
    },
    "1391": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1392": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1394": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1395": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1397": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1398": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1399": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1400": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1401": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1403": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1404": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1405": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1406": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1407": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1408": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1409": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1410": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1411": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1413": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1414": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1415": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1416": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1417": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x591"
    },
    "1420": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1421": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1424": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1425": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1426": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1427": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1428": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DE"
    },
    "1431": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1432": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1433": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1435": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "LT",
      "path": "0"
    },
    "1436": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B3"
    },
    "1439": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1440": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1443": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1444": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1445": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1446": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DIV",
      "path": "0"
    },
    "1447": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1448": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1449": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1450": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1451": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1453": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1454": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1455": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DE"
    },
    "1458": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1459": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1460": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1461": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1462": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1463": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1464": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1466": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1467": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1469": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1471": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1472": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1473": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1474": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1476": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1477": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1478": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1479": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1481": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1482": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1483": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1485": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1486": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1487": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1488": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "GT",
      "path": "0"
    },
    "1489": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C1"
    },
    "1492": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1493": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1494": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1495": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SUB",
      "path": "0"
    },
    "1496": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1498": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "AND",
      "path": "0"
    },
    "1499": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1500": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1501": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1502": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1503": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1504": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1505": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1506": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1507": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1508": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1509": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1510": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1512": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1513": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1515": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1516": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1517": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1518": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1519": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F7"
    },
    "1522": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1523": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1526": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1527": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1528": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1529": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1531": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1532": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1534": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1535": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1536": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DIV",
      "path": "0"
    },
    "1537": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1538": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1540": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1541": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1543": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1544": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1545": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1546": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1547": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1549": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1550": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1551": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1552": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1553": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1554": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1555": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1556": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1557": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1559": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1561": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1562": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1563": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x623"
    },
    "1566": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1067"
    },
    "1570": {
      "fn": "Voting.getElectionResult",
      "jump": "i",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1571": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1572": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1573": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1574": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x670"
    },
    "1577": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1578": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1579": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1581": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "LT",
      "path": "0"
    },
    "1582": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x645"
    },
    "1585": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1586": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1589": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1590": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1591": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1592": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DIV",
      "path": "0"
    },
    "1593": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MUL",
      "path": "0"
    },
    "1594": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1595": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1596": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1597": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1599": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1600": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1601": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x670"
    },
    "1604": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1605": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1606": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1607": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1608": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1609": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1610": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1612": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1613": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1615": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1617": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1618": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1619": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1620": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1621": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1622": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1623": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1624": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1625": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1627": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1628": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1629": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1631": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1632": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1633": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1634": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "GT",
      "path": "0"
    },
    "1635": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x653"
    },
    "1638": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1639": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1640": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1641": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SUB",
      "path": "0"
    },
    "1642": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1644": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "AND",
      "path": "0"
    },
    "1645": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1646": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1647": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1648": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "op": "POP"
    },
    "1652": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1653": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1654": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "POP"
    },
    "1657": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1659": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1660": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1661": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1662": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1664": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1665": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1666": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1667": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1668": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1669": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1670": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1671": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1673": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1674": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1675": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1676": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1677": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1679": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "AND",
      "path": "0"
    },
    "1680": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1681": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1682": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1684": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1685": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1686": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1687": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1688": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1689": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1690": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1691": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1693": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1694": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1695": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1696": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1697": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1698": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "ADD",
      "path": "0"
    },
    "1699": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A0"
    },
    "1702": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1703": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1705": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1706": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1707": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1708": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1709": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3391,
        3408
      ],
      "op": "POP",
      "path": "0"
    },
    "1710": {
      "fn": "Voting.getElectionResult",
      "offset": [
        3255,
        3415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1711": {
      "fn": "Voting.getElectionResult",
      "jump": "o",
      "offset": [
        3255,
        3415
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1712": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1713": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x0"
    },
    "1715": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1716": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1717": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1718": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1720": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1722": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1723": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1725": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1726": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1403
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1727": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1729": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "ADD",
      "path": "0"
    },
    "1730": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1734": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "DIV",
      "path": "0"
    },
    "1736": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1738": {
      "fn": "Voting.createVoter",
      "offset": [
        1388,
        1410
      ],
      "op": "AND",
      "path": "0"
    },
    "1739": {
      "branch": 20,
      "fn": "Voting.createVoter",
      "offset": [
        1387,
        1410
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1740": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x717"
    },
    "1743": {
      "branch": 20,
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1744": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1746": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1755": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1758": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1760": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1761": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "ADD",
      "path": "0"
    },
    "1762": {
      "op": "DUP2"
    },
    "1763": {
      "op": "SWAP1"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1767": {
      "op": "DUP3"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "MSTORE"
    },
    "1770": {
      "op": "PUSH32",
      "value": "0x566F74657220696420697320616C72656164792072656769737465726564212E"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1805": {
      "op": "DUP3"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "op": "MSTORE"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "1814": {
      "op": "JUMP"
    },
    "1815": {
      "fn": "Voting.createVoter",
      "offset": [
        1379,
        1447
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1816": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x40"
    },
    "1818": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1819": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1820": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1822": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1823": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1824": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1825": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1826": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1827": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1828": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1829": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1831": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1832": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1833": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1834": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1835": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1836": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1837": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1839": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1840": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1841": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1842": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1843": {
      "fn": "Voting.createVoter",
      "offset": [
        1578,
        1582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1845": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1847": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1848": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1849": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1850": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1852": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1854": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1855": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1856": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1859": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1860": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1861": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1862": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1864": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1865": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1866": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1867": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1868": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1869": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1870": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1871": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1872": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1873": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1874": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1875": {
      "fn": "Voting.createVoter",
      "offset": [
        1545,
        1589
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1876": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1878": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x762"
    },
    "1881": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1882": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1883": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1542
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1884": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1885": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1886": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "1889": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1527,
        1589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1890": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1894": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1895": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1896": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1897": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1898": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1900": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1901": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1902": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1903": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1905": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1906": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1907": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1908": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1909": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1910": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "1913": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1914": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1916": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1917": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1918": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1919": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1920": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1921": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "1924": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1527,
        1589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1925": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1929": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1930": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1931": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1932": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1934": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1935": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1936": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1937": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1938": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1939": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1941": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1942": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1943": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ADD",
      "path": "0"
    },
    "1944": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1945": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1946": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1947": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1950": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "MUL",
      "path": "0"
    },
    "1951": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1954": {
      "op": "NOT"
    },
    "1955": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1956": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1957": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1958": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1959": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1960": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1961": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "AND",
      "path": "0"
    },
    "1962": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1965": {
      "op": "NOT"
    },
    "1966": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1967": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1968": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "AND",
      "path": "0"
    },
    "1969": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1970": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1971": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1972": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "OR",
      "path": "0"
    },
    "1973": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "OR",
      "path": "0"
    },
    "1974": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1975": {
      "fn": "Voting.createVoter",
      "offset": [
        1527,
        1589
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1976": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "1978": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1979": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x31C5BC59EAC45FF3B495B7287B81A7453896FBAD73147C719A98AD77C5809F9A"
    },
    "2012": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2013": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E9"
    },
    "2016": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2017": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1629
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2018": {
      "fn": "Voting.createVoter",
      "offset": [
        1624,
        1629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2019": {
      "fn": "Voting.createVoter",
      "offset": [
        1631,
        1644
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2020": {
      "fn": "Voting.createVoter",
      "offset": [
        1631,
        1644
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2021": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAF"
    },
    "2024": {
      "fn": "Voting.createVoter",
      "jump": "i",
      "offset": [
        1613,
        1645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2025": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2026": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2028": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2029": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2030": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2031": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "SUB",
      "path": "0"
    },
    "2032": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2033": {
      "fn": "Voting.createVoter",
      "offset": [
        1613,
        1645
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2034": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "POP",
      "path": "0"
    },
    "2035": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "POP",
      "path": "0"
    },
    "2036": {
      "fn": "Voting.createVoter",
      "offset": [
        1281,
        1652
      ],
      "op": "POP",
      "path": "0"
    },
    "2037": {
      "fn": "Voting.createVoter",
      "jump": "o",
      "offset": [
        1281,
        1652
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2038": {
      "fn": "Voting.vote",
      "offset": [
        2431,
        3245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2039": {
      "fn": "Voting.vote",
      "offset": [
        2559,
        2569
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "2041": {
      "fn": "Voting.vote",
      "offset": [
        2559,
        2569
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2046": {
      "op": "SHL"
    },
    "2047": {
      "fn": "Voting.vote",
      "offset": [
        2559,
        2569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2048": {
      "fn": "Voting.vote",
      "offset": [
        2559,
        2569
      ],
      "op": "DIV",
      "path": "0"
    },
    "2049": {
      "fn": "Voting.vote",
      "offset": [
        2559,
        2569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2051": {
      "branch": 21,
      "fn": "Voting.vote",
      "offset": [
        2559,
        2569
      ],
      "op": "AND",
      "path": "0"
    },
    "2052": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84F"
    },
    "2055": {
      "branch": 21,
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2056": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2058": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2067": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2070": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2072": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2073": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "ADD",
      "path": "0"
    },
    "2074": {
      "op": "MSTORE"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2079": {
      "op": "DUP3"
    },
    "2080": {
      "op": "ADD"
    },
    "2081": {
      "op": "MSTORE"
    },
    "2082": {
      "op": "PUSH32",
      "value": "0x536F7272792E2054686520656C656374696F6E2068617320656E6465642E0000"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2117": {
      "op": "DUP3"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2122": {
      "op": "ADD"
    },
    "2123": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "2126": {
      "op": "JUMP"
    },
    "2127": {
      "fn": "Voting.vote",
      "offset": [
        2551,
        2604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2128": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x0"
    },
    "2130": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2131": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2132": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2133": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2135": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2137": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2138": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2140": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2141": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2642
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2142": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2144": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "ADD",
      "path": "0"
    },
    "2145": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2146": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2149": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2150": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "DIV",
      "path": "0"
    },
    "2151": {
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2153": {
      "branch": 22,
      "fn": "Voting.vote",
      "offset": [
        2622,
        2649
      ],
      "op": "AND",
      "path": "0"
    },
    "2154": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B5"
    },
    "2157": {
      "branch": 22,
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2158": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2160": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2169": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2172": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2174": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2175": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "ADD",
      "path": "0"
    },
    "2176": {
      "op": "MSTORE"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F74207265676973746572656420746F20766F74652E00"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2219": {
      "op": "DUP3"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "2228": {
      "op": "JUMP"
    },
    "2229": {
      "fn": "Voting.vote",
      "offset": [
        2614,
        2685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2230": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "2232": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2233": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2234": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2235": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2237": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2239": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2242": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2243": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2723
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2244": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2246": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2731
      ],
      "op": "ADD",
      "path": "0"
    },
    "2247": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2731
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2248": {
      "fn": "Voting.vote",
      "offset": [
        2703,
        2731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2250": {
      "branch": 23,
      "fn": "Voting.vote",
      "offset": [
        2703,
        2731
      ],
      "op": "AND",
      "path": "0"
    },
    "2251": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x916"
    },
    "2254": {
      "branch": 23,
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2255": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2257": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2266": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2269": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2271": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2272": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "ADD",
      "path": "0"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2278": {
      "op": "DUP3"
    },
    "2279": {
      "op": "ADD"
    },
    "2280": {
      "op": "MSTORE"
    },
    "2281": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F7520616C726561647920766F7465642E00000000000000"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2316": {
      "op": "DUP3"
    },
    "2317": {
      "op": "ADD"
    },
    "2318": {
      "op": "MSTORE"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "2325": {
      "op": "JUMP"
    },
    "2326": {
      "fn": "Voting.vote",
      "offset": [
        2695,
        2761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2327": {
      "fn": "Voting.vote",
      "offset": [
        2771,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2329": {
      "fn": "Voting.vote",
      "offset": [
        2785,
        2831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x923"
    },
    "2332": {
      "fn": "Voting.vote",
      "offset": [
        2799,
        2806
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2333": {
      "fn": "Voting.vote",
      "offset": [
        2808,
        2821
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2334": {
      "fn": "Voting.vote",
      "offset": [
        2823,
        2830
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2335": {
      "fn": "Voting.vote",
      "offset": [
        2785,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "2338": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2785,
        2831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2339": {
      "fn": "Voting.vote",
      "offset": [
        2785,
        2831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2340": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "2342": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2343": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2344": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2345": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2347": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2349": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2350": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2352": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2353": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2354": {
      "fn": "Voting.vote",
      "offset": [
        2860,
        2874
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2355": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2357": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2358": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2359": {
      "fn": "Voting.vote",
      "offset": [
        2771,
        2831
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2360": {
      "fn": "Voting.vote",
      "offset": [
        2771,
        2831
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2363": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2364": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "LT",
      "path": "0"
    },
    "2365": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x956"
    },
    "2368": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2369": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2376": {
      "op": "SHL"
    },
    "2377": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2379": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2380": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2382": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2384": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2385": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2387": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2389": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2390": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2391": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2393": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2394": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2395": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2396": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2398": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2399": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2400": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2401": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2403": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2405": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2407": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "MUL",
      "path": "0"
    },
    "2408": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2875
      ],
      "op": "ADD",
      "path": "0"
    },
    "2409": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2882
      ],
      "op": "ADD",
      "path": "0"
    },
    "2410": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2882
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2411": {
      "fn": "Voting.vote",
      "offset": [
        2849,
        2882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2413": {
      "branch": 24,
      "fn": "Voting.vote",
      "offset": [
        2849,
        2882
      ],
      "op": "AND",
      "path": "0"
    },
    "2414": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B9"
    },
    "2417": {
      "branch": 24,
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2418": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2420": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2427": {
      "op": "SHL"
    },
    "2428": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2429": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2432": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2434": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2435": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "ADD",
      "path": "0"
    },
    "2436": {
      "op": "MSTORE"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2441": {
      "op": "DUP3"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH32",
      "value": "0x53656C65637465642063616E646964617465206E6F7420666F756E642E000000"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2479": {
      "op": "DUP3"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2484": {
      "op": "ADD"
    },
    "2485": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "2488": {
      "op": "JUMP"
    },
    "2489": {
      "fn": "Voting.vote",
      "offset": [
        2841,
        2916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2490": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "2492": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2493": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2494": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2495": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2497": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2499": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2500": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2501": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2502": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2504": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2505": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2506": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2507": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3053
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2508": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2509": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2510": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DB"
    },
    "2513": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2514": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2516": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3066
      ],
      "op": "ADD",
      "path": "0"
    },
    "2517": {
      "fn": "Voting.vote",
      "offset": [
        3033,
        3066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2518": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "ADD",
      "path": "0"
    },
    "2519": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5E"
    },
    "2522": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3016,
        3067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2523": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2524": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2526": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2527": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2529": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2530": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2531": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "SUB",
      "path": "0"
    },
    "2532": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "SUB",
      "path": "0"
    },
    "2533": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2534": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2535": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2536": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2538": {
      "fn": "Voting.vote",
      "offset": [
        3016,
        3067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2539": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3068
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2540": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3068
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2541": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2542": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2544": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3068
      ],
      "op": "ADD",
      "path": "0"
    },
    "2545": {
      "fn": "Voting.vote",
      "offset": [
        3006,
        3068
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2546": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2548": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2550": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2552": {
      "fn": "Voting.vote",
      "offset": [
        2979,
        2985
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2553": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2554": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2555": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2557": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "ADD",
      "path": "0"
    },
    "2558": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2559": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2560": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2561": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2563": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "ADD",
      "path": "0"
    },
    "2564": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2566": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2567": {
      "fn": "Voting.vote",
      "offset": [
        2972,
        2986
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2568": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2569": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2570": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2571": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "LT",
      "path": "0"
    },
    "2572": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA25"
    },
    "2575": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2576": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2583": {
      "op": "SHL"
    },
    "2584": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2586": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2587": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2589": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2591": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2592": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2594": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2596": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2597": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2598": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2599": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2601": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2602": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2604": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2606": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2607": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2608": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2610": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "MUL",
      "path": "0"
    },
    "2611": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        2987
      ],
      "op": "ADD",
      "path": "0"
    },
    "2612": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        3000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2614": {
      "fn": "Voting.vote",
      "offset": [
        2961,
        3000
      ],
      "op": "ADD",
      "path": "0"
    },
    "2615": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2617": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2618": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2620": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "ADD",
      "path": "0"
    },
    "2621": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA46"
    },
    "2624": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2625": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2626": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5E"
    },
    "2629": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        2944,
        3001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2630": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2631": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2633": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2634": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2636": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2637": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2638": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "SUB",
      "path": "0"
    },
    "2639": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "SUB",
      "path": "0"
    },
    "2640": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2641": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2642": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2643": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2645": {
      "fn": "Voting.vote",
      "offset": [
        2944,
        3001
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2646": {
      "fn": "Voting.vote",
      "offset": [
        2934,
        3002
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2647": {
      "fn": "Voting.vote",
      "offset": [
        2934,
        3002
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2648": {
      "fn": "Voting.vote",
      "offset": [
        2934,
        3002
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2649": {
      "fn": "Voting.vote",
      "offset": [
        2934,
        3002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2651": {
      "fn": "Voting.vote",
      "offset": [
        2934,
        3002
      ],
      "op": "ADD",
      "path": "0"
    },
    "2652": {
      "fn": "Voting.vote",
      "offset": [
        2934,
        3002
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2653": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2934,
        3068
      ],
      "op": "EQ",
      "path": "0"
    },
    "2654": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADE"
    },
    "2657": {
      "branch": 25,
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2658": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2660": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2669": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2672": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2674": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2675": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "ADD",
      "path": "0"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH32",
      "value": "0x536F7272792E20596F752061726520766F74696E6720666F7220612063616E64"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH32",
      "value": "0x69646174652077686F206973206E6F7420696E20796F757220636F6E73746974"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2757": {
      "op": "DUP3"
    },
    "2758": {
      "op": "ADD"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "op": "PUSH6",
      "value": "0x3AB2B731BC97"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2769": {
      "op": "SHL"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2772": {
      "op": "DUP3"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "MSTORE"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2777": {
      "op": "ADD"
    },
    "2778": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A"
    },
    "2781": {
      "op": "JUMP"
    },
    "2782": {
      "fn": "Voting.vote",
      "offset": [
        2926,
        3143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2783": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "2785": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2786": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2787": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2788": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2790": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2792": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2793": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2795": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2796": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2797": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2798": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2800": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2801": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2802": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2803": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2804": {
      "fn": "Voting.vote",
      "offset": [
        3164,
        3178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2805": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2806": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "LT",
      "path": "0"
    },
    "2807": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB10"
    },
    "2810": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2821": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2822": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "2824": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2826": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2827": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2829": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2831": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2832": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2833": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2835": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2836": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2837": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2838": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2840": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2841": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2842": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2844": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2846": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2847": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2848": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "MUL",
      "path": "0"
    },
    "2849": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3179
      ],
      "op": "ADD",
      "path": "0"
    },
    "2850": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3189
      ],
      "op": "ADD",
      "path": "0"
    },
    "2851": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2852": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2853": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2854": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2857": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2858": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A2"
    },
    "2861": {
      "fn": "Voting.vote",
      "jump": "i",
      "offset": [
        3153,
        3191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2862": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2863": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2864": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2865": {
      "fn": "Voting.vote",
      "offset": [
        3153,
        3191
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "op": "POP"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "fn": "Voting.vote",
      "offset": [
        3233,
        3238
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2871": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2872": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2873": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2878": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2880": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2881": {
      "op": "POP"
    },
    "2882": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2884": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2885": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3222
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2886": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2888": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3230
      ],
      "op": "ADD",
      "path": "0"
    },
    "2889": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2890": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3238
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2893": {
      "op": "NOT"
    },
    "2894": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3238
      ],
      "op": "AND",
      "path": "0"
    },
    "2895": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2896": {
      "fn": "Voting.vote",
      "offset": [
        3202,
        3238
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2897": {
      "fn": "Voting.vote",
      "jump": "o",
      "offset": [
        2431,
        3245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2898": {
      "op": "JUMPDEST"
    },
    "2899": {
      "op": "DUP3"
    },
    "2900": {
      "op": "DUP1"
    },
    "2901": {
      "op": "SLOAD"
    },
    "2902": {
      "op": "PUSH2",
      "value": "0xB5E"
    },
    "2905": {
      "op": "SWAP1"
    },
    "2906": {
      "op": "PUSH2",
      "value": "0x1067"
    },
    "2909": {
      "jump": "i",
      "op": "JUMP"
    },
    "2910": {
      "op": "JUMPDEST"
    },
    "2911": {
      "op": "SWAP1"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2919": {
      "op": "KECCAK256"
    },
    "2920": {
      "op": "SWAP1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2923": {
      "op": "ADD"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2926": {
      "op": "SWAP1"
    },
    "2927": {
      "op": "DIV"
    },
    "2928": {
      "op": "DUP2"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "SWAP3"
    },
    "2931": {
      "op": "DUP3"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0xB80"
    },
    "2935": {
      "op": "JUMPI"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "DUP6"
    },
    "2939": {
      "op": "SSTORE"
    },
    "2940": {
      "op": "PUSH2",
      "value": "0xBC6"
    },
    "2943": {
      "op": "JUMP"
    },
    "2944": {
      "op": "JUMPDEST"
    },
    "2945": {
      "op": "DUP3"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2948": {
      "op": "LT"
    },
    "2949": {
      "op": "PUSH2",
      "value": "0xB99"
    },
    "2952": {
      "op": "JUMPI"
    },
    "2953": {
      "op": "DUP1"
    },
    "2954": {
      "op": "MLOAD"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2957": {
      "op": "NOT"
    },
    "2958": {
      "op": "AND"
    },
    "2959": {
      "op": "DUP4"
    },
    "2960": {
      "op": "DUP1"
    },
    "2961": {
      "op": "ADD"
    },
    "2962": {
      "op": "OR"
    },
    "2963": {
      "op": "DUP6"
    },
    "2964": {
      "op": "SSTORE"
    },
    "2965": {
      "op": "PUSH2",
      "value": "0xBC6"
    },
    "2968": {
      "op": "JUMP"
    },
    "2969": {
      "op": "JUMPDEST"
    },
    "2970": {
      "op": "DUP3"
    },
    "2971": {
      "op": "DUP1"
    },
    "2972": {
      "op": "ADD"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "op": "DUP6"
    },
    "2977": {
      "op": "SSTORE"
    },
    "2978": {
      "op": "DUP3"
    },
    "2979": {
      "op": "ISZERO"
    },
    "2980": {
      "op": "PUSH2",
      "value": "0xBC6"
    },
    "2983": {
      "op": "JUMPI"
    },
    "2984": {
      "op": "SWAP2"
    },
    "2985": {
      "op": "DUP3"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "JUMPDEST"
    },
    "2988": {
      "op": "DUP3"
    },
    "2989": {
      "op": "DUP2"
    },
    "2990": {
      "op": "GT"
    },
    "2991": {
      "op": "ISZERO"
    },
    "2992": {
      "op": "PUSH2",
      "value": "0xBC6"
    },
    "2995": {
      "op": "JUMPI"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "MLOAD"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "SSTORE"
    },
    "3000": {
      "op": "SWAP2"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3003": {
      "op": "ADD"
    },
    "3004": {
      "op": "SWAP2"
    },
    "3005": {
      "op": "SWAP1"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3008": {
      "op": "ADD"
    },
    "3009": {
      "op": "SWAP1"
    },
    "3010": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3013": {
      "op": "JUMP"
    },
    "3014": {
      "op": "JUMPDEST"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xBD2"
    },
    "3019": {
      "op": "SWAP3"
    },
    "3020": {
      "op": "SWAP2"
    },
    "3021": {
      "op": "POP"
    },
    "3022": {
      "op": "PUSH2",
      "value": "0xBD6"
    },
    "3025": {
      "jump": "i",
      "op": "JUMP"
    },
    "3026": {
      "op": "JUMPDEST"
    },
    "3027": {
      "op": "POP"
    },
    "3028": {
      "op": "SWAP1"
    },
    "3029": {
      "jump": "o",
      "op": "JUMP"
    },
    "3030": {
      "op": "JUMPDEST"
    },
    "3031": {
      "op": "JUMPDEST"
    },
    "3032": {
      "op": "DUP1"
    },
    "3033": {
      "op": "DUP3"
    },
    "3034": {
      "op": "GT"
    },
    "3035": {
      "op": "ISZERO"
    },
    "3036": {
      "op": "PUSH2",
      "value": "0xBD2"
    },
    "3039": {
      "op": "JUMPI"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3042": {
      "op": "DUP2"
    },
    "3043": {
      "op": "SSTORE"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "ADD"
    },
    "3047": {
      "op": "PUSH2",
      "value": "0xBD7"
    },
    "3050": {
      "op": "JUMP"
    },
    "3051": {
      "op": "JUMPDEST"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3054": {
      "op": "DUP3"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3057": {
      "op": "DUP4"
    },
    "3058": {
      "op": "ADD"
    },
    "3059": {
      "op": "SLT"
    },
    "3060": {
      "op": "PUSH2",
      "value": "0xBFB"
    },
    "3063": {
      "op": "JUMPI"
    },
    "3064": {
      "op": "DUP1"
    },
    "3065": {
      "op": "DUP2"
    },
    "3066": {
      "op": "REVERT"
    },
    "3067": {
      "op": "JUMPDEST"
    },
    "3068": {
      "op": "DUP2"
    },
    "3069": {
      "op": "CALLDATALOAD"
    },
    "3070": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3079": {
      "op": "DUP1"
    },
    "3080": {
      "op": "DUP3"
    },
    "3081": {
      "op": "GT"
    },
    "3082": {
      "op": "ISZERO"
    },
    "3083": {
      "op": "PUSH2",
      "value": "0xC16"
    },
    "3086": {
      "op": "JUMPI"
    },
    "3087": {
      "op": "PUSH2",
      "value": "0xC16"
    },
    "3090": {
      "op": "PUSH2",
      "value": "0x10D3"
    },
    "3093": {
      "jump": "i",
      "op": "JUMP"
    },
    "3094": {
      "op": "JUMPDEST"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3097": {
      "op": "MLOAD"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3100": {
      "op": "DUP4"
    },
    "3101": {
      "op": "ADD"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3104": {
      "op": "NOT"
    },
    "3105": {
      "op": "SWAP1"
    },
    "3106": {
      "op": "DUP2"
    },
    "3107": {
      "op": "AND"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3110": {
      "op": "ADD"
    },
    "3111": {
      "op": "AND"
    },
    "3112": {
      "op": "DUP2"
    },
    "3113": {
      "op": "ADD"
    },
    "3114": {
      "op": "SWAP1"
    },
    "3115": {
      "op": "DUP3"
    },
    "3116": {
      "op": "DUP3"
    },
    "3117": {
      "op": "GT"
    },
    "3118": {
      "op": "DUP2"
    },
    "3119": {
      "op": "DUP4"
    },
    "3120": {
      "op": "LT"
    },
    "3121": {
      "op": "OR"
    },
    "3122": {
      "op": "ISZERO"
    },
    "3123": {
      "op": "PUSH2",
      "value": "0xC3E"
    },
    "3126": {
      "op": "JUMPI"
    },
    "3127": {
      "op": "PUSH2",
      "value": "0xC3E"
    },
    "3130": {
      "op": "PUSH2",
      "value": "0x10D3"
    },
    "3133": {
      "jump": "i",
      "op": "JUMP"
    },
    "3134": {
      "op": "JUMPDEST"
    },
    "3135": {
      "op": "DUP2"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3138": {
      "op": "MSTORE"
    },
    "3139": {
      "op": "DUP4"
    },
    "3140": {
      "op": "DUP2"
    },
    "3141": {
      "op": "MSTORE"
    },
    "3142": {
      "op": "DUP7"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3145": {
      "op": "DUP6"
    },
    "3146": {
      "op": "DUP9"
    },
    "3147": {
      "op": "ADD"
    },
    "3148": {
      "op": "ADD"
    },
    "3149": {
      "op": "GT"
    },
    "3150": {
      "op": "ISZERO"
    },
    "3151": {
      "op": "PUSH2",
      "value": "0xC56"
    },
    "3154": {
      "op": "JUMPI"
    },
    "3155": {
      "op": "DUP5"
    },
    "3156": {
      "op": "DUP6"
    },
    "3157": {
      "op": "REVERT"
    },
    "3158": {
      "op": "JUMPDEST"
    },
    "3159": {
      "op": "DUP4"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3162": {
      "op": "DUP8"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3166": {
      "op": "DUP4"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "CALLDATACOPY"
    },
    "3169": {
      "op": "SWAP3"
    },
    "3170": {
      "op": "DUP4"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "op": "SWAP4"
    },
    "3176": {
      "op": "SWAP1"
    },
    "3177": {
      "op": "SWAP4"
    },
    "3178": {
      "op": "MSTORE"
    },
    "3179": {
      "op": "POP"
    },
    "3180": {
      "op": "SWAP4"
    },
    "3181": {
      "op": "SWAP3"
    },
    "3182": {
      "op": "POP"
    },
    "3183": {
      "op": "POP"
    },
    "3184": {
      "op": "POP"
    },
    "3185": {
      "jump": "o",
      "op": "JUMP"
    },
    "3186": {
      "op": "JUMPDEST"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3189": {
      "op": "DUP1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3194": {
      "op": "DUP5"
    },
    "3195": {
      "op": "DUP7"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "op": "SLT"
    },
    "3198": {
      "op": "ISZERO"
    },
    "3199": {
      "op": "PUSH2",
      "value": "0xC86"
    },
    "3202": {
      "op": "JUMPI"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "DUP4"
    },
    "3205": {
      "op": "REVERT"
    },
    "3206": {
      "op": "JUMPDEST"
    },
    "3207": {
      "op": "DUP4"
    },
    "3208": {
      "op": "CALLDATALOAD"
    },
    "3209": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3218": {
      "op": "DUP1"
    },
    "3219": {
      "op": "DUP3"
    },
    "3220": {
      "op": "GT"
    },
    "3221": {
      "op": "ISZERO"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xC9D"
    },
    "3225": {
      "op": "JUMPI"
    },
    "3226": {
      "op": "DUP5"
    },
    "3227": {
      "op": "DUP6"
    },
    "3228": {
      "op": "REVERT"
    },
    "3229": {
      "op": "JUMPDEST"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0xCA9"
    },
    "3233": {
      "op": "DUP8"
    },
    "3234": {
      "op": "DUP4"
    },
    "3235": {
      "op": "DUP9"
    },
    "3236": {
      "op": "ADD"
    },
    "3237": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3240": {
      "jump": "i",
      "op": "JUMP"
    },
    "3241": {
      "op": "JUMPDEST"
    },
    "3242": {
      "op": "SWAP5"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3246": {
      "op": "DUP7"
    },
    "3247": {
      "op": "ADD"
    },
    "3248": {
      "op": "CALLDATALOAD"
    },
    "3249": {
      "op": "SWAP2"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "op": "DUP1"
    },
    "3252": {
      "op": "DUP3"
    },
    "3253": {
      "op": "GT"
    },
    "3254": {
      "op": "ISZERO"
    },
    "3255": {
      "op": "PUSH2",
      "value": "0xCBE"
    },
    "3258": {
      "op": "JUMPI"
    },
    "3259": {
      "op": "DUP4"
    },
    "3260": {
      "op": "DUP5"
    },
    "3261": {
      "op": "REVERT"
    },
    "3262": {
      "op": "JUMPDEST"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0xCCA"
    },
    "3266": {
      "op": "DUP8"
    },
    "3267": {
      "op": "DUP4"
    },
    "3268": {
      "op": "DUP9"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3273": {
      "jump": "i",
      "op": "JUMP"
    },
    "3274": {
      "op": "JUMPDEST"
    },
    "3275": {
      "op": "SWAP4"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3279": {
      "op": "DUP7"
    },
    "3280": {
      "op": "ADD"
    },
    "3281": {
      "op": "CALLDATALOAD"
    },
    "3282": {
      "op": "SWAP2"
    },
    "3283": {
      "op": "POP"
    },
    "3284": {
      "op": "DUP1"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "GT"
    },
    "3287": {
      "op": "ISZERO"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xCDF"
    },
    "3291": {
      "op": "JUMPI"
    },
    "3292": {
      "op": "DUP3"
    },
    "3293": {
      "op": "DUP4"
    },
    "3294": {
      "op": "REVERT"
    },
    "3295": {
      "op": "JUMPDEST"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "PUSH2",
      "value": "0xCEC"
    },
    "3300": {
      "op": "DUP7"
    },
    "3301": {
      "op": "DUP3"
    },
    "3302": {
      "op": "DUP8"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3307": {
      "jump": "i",
      "op": "JUMP"
    },
    "3308": {
      "op": "JUMPDEST"
    },
    "3309": {
      "op": "SWAP2"
    },
    "3310": {
      "op": "POP"
    },
    "3311": {
      "op": "POP"
    },
    "3312": {
      "op": "SWAP3"
    },
    "3313": {
      "op": "POP"
    },
    "3314": {
      "op": "SWAP3"
    },
    "3315": {
      "op": "POP"
    },
    "3316": {
      "op": "SWAP3"
    },
    "3317": {
      "jump": "o",
      "op": "JUMP"
    },
    "3318": {
      "op": "JUMPDEST"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3321": {
      "op": "DUP1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3326": {
      "op": "DUP5"
    },
    "3327": {
      "op": "DUP7"
    },
    "3328": {
      "op": "SUB"
    },
    "3329": {
      "op": "SLT"
    },
    "3330": {
      "op": "ISZERO"
    },
    "3331": {
      "op": "PUSH2",
      "value": "0xD0A"
    },
    "3334": {
      "op": "JUMPI"
    },
    "3335": {
      "op": "DUP3"
    },
    "3336": {
      "op": "DUP4"
    },
    "3337": {
      "op": "REVERT"
    },
    "3338": {
      "op": "JUMPDEST"
    },
    "3339": {
      "op": "DUP4"
    },
    "3340": {
      "op": "CALLDATALOAD"
    },
    "3341": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3350": {
      "op": "DUP1"
    },
    "3351": {
      "op": "DUP3"
    },
    "3352": {
      "op": "GT"
    },
    "3353": {
      "op": "ISZERO"
    },
    "3354": {
      "op": "PUSH2",
      "value": "0xD21"
    },
    "3357": {
      "op": "JUMPI"
    },
    "3358": {
      "op": "DUP5"
    },
    "3359": {
      "op": "DUP6"
    },
    "3360": {
      "op": "REVERT"
    },
    "3361": {
      "op": "JUMPDEST"
    },
    "3362": {
      "op": "PUSH2",
      "value": "0xD2D"
    },
    "3365": {
      "op": "DUP8"
    },
    "3366": {
      "op": "DUP4"
    },
    "3367": {
      "op": "DUP9"
    },
    "3368": {
      "op": "ADD"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3372": {
      "jump": "i",
      "op": "JUMP"
    },
    "3373": {
      "op": "JUMPDEST"
    },
    "3374": {
      "op": "SWAP5"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3378": {
      "op": "DUP7"
    },
    "3379": {
      "op": "ADD"
    },
    "3380": {
      "op": "CALLDATALOAD"
    },
    "3381": {
      "op": "SWAP4"
    },
    "3382": {
      "op": "POP"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3385": {
      "op": "DUP7"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "CALLDATALOAD"
    },
    "3388": {
      "op": "SWAP2"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "op": "DUP1"
    },
    "3391": {
      "op": "DUP3"
    },
    "3392": {
      "op": "GT"
    },
    "3393": {
      "op": "ISZERO"
    },
    "3394": {
      "op": "PUSH2",
      "value": "0xCDF"
    },
    "3397": {
      "op": "JUMPI"
    },
    "3398": {
      "op": "DUP3"
    },
    "3399": {
      "op": "DUP4"
    },
    "3400": {
      "op": "REVERT"
    },
    "3401": {
      "op": "JUMPDEST"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3406": {
      "op": "DUP3"
    },
    "3407": {
      "op": "DUP5"
    },
    "3408": {
      "op": "SUB"
    },
    "3409": {
      "op": "SLT"
    },
    "3410": {
      "op": "ISZERO"
    },
    "3411": {
      "op": "PUSH2",
      "value": "0xD5A"
    },
    "3414": {
      "op": "JUMPI"
    },
    "3415": {
      "op": "DUP1"
    },
    "3416": {
      "op": "DUP2"
    },
    "3417": {
      "op": "REVERT"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "CALLDATALOAD"
    },
    "3421": {
      "op": "SWAP2"
    },
    "3422": {
      "op": "SWAP1"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "jump": "o",
      "op": "JUMP"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3428": {
      "op": "DUP1"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3431": {
      "op": "DUP1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3434": {
      "op": "DUP6"
    },
    "3435": {
      "op": "DUP8"
    },
    "3436": {
      "op": "SUB"
    },
    "3437": {
      "op": "SLT"
    },
    "3438": {
      "op": "ISZERO"
    },
    "3439": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3442": {
      "op": "JUMPI"
    },
    "3443": {
      "op": "DUP1"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "REVERT"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "DUP5"
    },
    "3448": {
      "op": "CALLDATALOAD"
    },
    "3449": {
      "op": "SWAP4"
    },
    "3450": {
      "op": "POP"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3453": {
      "op": "DUP6"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "op": "CALLDATALOAD"
    },
    "3456": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3465": {
      "op": "DUP1"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "GT"
    },
    "3468": {
      "op": "ISZERO"
    },
    "3469": {
      "op": "PUSH2",
      "value": "0xD94"
    },
    "3472": {
      "op": "JUMPI"
    },
    "3473": {
      "op": "DUP3"
    },
    "3474": {
      "op": "DUP4"
    },
    "3475": {
      "op": "REVERT"
    },
    "3476": {
      "op": "JUMPDEST"
    },
    "3477": {
      "op": "PUSH2",
      "value": "0xDA0"
    },
    "3480": {
      "op": "DUP9"
    },
    "3481": {
      "op": "DUP4"
    },
    "3482": {
      "op": "DUP10"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3487": {
      "jump": "i",
      "op": "JUMP"
    },
    "3488": {
      "op": "JUMPDEST"
    },
    "3489": {
      "op": "SWAP5"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3493": {
      "op": "DUP8"
    },
    "3494": {
      "op": "ADD"
    },
    "3495": {
      "op": "CALLDATALOAD"
    },
    "3496": {
      "op": "SWAP2"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "op": "DUP1"
    },
    "3499": {
      "op": "DUP3"
    },
    "3500": {
      "op": "GT"
    },
    "3501": {
      "op": "ISZERO"
    },
    "3502": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3505": {
      "op": "JUMPI"
    },
    "3506": {
      "op": "DUP3"
    },
    "3507": {
      "op": "DUP4"
    },
    "3508": {
      "op": "REVERT"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "3513": {
      "op": "DUP9"
    },
    "3514": {
      "op": "DUP4"
    },
    "3515": {
      "op": "DUP10"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3520": {
      "jump": "i",
      "op": "JUMP"
    },
    "3521": {
      "op": "JUMPDEST"
    },
    "3522": {
      "op": "SWAP4"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3526": {
      "op": "DUP8"
    },
    "3527": {
      "op": "ADD"
    },
    "3528": {
      "op": "CALLDATALOAD"
    },
    "3529": {
      "op": "SWAP2"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "DUP1"
    },
    "3532": {
      "op": "DUP3"
    },
    "3533": {
      "op": "GT"
    },
    "3534": {
      "op": "ISZERO"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xDD6"
    },
    "3538": {
      "op": "JUMPI"
    },
    "3539": {
      "op": "DUP3"
    },
    "3540": {
      "op": "DUP4"
    },
    "3541": {
      "op": "REVERT"
    },
    "3542": {
      "op": "JUMPDEST"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "PUSH2",
      "value": "0xDE3"
    },
    "3547": {
      "op": "DUP8"
    },
    "3548": {
      "op": "DUP3"
    },
    "3549": {
      "op": "DUP9"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3554": {
      "jump": "i",
      "op": "JUMP"
    },
    "3555": {
      "op": "JUMPDEST"
    },
    "3556": {
      "op": "SWAP2"
    },
    "3557": {
      "op": "POP"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "op": "SWAP3"
    },
    "3560": {
      "op": "SWAP6"
    },
    "3561": {
      "op": "SWAP2"
    },
    "3562": {
      "op": "SWAP5"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "op": "SWAP3"
    },
    "3565": {
      "op": "POP"
    },
    "3566": {
      "jump": "o",
      "op": "JUMP"
    },
    "3567": {
      "op": "JUMPDEST"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3570": {
      "op": "DUP2"
    },
    "3571": {
      "op": "MLOAD"
    },
    "3572": {
      "op": "DUP1"
    },
    "3573": {
      "op": "DUP5"
    },
    "3574": {
      "op": "MSTORE"
    },
    "3575": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3578": {
      "op": "DUP2"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3581": {
      "op": "DUP7"
    },
    "3582": {
      "op": "ADD"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3585": {
      "op": "DUP7"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "3590": {
      "jump": "i",
      "op": "JUMP"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3597": {
      "op": "NOT"
    },
    "3598": {
      "op": "AND"
    },
    "3599": {
      "op": "SWAP3"
    },
    "3600": {
      "op": "SWAP1"
    },
    "3601": {
      "op": "SWAP3"
    },
    "3602": {
      "op": "ADD"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3605": {
      "op": "ADD"
    },
    "3606": {
      "op": "SWAP3"
    },
    "3607": {
      "op": "SWAP2"
    },
    "3608": {
      "op": "POP"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "jump": "o",
      "op": "JUMP"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3614": {
      "op": "DUP5"
    },
    "3615": {
      "op": "MLOAD"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xE2D"
    },
    "3619": {
      "op": "DUP2"
    },
    "3620": {
      "op": "DUP5"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3623": {
      "op": "DUP10"
    },
    "3624": {
      "op": "ADD"
    },
    "3625": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "3628": {
      "jump": "i",
      "op": "JUMP"
    },
    "3629": {
      "op": "JUMPDEST"
    },
    "3630": {
      "op": "DUP5"
    },
    "3631": {
      "op": "MLOAD"
    },
    "3632": {
      "op": "SWAP1"
    },
    "3633": {
      "op": "DUP4"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "SWAP1"
    },
    "3636": {
      "op": "PUSH2",
      "value": "0xE41"
    },
    "3639": {
      "op": "DUP2"
    },
    "3640": {
      "op": "DUP4"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3643": {
      "op": "DUP10"
    },
    "3644": {
      "op": "ADD"
    },
    "3645": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "3648": {
      "jump": "i",
      "op": "JUMP"
    },
    "3649": {
      "op": "JUMPDEST"
    },
    "3650": {
      "op": "DUP5"
    },
    "3651": {
      "op": "MLOAD"
    },
    "3652": {
      "op": "SWAP2"
    },
    "3653": {
      "op": "ADD"
    },
    "3654": {
      "op": "SWAP1"
    },
    "3655": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "3658": {
      "op": "DUP2"
    },
    "3659": {
      "op": "DUP4"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3662": {
      "op": "DUP9"
    },
    "3663": {
      "op": "ADD"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "3667": {
      "jump": "i",
      "op": "JUMP"
    },
    "3668": {
      "op": "JUMPDEST"
    },
    "3669": {
      "op": "ADD"
    },
    "3670": {
      "op": "SWAP6"
    },
    "3671": {
      "op": "SWAP5"
    },
    "3672": {
      "op": "POP"
    },
    "3673": {
      "op": "POP"
    },
    "3674": {
      "op": "POP"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "POP"
    },
    "3677": {
      "jump": "o",
      "op": "JUMP"
    },
    "3678": {
      "op": "JUMPDEST"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3681": {
      "op": "DUP1"
    },
    "3682": {
      "op": "DUP4"
    },
    "3683": {
      "op": "SLOAD"
    },
    "3684": {
      "op": "DUP3"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "DUP3"
    },
    "3688": {
      "op": "DUP2"
    },
    "3689": {
      "op": "SHR"
    },
    "3690": {
      "op": "SWAP2"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "op": "DUP1"
    },
    "3693": {
      "op": "DUP4"
    },
    "3694": {
      "op": "AND"
    },
    "3695": {
      "op": "DUP1"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE7A"
    },
    "3699": {
      "op": "JUMPI"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3702": {
      "op": "DUP4"
    },
    "3703": {
      "op": "AND"
    },
    "3704": {
      "op": "SWAP3"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "JUMPDEST"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3709": {
      "op": "DUP1"
    },
    "3710": {
      "op": "DUP5"
    },
    "3711": {
      "op": "LT"
    },
    "3712": {
      "op": "DUP3"
    },
    "3713": {
      "op": "EQ"
    },
    "3714": {
      "op": "ISZERO"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0xE9A"
    },
    "3718": {
      "op": "JUMPI"
    },
    "3719": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3726": {
      "op": "SHL"
    },
    "3727": {
      "op": "DUP8"
    },
    "3728": {
      "op": "MSTORE"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3736": {
      "op": "DUP8"
    },
    "3737": {
      "op": "REVERT"
    },
    "3738": {
      "op": "JUMPDEST"
    },
    "3739": {
      "op": "DUP2"
    },
    "3740": {
      "op": "DUP1"
    },
    "3741": {
      "op": "ISZERO"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xEAE"
    },
    "3745": {
      "op": "JUMPI"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3748": {
      "op": "DUP2"
    },
    "3749": {
      "op": "EQ"
    },
    "3750": {
      "op": "PUSH2",
      "value": "0xEBF"
    },
    "3753": {
      "op": "JUMPI"
    },
    "3754": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3757": {
      "op": "JUMP"
    },
    "3758": {
      "op": "JUMPDEST"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3761": {
      "op": "NOT"
    },
    "3762": {
      "op": "DUP7"
    },
    "3763": {
      "op": "AND"
    },
    "3764": {
      "op": "DUP10"
    },
    "3765": {
      "op": "MSTORE"
    },
    "3766": {
      "op": "DUP5"
    },
    "3767": {
      "op": "DUP10"
    },
    "3768": {
      "op": "ADD"
    },
    "3769": {
      "op": "SWAP7"
    },
    "3770": {
      "op": "POP"
    },
    "3771": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3774": {
      "op": "JUMP"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "DUP11"
    },
    "3779": {
      "op": "DUP2"
    },
    "3780": {
      "op": "MSTORE"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3783": {
      "op": "SWAP1"
    },
    "3784": {
      "op": "KECCAK256"
    },
    "3785": {
      "op": "DUP9"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "DUP7"
    },
    "3788": {
      "op": "DUP2"
    },
    "3789": {
      "op": "LT"
    },
    "3790": {
      "op": "ISZERO"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xEE3"
    },
    "3794": {
      "op": "JUMPI"
    },
    "3795": {
      "op": "DUP2"
    },
    "3796": {
      "op": "SLOAD"
    },
    "3797": {
      "op": "DUP12"
    },
    "3798": {
      "op": "DUP3"
    },
    "3799": {
      "op": "ADD"
    },
    "3800": {
      "op": "MSTORE"
    },
    "3801": {
      "op": "SWAP1"
    },
    "3802": {
      "op": "DUP6"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "SWAP1"
    },
    "3805": {
      "op": "DUP4"
    },
    "3806": {
      "op": "ADD"
    },
    "3807": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3810": {
      "op": "JUMP"
    },
    "3811": {
      "op": "JUMPDEST"
    },
    "3812": {
      "op": "POP"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "op": "DUP5"
    },
    "3815": {
      "op": "DUP10"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "SWAP7"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "op": "JUMPDEST"
    },
    "3820": {
      "op": "POP"
    },
    "3821": {
      "op": "SWAP5"
    },
    "3822": {
      "op": "SWAP9"
    },
    "3823": {
      "op": "SWAP8"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "op": "POP"
    },
    "3826": {
      "op": "POP"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "op": "POP"
    },
    "3830": {
      "op": "POP"
    },
    "3831": {
      "op": "POP"
    },
    "3832": {
      "jump": "o",
      "op": "JUMP"
    },
    "3833": {
      "op": "JUMPDEST"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3838": {
      "op": "DUP1"
    },
    "3839": {
      "op": "DUP4"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "DUP2"
    },
    "3842": {
      "op": "DUP5"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "op": "DUP1"
    },
    "3845": {
      "op": "DUP6"
    },
    "3846": {
      "op": "MLOAD"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "DUP4"
    },
    "3849": {
      "op": "MSTORE"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3852": {
      "op": "SWAP3"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "DUP7"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "SWAP2"
    },
    "3858": {
      "op": "POP"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "DUP2"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3863": {
      "op": "SHL"
    },
    "3864": {
      "op": "DUP8"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "ADD"
    },
    "3867": {
      "op": "DUP5"
    },
    "3868": {
      "op": "DUP9"
    },
    "3869": {
      "op": "ADD"
    },
    "3870": {
      "op": "DUP7"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "DUP4"
    },
    "3873": {
      "op": "DUP2"
    },
    "3874": {
      "op": "LT"
    },
    "3875": {
      "op": "ISZERO"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3879": {
      "op": "JUMPI"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3882": {
      "op": "NOT"
    },
    "3883": {
      "op": "DUP10"
    },
    "3884": {
      "op": "DUP5"
    },
    "3885": {
      "op": "SUB"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "DUP6"
    },
    "3888": {
      "op": "MSTORE"
    },
    "3889": {
      "op": "DUP2"
    },
    "3890": {
      "op": "MLOAD"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3893": {
      "op": "DUP2"
    },
    "3894": {
      "op": "MLOAD"
    },
    "3895": {
      "op": "DUP2"
    },
    "3896": {
      "op": "DUP7"
    },
    "3897": {
      "op": "MSTORE"
    },
    "3898": {
      "op": "PUSH2",
      "value": "0xF45"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "DUP8"
    },
    "3903": {
      "op": "ADD"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3908": {
      "jump": "i",
      "op": "JUMP"
    },
    "3909": {
      "op": "JUMPDEST"
    },
    "3910": {
      "op": "SWAP2"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "op": "DUP9"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "MLOAD"
    },
    "3917": {
      "op": "DUP6"
    },
    "3918": {
      "op": "DUP3"
    },
    "3919": {
      "op": "SUB"
    },
    "3920": {
      "op": "DUP11"
    },
    "3921": {
      "op": "DUP8"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3927": {
      "op": "DUP3"
    },
    "3928": {
      "op": "DUP3"
    },
    "3929": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3932": {
      "jump": "i",
      "op": "JUMP"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "SWAP2"
    },
    "3935": {
      "op": "POP"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "op": "DUP8"
    },
    "3938": {
      "op": "DUP3"
    },
    "3939": {
      "op": "ADD"
    },
    "3940": {
      "op": "MLOAD"
    },
    "3941": {
      "op": "DUP6"
    },
    "3942": {
      "op": "DUP3"
    },
    "3943": {
      "op": "SUB"
    },
    "3944": {
      "op": "DUP10"
    },
    "3945": {
      "op": "DUP8"
    },
    "3946": {
      "op": "ADD"
    },
    "3947": {
      "op": "MSTORE"
    },
    "3948": {
      "op": "PUSH2",
      "value": "0xF75"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3956": {
      "jump": "i",
      "op": "JUMP"
    },
    "3957": {
      "op": "JUMPDEST"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3960": {
      "op": "DUP5"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "MLOAD"
    },
    "3964": {
      "op": "SWAP1"
    },
    "3965": {
      "op": "DUP9"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3970": {
      "op": "SWAP4"
    },
    "3971": {
      "op": "DUP5"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "op": "MLOAD"
    },
    "3974": {
      "op": "ISZERO"
    },
    "3975": {
      "op": "ISZERO"
    },
    "3976": {
      "op": "SWAP4"
    },
    "3977": {
      "op": "SWAP1"
    },
    "3978": {
      "op": "SWAP7"
    },
    "3979": {
      "op": "ADD"
    },
    "3980": {
      "op": "SWAP3"
    },
    "3981": {
      "op": "SWAP1"
    },
    "3982": {
      "op": "SWAP3"
    },
    "3983": {
      "op": "MSTORE"
    },
    "3984": {
      "op": "POP"
    },
    "3985": {
      "op": "POP"
    },
    "3986": {
      "op": "SWAP4"
    },
    "3987": {
      "op": "DUP7"
    },
    "3988": {
      "op": "ADD"
    },
    "3989": {
      "op": "SWAP4"
    },
    "3990": {
      "op": "SWAP1"
    },
    "3991": {
      "op": "DUP7"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "SWAP1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "4000": {
      "op": "JUMP"
    },
    "4001": {
      "op": "JUMPDEST"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "op": "SWAP1"
    },
    "4004": {
      "op": "SWAP9"
    },
    "4005": {
      "op": "SWAP8"
    },
    "4006": {
      "op": "POP"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "op": "POP"
    },
    "4009": {
      "op": "POP"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "jump": "o",
      "op": "JUMP"
    },
    "4015": {
      "op": "JUMPDEST"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4018": {
      "op": "DUP2"
    },
    "4019": {
      "op": "MSTORE"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4022": {
      "op": "PUSH2",
      "value": "0xFC2"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4027": {
      "op": "DUP4"
    },
    "4028": {
      "op": "ADD"
    },
    "4029": {
      "op": "DUP6"
    },
    "4030": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "4033": {
      "jump": "i",
      "op": "JUMP"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "DUP3"
    },
    "4036": {
      "op": "DUP2"
    },
    "4037": {
      "op": "SUB"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4040": {
      "op": "DUP5"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "op": "MSTORE"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4046": {
      "op": "DUP2"
    },
    "4047": {
      "op": "DUP6"
    },
    "4048": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "4051": {
      "jump": "i",
      "op": "JUMP"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "SWAP6"
    },
    "4054": {
      "op": "SWAP5"
    },
    "4055": {
      "op": "POP"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "op": "POP"
    },
    "4060": {
      "jump": "o",
      "op": "JUMP"
    },
    "4061": {
      "op": "JUMPDEST"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4064": {
      "op": "DUP2"
    },
    "4065": {
      "op": "MSTORE"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4073": {
      "op": "DUP4"
    },
    "4074": {
      "op": "ADD"
    },
    "4075": {
      "op": "DUP7"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "4079": {
      "jump": "i",
      "op": "JUMP"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "DUP2"
    },
    "4083": {
      "op": "SUB"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4086": {
      "op": "DUP5"
    },
    "4087": {
      "op": "ADD"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x1002"
    },
    "4092": {
      "op": "DUP2"
    },
    "4093": {
      "op": "DUP7"
    },
    "4094": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "4097": {
      "jump": "i",
      "op": "JUMP"
    },
    "4098": {
      "op": "JUMPDEST"
    },
    "4099": {
      "op": "SWAP1"
    },
    "4100": {
      "op": "POP"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "DUP2"
    },
    "4103": {
      "op": "SUB"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4106": {
      "op": "DUP5"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0x1016"
    },
    "4112": {
      "op": "DUP2"
    },
    "4113": {
      "op": "DUP6"
    },
    "4114": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "4117": {
      "jump": "i",
      "op": "JUMP"
    },
    "4118": {
      "op": "JUMPDEST"
    },
    "4119": {
      "op": "SWAP7"
    },
    "4120": {
      "op": "SWAP6"
    },
    "4121": {
      "op": "POP"
    },
    "4122": {
      "op": "POP"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "POP"
    },
    "4125": {
      "op": "POP"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "jump": "o",
      "op": "JUMP"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4131": {
      "op": "DUP3"
    },
    "4132": {
      "op": "DUP3"
    },
    "4133": {
      "op": "LT"
    },
    "4134": {
      "op": "ISZERO"
    },
    "4135": {
      "op": "PUSH2",
      "value": "0x1032"
    },
    "4138": {
      "op": "JUMPI"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0x1032"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4145": {
      "jump": "i",
      "op": "JUMP"
    },
    "4146": {
      "op": "JUMPDEST"
    },
    "4147": {
      "op": "POP"
    },
    "4148": {
      "op": "SUB"
    },
    "4149": {
      "op": "SWAP1"
    },
    "4150": {
      "jump": "o",
      "op": "JUMP"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "DUP4"
    },
    "4156": {
      "op": "DUP2"
    },
    "4157": {
      "op": "LT"
    },
    "4158": {
      "op": "ISZERO"
    },
    "4159": {
      "op": "PUSH2",
      "value": "0x1052"
    },
    "4162": {
      "op": "JUMPI"
    },
    "4163": {
      "op": "DUP2"
    },
    "4164": {
      "op": "DUP2"
    },
    "4165": {
      "op": "ADD"
    },
    "4166": {
      "op": "MLOAD"
    },
    "4167": {
      "op": "DUP4"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4173": {
      "op": "ADD"
    },
    "4174": {
      "op": "PUSH2",
      "value": "0x103A"
    },
    "4177": {
      "op": "JUMP"
    },
    "4178": {
      "op": "JUMPDEST"
    },
    "4179": {
      "op": "DUP4"
    },
    "4180": {
      "op": "DUP2"
    },
    "4181": {
      "op": "GT"
    },
    "4182": {
      "op": "ISZERO"
    },
    "4183": {
      "op": "PUSH2",
      "value": "0x1061"
    },
    "4186": {
      "op": "JUMPI"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4189": {
      "op": "DUP5"
    },
    "4190": {
      "op": "DUP5"
    },
    "4191": {
      "op": "ADD"
    },
    "4192": {
      "op": "MSTORE"
    },
    "4193": {
      "op": "JUMPDEST"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "op": "POP"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "jump": "o",
      "op": "JUMP"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "DUP2"
    },
    "4203": {
      "op": "DUP2"
    },
    "4204": {
      "op": "SHR"
    },
    "4205": {
      "op": "SWAP1"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "AND"
    },
    "4208": {
      "op": "DUP1"
    },
    "4209": {
      "op": "PUSH2",
      "value": "0x107B"
    },
    "4212": {
      "op": "JUMPI"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "AND"
    },
    "4217": {
      "op": "SWAP2"
    },
    "4218": {
      "op": "POP"
    },
    "4219": {
      "op": "JUMPDEST"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "LT"
    },
    "4224": {
      "op": "DUP2"
    },
    "4225": {
      "op": "EQ"
    },
    "4226": {
      "op": "ISZERO"
    },
    "4227": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4230": {
      "op": "JUMPI"
    },
    "4231": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4238": {
      "op": "SHL"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4241": {
      "op": "MSTORE"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4251": {
      "op": "REVERT"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "op": "SWAP2"
    },
    "4255": {
      "op": "SWAP1"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "jump": "o",
      "op": "JUMP"
    },
    "4258": {
      "op": "JUMPDEST"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4263": {
      "op": "NOT"
    },
    "4264": {
      "op": "DUP3"
    },
    "4265": {
      "op": "EQ"
    },
    "4266": {
      "op": "ISZERO"
    },
    "4267": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4270": {
      "op": "JUMPI"
    },
    "4271": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4274": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4277": {
      "jump": "i",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "SWAP1"
    },
    "4284": {
      "jump": "o",
      "op": "JUMP"
    },
    "4285": {
      "op": "JUMPDEST"
    },
    "4286": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "MSTORE"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "REVERT"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4315": {
      "op": "SHL"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4318": {
      "op": "MSTORE"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4323": {
      "op": "MSTORE"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4328": {
      "op": "REVERT"
    }
  },
  "sha1": "22f50304e995fb579f7e27132fc6a3a37713d875",
  "source": "pragma solidity ^0.8.1;\n\ncontract Voting {\n    address public adminAddress;\n    bool public electionOn = false;\n    modifier onlyOwner {\n        require(msg.sender == adminAddress);\n        _;\n    }\n \n    event voterAdded(string name, string constituency);\n    event candidateAdded(string name, string constituency, string symbol);\n    // event voteEvent();\n    struct Voter {\n        // name, id, constituency, canVote \n        string name;\n        uint idNo;\n        string constituency;\n        bool canVote;\n        bool exists;\n    }\n    struct Candidate {\n        // name, constituency, noofvotes, address\n        string name;\n        string constituency;\n        string symbol;\n        uint noOfVotes;\n        bool exists;\n    }\n    \n    Voter[] voters;\n    mapping(uint => uint) public ballot; //hash to candidate mapping\n    Candidate[] candidates;\n    mapping(uint => Voter) votersList; // voters id to voter mapping\n    \n    constructor(){\n        adminAddress = msg.sender;\n        candidates.push(Candidate(\"nonce\", \"nonce\", \"nonce\", 0,  false));\n    }\n    \n    function startElection() public onlyOwner {\n        electionOn = true;\n    }\n    \n    function endElection() public onlyOwner {\n        electionOn = false;\n    }\n    // add right to vote facility later\n    function createVoter(string memory _name, uint _id, string memory _constituency) public {\n        require(!votersList[_id].exists, \"Voter id is already registered!.\");\n        // voters.push(Voter(_name, _id, _constituency, true, true));\n        votersList[_id] = Voter(_name, _id, _constituency, true, true);\n        \n        emit voterAdded(_name, _constituency);\n    } \n    // handle duplicate candidate problem later\n    function createCandidate(string memory _name, string memory _constituency, string memory _symbol) onlyOwner public {\n        uint candId =  _generateHash(_name, _constituency, _symbol);\n        require(!candidates[ballot[candId]].exists, \"Candidate already in ballot list!.\");\n        candidates.push(Candidate(_name, _constituency, _symbol, 0, true));\n        ballot[candId] = candidates.length - 1;\n        emit candidateAdded(_name, _constituency, _symbol);\n    }\n    \n    function _generateHash(string memory _name, string memory _constituency, string memory _symbol) public pure returns (uint){\n        uint hash = uint(keccak256(abi.encodePacked(_name, _constituency, _symbol)));   \n        return hash;\n    }\n    \n    function vote(uint _voterId, string memory _voteTo, string memory _constituency, string memory _symbol) public{\n        require(electionOn, \"Sorry. The election has ended.\");\n        require(votersList[_voterId].exists, \"You are not registered to vote.\");\n        require(votersList[_voterId].canVote, \"Sorry. You already voted.\");\n        uint candId = _generateHash(_voteTo, _constituency, _symbol);\n        require(candidates[ballot[candId]].exists, \"Selected candidate not found.\");\n        require(keccak256(abi.encodePacked(candidates[ballot[candId]].constituency)) == keccak256(abi.encodePacked(votersList[_voterId].constituency)), \"Sorry. You are voting for a candidate who is not in your constituency.\");\n        candidates[ballot[candId]].noOfVotes++; \n        votersList[_voterId].canVote = false;\n    }\n    \n    function getElectionResult() public view returns (Candidate[] memory){\n        require(!electionOn, \"Election has not ended.\");\n        return candidates;\n    }\n}",
  "sourceMap": "25:3392:0:-:0;;;105:5;80:30;;-1:-1:-1;;;;80:30:0;;;936:129;;;;;;;;;-1:-1:-1;959:12:0;:25;;-1:-1:-1;;;;;;959:25:0;974:10;959:25;;;1010:47;;;;;;;;;;;;;;;-1:-1:-1;;;1010:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1010:47:0;;;-1:-1:-1;;;1010:47:0;;;994:10;:64;;959:25;994:64;;;;;;;;;;1010:47;;994:64;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;994:64:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;994:64:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;994:64:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:64:0;;;;;;;;;;25:3392;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25:3392:0;;;-1:-1:-1;25:3392:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;25:3392:0;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}